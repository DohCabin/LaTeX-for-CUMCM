%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Simplified Chinese
%%Title: procedure.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: keming yang
%%CreationDate: 8/8/2015
%%BoundingBox: 162 473 416 797
%%HiResBoundingBox: 0 0 594.7500 841.5000
%%CropBox: 0 0 594.7500 841.5000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 92 128 8%%BeginData: 3832 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDA8FFA8FFA8CFA8FFA8CFA8FFA8FFA8FD4EFF7D7D
%7DA87DA87D7E7D7E7D7D527DFD4DFFA87DAFA8527D537D59A884AFA97D7E
%FD4DFF7E7EFF59F8F827F827527DA98453FD4DFFA852A984A87DA87E7E53
%847EA952A8FD4DFF7E7D7D7D597E7D7D597E7D7D537EFD4FFFA8FFA8FFA8
%FFA8A9A8FFA8FFA9FD55FFAF84FD54FFA87D7D7E7D7D53FD057D53A8FD4E
%FFA87DFFA8A884A9A8A87E84847E59FD4EFFA8847DF80027F8272727F87E
%7E7DFD4EFFA87EA9527D53532E522E527EA97DFD4EFFA8537D7E597E597D
%537D597D527DFD4FFFFD06A87EFD05A8A9FDB1FFA9FD54FF7D7D7D7E7D7D
%5359FD067DA8FD4CFF7E84A8A984A884A87EA87E847E7E537EFD4CFFA852
%2753522727F85227F8F852F8527DFD4CFFA87D275928522E2E2752275252
%52537EFD4CFFA87E7DF82EF8272727F827270553A959FD4CFF7DA97E5252
%532E5352592E532E84847DFD4CFFA8527E7D7D597E597E597E597E595959
%FD4DFFA884FD05A884A884A8A8A87EFDB1FFA9FD0DFFA8FFCAFFA8FFCFFF
%A8FFFFFFA8FD3AFF7D7D7D7E7D7D53597D7D7DA87D7DA8FD05FF7D53527D
%537D537D537D527D52595259A9FD37FF7D84A884A8A8AFA8A97E84598452
%FD06FFA87D272752522EF85252FD04277E59FD38FF7D525253F8FD045227
%0027277D84FFA8FFA9A9537E5252275252272752272E2852597DA8FD37FF
%847D847E535259527D5259525959AFFD04FFA97DA8FFA97E05522852522E
%27AFA9A959FD38FF527E7D7E7D847D7E597E7D7D5952A8FD05FF7D84A8A9
%59272E53525352537EA98459A8FD38FF7EA884A87EA87EA87EA884A87EFD
%06FFA8527D597D537D597D537E7D7D537D53FD4EFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFAFFD3DFFA97EFD13FFA885FD40FFA8527E7D7E7D7EFD057DFD
%08FF7E53A87D7D7D7E7D7D7D7E7D7D59FD3AFF7DA98453537D597D597D7E
%7DFD08FF7D8452A87D7D527D537D5253597DA8FD39FF7DA87DF8272727F8
%27278453FD08FFA852F8272E2705F8275227F85259AFFD39FF7DA9847E7E
%A97EA87EA9847EFD08FF7DA884A97E847D847EA984847E7DA8FD39FF7D52
%7D597D537D537D535352FD08FF7D527D537D597D537D537D537D52FD3CFF
%A8AFA8AFA8A9A8AFA8FD09FFAFAFA8A9A8AFA8A8A8FFA8AFA8FD41FFAFFF
%FFA9FFAFFFA8FFA8FFA8FFA8FFA9FFA9FFA9FD47FFA97EFD53FFA87D7D7D
%847D7D53FD047D7E7D7D7DFD4CFF7DA8A8A984A9A8A984A984847DA87D7D
%FD4CFF7E59F827002752272728522727F8277DFD4CFF7D842859527D5259
%527D52532752527EFD4CFF7D527D537D537D537D527D5359535353FD4EFF
%A8FFA8A9A8FFA8AFA8FFA8AFA8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFC
%FFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFC
%FFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFC
%FFFDD7FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2015-08-08T22:13:03+08:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:ModifyDate>2015-08-08T22:13:03+08:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>184</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWI/mFqBe2tfLkLlZ9bLrdMpoyafFQ3TVHTmHWEEbg&#xA;ych9nJwjZYyNB5J+Ymm67YanbReS/IehapZtbSPO89tbIwnDBFWrNCAAGD/5W49xaYHoGsSHUpBZ&#xA;f4z/AEtbWeo/lzoiQy2ZaW4is4fTS9dfgQuskoESvs53NKkdhhET3KSO9mGqaB5cm0y1htPLlhZ6&#xA;vq7JbWkUlpbM0MkilpJG4qVb0I1eQ778ad8skAByYAkl7VoOk22j6JY6Vap6dtYQR28Ef8scShVW&#xA;vegFK5hnm5AR2BLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYv5y8v+SZyus+YuNuYl&#xA;S2F4ZpIPhZzwjJRlrV32HjkoyIQRbFzp35Ld9SH/AEmXP/NeS4yx4QgbCL8nZ5bsT3LWyQzGOBpL&#xA;2b94gUfvF4yH4SfHfLJkgCt9mEQDad+X/wDlUVlrNvPpmoQNqUhFvbGS5eRi0zKAieqTQuwUbdem&#xA;VmRZiIeh5WzdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYn+Zd1DaaFZ3M8ixRRan&#xA;Ys8jkKqj113JOwyUOaJcniut6v8AmnN5gvpdM87aRBpEl9BLaRM9tVLIeoJYfihlJk+wak9ehy/h&#xA;N82qwklxrX5zUp/irTpZBPKY5FfTwvolVWIOoMe6upZqV+E/7HGpd62GSeXtV1d/Ltja+Y9Wtr/W&#xA;31uxZfSlgZmiOpwNGAsNB8K9dsn/AA7seuz6NzDch2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVKtc1/yrpwW113UrGzFwtVgvZ4Yuag9QsrLyAOKpH/iP8of+rvoP/SVaf8ANeS4iigg&#xA;9P8ANv5Szy3nO/0eBYpzGhmns1EgVFHOP4zyQnocnMEAb9GEaN7I5PNH5SRuHj1nQkdd1Zbq0BHy&#xA;IfIcRZ0GWQTwzwxzwSLLDKoeKVCGVlYVVlYbEEdDkUr8VdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirxv8AO2+86WV1f3flC6istTttKhnmuJkSTjbRTTtLwWRXQtQDqMnAGtmMnkHmH87P&#xA;NzN9Z0/zVBZWtwqy2hnt4eJRUf1Rw9KWblyj25ClfhpWgyXExpLrn81PzLFhJAnmu2iv5JDfw3DW&#xA;oKtp7hxGArW0yoDJwHxNyFR1Aw8R71oJ95L8x/mL5g1nSLWPzRBeNZSC812JYQizWUxVoyjiAJ8Q&#xA;JAUNX5UoLIGRPNhIAPpD8sST+XPlgk1P6LtP+TK5jy5twZNkUuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVhfnTyXrGsam15YXFqIbiyNhd2t1HIwZC7sSrxyIRUSEZZCdMJRthP/KhWFuL&#xA;cadoQhCGJUFvcABGBBA/fbVDt/wTfzGsuOPcjhK0/kXJMskLafoVFiFox+rTBjFQPw5CXlSpqd9z&#xA;vkjMdyOEphpX5Ra1pFy91pkGiWdw8SwPLDbTIxiQAKlRJ9kcRtiMoHRTjJejeUtGk0TyxpWjyyCW&#xA;TTrWG1aVRQOYkCcgN6VpXKJHdsCbYEuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVh/5&#xA;gebb7y99UeG7tLGzMN3dX95eW012EitERzxjhmt2/bNdz8sIFoJYbcfnRBbXVpbXHnPy/by3sQnt&#xA;/rGnXUK8CZVPN5L9VjZXtpEdXIZXHFgGIBnwDvY8RQw/M9dHt9Svf8caBdx1N/dKIJ7x443CAelF&#xA;FqMkgi+JeIVT1+WWTAlXLYMI2PigT+feq3Ud0mkavpd9dRadNqluv6Jvo45YoVY7O16KHktKUrkf&#xA;DB5Flxnue4xX9o8aP60Y5AGnNdqiuVmBZiQYh+Ynma4tV0yy0bVGt9QmuJHnhtPq8lxJAljdzKqr&#xA;PFcqA01ug5BK9u+SGOVXWzEzHK93itv+efn5Lm1tNTi1yyuJuRdXGmqwX03eMKr6YvJnooAVj1+j&#xA;Bwptv/leX5gR6lPZXdr5gs2ggmcGRdOb1Zo4TMkMXDSyrc6UDcqbilagE8I7kWoyfnf+Z/7v0rbX&#xA;CWjg5Rulgh9ef0PgBOln4VM5U7E1G4G1TwjuK8Xm9l/K3zJrerXF8mo3819CbWyu7Y3McEckf1lG&#xA;Zk/cQ2wPQfaWuOSAHJYSt6DlTN2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVinnrypqOuNYzWMltW1W4&#xA;imtryIzRTR3IRWUgMnTh365OEqLGQth95+VGr33ofXNL8vXP1aJbe29awEnpwpssacpDxReyjbLf&#xA;EHkw4ShT+T19KjwLpXl+JIwIv3Vj6ZCfA/EFJFIU0Wo6GmEzj5I4Shrj8i9SaK4+qWmjWNzNbTWi&#xA;XNvbSI0cc8ZjYIFmC8aNXj0rv1weIE8Be1wKywRqwoyqoI9wMoPNsDFPzA0jU7kaPf6VYC9u7C+9&#xA;a4RWSOQwG0uoAAz0rxkuAaV8cnCVHyRIPO/zB8n+cvOOgfoeXRLi0jM0czv6kEnIR1+AgSxmjV3o&#xA;ctlIENcQQxQ/kfrZkjMulXrT/W471v3sBVvQBAUI0rqKFxRtzTY13qPSndkfkv8AL3zF5T/SX1LQ&#xA;r2f9K3Bu7n1p7PaVq8uHp8KKa7L2yUZxixlEl6B+X2k67b61q9/qdg1gt3HbxwRu6OT6PLkSUJA+&#xA;3leWQLOEaZ1lLY7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlHnHUrvTPKOualZsEu7HT7q5t3YBgJIY&#xA;WdCVPX4l6Yq8n89/mrqHk7VrLTbzWNQupb2Iyo1tZWbhfi9NAwKg/HJRR2qRlhgAwErY7H+c9tpU&#xA;t0V1PWLeS6hl1S5Eun2paqSeky8GZmUlh8IACdTXrlk5CVX0DCIq66vQPI3nXXtT1nRjNqEl3p2r&#xA;W1xKbe4t4YJI3hMdN4hvQsw2JU9QSKHIzxgCwyjMk09RylsSjzjqV3pnlHXNSs2CXdjp91c27sAw&#xA;EkMLOhKnr8S9MVeN3f54W9vrGtaU2vamZ9CmS2upBYWJjeSQkcYj9pqcW6qK0otSQDZwhjZSG9/P&#xA;O3h8wSzPqGqNe2d2dGMwt9NIHJxV2h9XkqcujsntWvJRMS9PD0thW9o67/Pm/tNettEn1TUFurvU&#xA;H0yCRbXTGi9RGjXmW5g8CZR0B799sHBG6TxF7V5B1m/1jyva3t+4ku+UsUsqqEDmKVkDcRsKhd6Z&#xA;XKNFnE2yHIpdirsVdirsVdirsVdirsVdirsVdirsVS7zJpB1ry7qmjib6udSs57MXBX1PT9eJo+f&#xA;CqcuPKtOQr44qwW9/LHzLfXEdze32h3VxDQRTTaRLI6AGo4s14SNz2y/xQ1eGhj+XfmB3kha+0c+&#xA;gBBQaNOw4cVcKKXRAHxDbJ+Jt+P1seBM/L/kvWrDzBY6nf6jbT29jFNFFa2mn3Fsf33Dfk804oOH&#xA;TjkJzsMoxpnf1qL+WT/kXJ/zTlXC2Wl3mSyj1ry7qmjiSS3OpWc9mLgwSSen68TR8+HwcuPKtOQr&#xA;448K2wmfyJ5nnEizahpMqy19QPoty3KoIPKt2a1BOXeJ+PwWrhQ6/ldrkrogn0SiDkrNosyhSG5A&#xA;DldD9pi23fHxAF4EXL+WnmyVw8uqaPI6/ZZtLmJHyJvMfHXwmX+TfL8+gaBDplxcJdTRtI7zxoY1&#xA;ZpXLmiFnKirdOR+eUyNltiKTvIpdirsVdirsVdirsVdirsVdirsVdirsVec/mJ+YMnljUrx7zVot&#xA;H0aws7KeS4azkvHaW8nuYqERtUKPqy0+HqckAgljC/nbpbXE1uvnS0EkHpCTlpU6gG4BaP4i9DVR&#xA;y9huclwjvY8RQem/mhplnLetZeb4JJLzUvq9wG025kP12XkoiWr7L+6alPh2PbLZkSq+mzCI4b89&#xA;2ovz4jlvRZJ5ngFw12thGjaTP8Vw5oighz9o9D33yAhHvZcR7nsPkvV7rWfKGiateBRd39jb3Fx6&#xA;Y4p6kkSs/EEmg5HYVyoimYKc4EuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVgXn/wDL&#xA;O481Xs8wu7T6leWtvaXmn3trLcRv9VlnljesVzbftXH2SDuARuMnGVMZC2MSfkJM6uGfReUpUySj&#xA;TbkSsyABGMgv+ZZePwmtQdxvk+MMeEqjfkZfFWVZ9HjV7kXsgj065j53C1Alfhfjk1GI37Ejvh8Q&#xA;I4ChLf8A5x3WC6F0h0V7pZEmSeXTrqV1ePdCrSX7Ece1MHiDuTwF6t5T0WTQ/LGlaNJMLh9NtYbV&#xA;p1XgHMKBOYWrceVK0qaeOVSO7MJrgS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2015-08-08T22:13:03+08:00</xmp:MetadataDate>
         <pdf:Keywords/>
         <pdf:Producer>Microsoft® Visio® 2013</pdf:Producer>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Lenovo User</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>594.750000</stDim:w>
            <stDim:h>841.500000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91</stFnt:fontName>
                  <stFnt:fontFamily>#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 5.016;PS 5.006;hotconv 1.0.67;makeotf.lib2.5.33168</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>AdobeHeitiStd-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>默认色板组</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:a28fcfb4-b0f0-6743-918e-f2c8338da5cd</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:a28fcfb4-b0f0-6743-918e-f2c8338da5cd</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:a28fcfb4-b0f0-6743-918e-f2c8338da5cd</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a28fcfb4-b0f0-6743-918e-f2c8338da5cd</stEvt:instanceID>
                  <stEvt:when>2015-08-08T22:13:03+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -841.5 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.5 li
594.75 841.5 li
594.75 0 li
cp
clp
gsave
0 841.5 mo
594.75 841.5 li
594.75 0 li
0 0 li
0 841.5 li
clp
271.5 88.5001 mo
171.75 88.5001 li
171.75 57 li
271.5 57 li
271.5 88.5001 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[101.25 0 0 33 171 752.25 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 135 
/H 44 
/M[135 0 0 -44 0 44 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 135 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 135 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 135 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 135 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
li7"eQjrs&!!VTeTEt/q!!;EcVZH,bQN550!!9Y>g^O5eklAL)e-H$Ul2\j*bQ50QX8i5GfIXZd!\+Zi
li7"ui"iX7rs.ljk67mirrUmSN;rqhpFMdbrtOi#!XKPWP8=0*nc8Rf!!A>err`)tJcP-;!%"!`q^_du
"U48n!#)"@neV6,m/R+hW!2GiR/kJ3!"ZOigFN=Dli7"k^D>96!"S>q!!C7Fb67kK\H&`3!%$5J]IX(5
"mc3h'AjS3('"F&!!!/b"fhgZ!0.$Z&,%QE/-$XU!!!<((6fR7%fQIs!!!+d"oST)"G[!7!!"=A/FG%i
.L#/=!#)IMjV@gtli7"g[0>@iV?"C3!"["!c7Ar7li7"kbSJ26!"S>q!!C^S^'+K>`W2Y3!%$\WY:K](
"mc3h'C6L3('"F&!!!/o"eGnZ!.k1O!"Y2C!#tS2p](:"OVRp,r;c<e!!AGhrWN9)L&g-3!%"ElmjnJh
"mc3h'<Du3('"F&!!!//"l9EZ!5SX8&&TsE/-$XU!!!;J(<70j%dX/q"4IFg"TS\E!20Am-0$P\/-.4(
li7#!lP?B6!!;Ke!!MlsT*=9UO9"kP!"Y2C!#t8)!!nu.q%`r?li7"fT`sri!!JJcdf9@oYq4lc!@e9>
!!!\C(>0H'!pfme"Mk8h"gS-8!!!PV/A`q<)sdP)#hTp(('"j2!!!,Z"gS:3"O[:7!!">7/>F`s.L#/=
!#,,CRMGl)li7%h"d0&Z!.k4C!!!Ol/-$XU!!!:l(A\dH%dX/q"/#hg"TS[g!7UuK-*Sr\/-.4(li7#!
\/*d6!!;Ke!!L(@dKQlU[/^1;cRcsb!#t8)!!q0l]+tAVli7"fhZ^=i!!L[LPlLe1mjt7c!@e9>!!!],
(7Q'>!qu]g!!!.a"o\LR!9X=^&"P9E/-$XU!!!;$(@;k;%dX/q"0Dag"TS[t!65'>-+tk\/-.4(li7#!
`>6]6!!;Ke!!LOM`<EsUVuQf.gaolb!#t8)!!qX$Xqh!Ili7"flij6i!!M-YL]@E$r%+0c!@e9@!!3-#
'9O%1!qlWg!!!.a"oSFQ!9aC_&"G3E/-$XU!!!;#(@Dq<%dX/q"0;[g"TS[s!6>-?-+ke\/-.4(li7#!
`"pW6!!;Ke!!LLL`Wa$UW;lo/gFTfb!#t8)!!qU#Y8.*Jli7"flNO0i!!M*XO9#+W!%!dZ!@e9M!:g*i
'9X+3('<h&!!J_op]ZQUgAh3aW@[9b!#t8)!!ohFi>)D'li7"f\HUXi!!K>&])VgWaXkRc!@e9>!!!\[
(;Uad!pfme"PEsh"j-h8!!!Pn/?16$)sdP)#k/V(('"j2!!!,r"e#Sp"R5u=!;c`r-'Be[.L#YKo)Jb(
OVRouli7"gR0EBiM?)E3!"Z"Zl7;oSli7"kYSQ46!"S>q!!B_7g'%HZWW9[3!%#];b:EZD"mc3h'@7N3
('"F&!!!/S"hFlZ!1a)i&*GLE/-$XU!!!;n(8DWF%dsDs!!!+`"TS]"!.k4=!!"=2/H%+#.L#/=!#(q>
oG.E.li7"gV?Q;iQN5>3!"ZIgh(/OFli7"k]b]-6!"S>q!!C1Dbln(M[fET3!$TlD^+9:7"mc3h&`"51
('"F&!9=<c"kE[7!!!u2/=nBm'^G`!%K.'.('"^0!<)ru"Hiog"82_H!:9ad$C;5$%0-Rr!!!1p#keN(
"R,md"/c1f!L3Z0!!!A8%GhNo"mH!e"ht>o#QP"l!!!,A!R:_R!3cHR~>

%%EndBinary
grestore
np
169.37 82.56 mo
251.57 82.56 li
265.75 54.21 li
183.54 54.21 li
169.37 82.56 li
cp
level3{
gsave
[136.3 0 0 40.088 169.37 54.21 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*=`/O*=`/O*Y/>Q*tJJS+:nYU+V4bV+qOkW,7t%Y,S:1[,n^@]-5$I^-PHX`-kcaa-kcdb.22sd.MN'e
.hr6g//AEi/J\Nj/f+`m/f+`m0,Ooo0Gk#p0c:2r1)U>t1E$N!1`?W"2&cf$2B)r&2]E&'2]N,(3#i5)
3?8D+3ZSM,4!"\.4<=e/4Wb"24Wb"24s11459L:55TpI75p6R866Zd;6Qum<6R)s=6mE'>73i6@7O/BB
7jSQD80nZE81"`F8L=iG8gb&J9.15L9IL>M9dpMO:+6VP:FZeR:aunS;(E(U;(E+V;Ci:X;_/CY<%SR[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[
<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[
<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[
<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.71 ]
/Encode [0 1 0 1 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[136.3 0 0 40.088 169.37 54.21 ]ct
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~*#oq=*??1B*ZlIG+<VdM+X&$R+sS<W,U=Z^,pjrc-RU8h-RU;j-n-So.Olnu.k</%/M/P+/M/S-/h\k2
0JG180ekF=1,C^B1c.'I2)[?N2E!HP2`E]U3&ruZ3]];`4$5Vf4?P_h4Zttm5!M7r5X7S#5s[h(6:+"+
6UO706q'O57Rfj;7n6'>7n?0A8P)KG8kVfM9MA,S9heAX:/=Y]:f'tb:f("d;GpCk;c?Un;c?Un;c?Un
;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un
~>
<~%1NaV%LrsY%M''\%hB0]%hB3_&.fBa&J5Te&J>]h&eYfi&eYik',)#m'GM5r'bqGu()@Z$()@]&(Ddl(
(`4),(`4,.)&X;0)B'M4)B'M4)]K_8)]Kb:*#oq<*??.@*?H7C*Zc@E+!2RH+!;[K+<VdM+X&!P+X/*S
+sJ6V,9nEX,U=W\,U=Z^,pai`-71&e-RU8h-n$Jl-n$Mn.4H\p.Olnt.Olr!.k<,$/1`>'/1`>'/1`>'
/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
~>
<~!WiE)!WiH+!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i2"U,&5"U,&5"U,&5"U,&5"pP89"pP89"pP89
"pP8:#6tJ=#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\A#RC\A#RLeD#mgnE#mgnE#mgnE#mgnF$47+I$47+I
$47+I$4@4L$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OR%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
2.16 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
169.37 82.56 mo
251.57 82.56 li
265.75 54.21 li
183.54 54.21 li
169.37 82.56 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H)
%%Title: (JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H Adobe GB1 5)
%%Version: 5.005
/CIDInit /ProcSet findresource begin
15 dict begin
/CIDFontName /JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (GB1) def
/Supplement 5 def
end def
/FontBBox {-163 -283 1087 967} def
/XUID [1 11 9273739] def
systemdict /languagelevel known {mark {systemdict
/version get exec cvi 3011 le {currentdict /XUID
undef } if} stopped cleartomark} if
/FontInfo 5 dict dup begin
/Notice (Copyright 2006, 2008 Adobe Systems Incorporated. All Rights Reserved.) def
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 30284 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 10 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-12 -0 767 779 552 564] def
/OtherBlues [-247 -231] def
/StdHW [92] def
/StdVW [113] def
/StemSnapH [80 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 1
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [79] def
/StdVW [83] def
/StemSnapH [62 79] def
/StemSnapV [62 83] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 2
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [50] def
/StdVW [50] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 3
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 10 dict dup begin
/BlueValues [-10 -0 767 777 552 561] def
/OtherBlues [-232 -222] def
/StdHW [85] def
/StdVW [101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 4
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 9 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [101] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 5
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [61] def
/StdVW [70] def
/StemSnapH [51 61 71] def
/StemSnapV [60 70 80] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 6
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [91] def
/StdVW [99] def
/StemSnapH [79 91] def
/StemSnapV [85 99] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 7
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-12 -0 766 777 551 563] def
/StdHW [91] def
/StdVW [116] def
/StemSnapH [77 91] def
/StemSnapV [83 116] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 8
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [116] def
/StdVW [91] def
/StemSnapH [83 116] def
/StemSnapV [77 91] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 9
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [40] def
/StdVW [43] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
3476 <051C60D8A8C9B5EE31764DF0E84FBF6C7E94C854BD6C99AB2933F98BB5
8F213B0370B53AD69B293C652DB232D73A28C13721290C58DFE6EFC9EBC1710C
9D415295369C5A05C0DE19DDA9E049512B8B347593853E5E5B21E62D0AFFD4A6
17420B82F911FBC56139237E51134CD57A8A30235F0A8B1CCAB1E0320CB8D80C
C8A3786BC98E7BD79217EA1E0786B2C6652E2EBBB743527C5FF5B60CB28B9B6C
C5BC367BE04A3B8A0AF65CB5A256A5DA0CCDD8C25473D04BA2C6C15DAEFB6DB1
2AFAAB145EDCB9B9CD240646F635F4A0D76C635803CA0F1EE878C821AB023E79
34836DD0C7B61464DAD3A6F6E0AF4A0D8317A211A8E752AD3F0CB7EA1575D8B3
AE81E20A08CD90C344F9E682F155719F77912BD80DDEB52496025F9841EFEF40
8BA6365D24D486C76BC073A79A2E30B971E41A1B450D9244F75577CA9DB4F86E
82A3388A1842129F4AEDE5BCCB545DF3573C074CCF11AE23515E6295B1A2E883
DEEF449AA4BA9DDF58614968369EB8642C5C882A378A8AB72C771969E0C6BC6F
16EF4D1CC9D16233A9116474C680B71EEFE2CA761F7B2A603B1D44D0D03ED796
11F5CDC9B40EBAE815FDB29E1E45011904090810CA5C74DD1BDF0A1800C9DA75
7FB6CE5F11656B3F779021C94FFA3EC2B155BF1F7A2148B4D9271AC6DAA23613
6D85EAE568A5763CCB3E2FED1AFB45CD5280E508773F82AC5A8231281F61B9DF
AA3D570242D49D9AA13991F12CC8BD74D31848FD4A1A3E05246714CB1B9DC03D
B8DFD78F22986404812C2F72235CA0B8DC54E2974B9E05AE3AD4FC992ABFA6A6
6FD1DCCF68813B9B704766EE3FB5C826F98C49A2C1FF787761F43D53EA410869
8F819F7BA37A3FADBD724EE3C03D8ECD5998BA2ECE2073D67A73DC578ECD99B0
EBFD3141C62149A2BB6BB43605593116906B9A13F4DEEB5A4F8D7FB623512450
8CB12A6A10CBD30A63CDE27E85> |
2316 <051C60D8A8C9B5EE313343F214AD014BC77CBDBE7FCAC42C668272BC71
ADFCAA40F0933032A123F2D655E1B298FA64A499017D3899D32BBD5F7B995E39
F3857622A9E3E9806F8437B39DB831FA3BE6D3A2DDB02DC78B20B8FBC805E9B7
D211F721D581D5C1AC8389774C30F9886DF2D2E0E24F66F960A96C6847F7DC65
C431A2B4B828C22F9CD4B8564EACA06F3D057B97B66020EDAFC2FFFE7F784C0A
3509EB3CF8C7B28328951CB602657933A5F4CACA42407355F11665B0ED0E8BCC
D95D31564080BB934C7C3AC218FA26BFA976D870B214CBAF4A5C2FBA50C46A9B
B3E1FB16C2C4F73219E8C4AEA36B771B5D2B7863D46C83F48090D0F3B9E3F26D
47AEF9CCF580E0DB925C2153984F9ABCADFA8102D5009A84A9E5ACF4A43B5B2E
00722BFF0756669268F7FB5457A48F8774D089EBEFE572442C09D8FF3C1BC88E
E9A0DE90115FB1C5E7ADC0A7101195DFEF1E76143C1822F7C5822E4FDA152581
144420E1C738347ED606355D5A097C1331A54A1D4C4D83AF7ED5A304FD6B82D1
C6F724A520978EF89FA99C9E918F2222378B0514693DBE3EB95BFAF2B1EF6757
E66CA65FDC34DE5AF60F91797C327FBD01A36470ED7542ED1FBB2BA5166F5A62
16072A160533D500A6736347BC5DC3E63A6D8947757267F946F54D6E9A963B0F
DE8736F7CBD86925093E299382E8758AB9A18B764E9A8C9E42B3F4032677B5D4
F963029AC8A34DF5CA9BCB0254C5A6EC1423E9A43288912C11DD7A2C154A4087
452700C01C176BA6983F02E11566546DD476D33F8A025EA5F22596442BB761DE
C0CA7AB20CCAAC216D1AE2DBB3B4743EA2B901CD4D39F2630DFC4C8B5DF09B22
B1254F7DA5AD0500> |
3451 <051C60D8A8C9B5EE313F809961E96D2B1E481B3A7E6CAC41516539A9D4
8E3C24D507D77C9BF20DD42558A911AE44B507F47C99A15779803D29BDBB3BE1
4E172C0BD5261938616DEE856C3C03FB59E30388DE74C5056CCA3835499295BA
F2720491E1985D8C3A18CB1C65F08791B54077306D1CD4D511C28A5DECD033AF
B4ECF937D559989D2EF587938BED7FA41537CDC1943CBEA313D3F4D7CE8B6CE8
78ABC2062717660F9CB98349B4AF6CFE7622952108B94AA44353142CC38DB8E5
3E8CCF1174889A62C70F6242443769616719A73978EA1D15CF4915CEF898BFDD
7967FE098AC73E6FC06F649A94DD15E76B6C63085295C1BF02EA2C6A136E0F63
F320607C913D1DA5A4E4859F45397AB5AB308F34D8FCFFA905140D4A4E734799
397A0BAF2C958EBB7DD1257F61A5C573400B25BB3AE8F274C052FB7FF0A77601
AA3AEA077BA15D90AAE379FC0329B53A7DCA309FBDB5EB04AF7C9A6E48F0D035
56B27965BA54711A39343D8E4753520C371723B23DB5FF28D9019452BEDC89F7
E58CC831EF673D63CDEE7BE92F1C538DD2A5E57C4B76BAC6D85F25F233A7D909
1DA8F1CFBF590DB48888347F9C86AE84CDB66BDD15481DEDD1E18D770FD202C3
5C8E66A412A94A1786BBDF2932E71C42852662C69769AE98A0E72BB9675B7E05
EEFD74BE5FBC08E656C1E4BB06C5F9011EB66B602945AF09F9B4B66579DE0590
38E7781ED84D02388D09A2884D28557F633F2D1D25FFDAC9D119D61AB2FB45EB
A415E525566E7D8CF6F0F9C5C79E703B28E00761A9AD5AF60A2A6F1C018D19E5
F940F9AC8A1C7124F029270B9C9104E1A84A726839EC4C54869764021DCE93AB
D5027F550BD3E34D5598F3AE2D3C7E56F32C9A5E81D0576983F631E782094A34
609333FACB11790E35299D5541779E54D4AAC6BEAA2589F3A165C87CCD91EB3C
B7161EEC7D722EFBEB9DAF23FFDA304924E460B66D41D3CD29A5015E36EE1D16
14F411D8626901DD824BBCE5D8DA3C492876D68FE18A1938AFE903116106B1EF
8C24D444C7916ADD00FAE538CC0A72> |
3270 <051C60D8A8C9B5EE31941216EDE42F89D2B6CE08D501E3950F8E63CD17
0161E6F948B7292CF388C13BF8B7DD49F03EE743EE553C8A867416B3D6FCCD6F
0901F73714AC4408156D023C5E940DD13E2B05283791B76BC76F0CBD6760BA60
C3DAA81DFEE2BAE2D97B569C2E9F36A7D0A03D11BED49F4E> |
0 <021C60D8A8C9B5EE31016ECB81E0C1366BAD401163892378F09CCEE0154E6
2994282057923F54B325CC9A5AE05541130069BD6350B359AFF79DCF15A13080
B576C0432E7718B13311A2748A284DCCD3104ED44BDC470FDD3EC6A57500D66E
6B543AA> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H /Identity-H 0 [/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12.025 -1.47264e-015 -1.47264e-015 -12.025 0 0 ]msf
193.8 72.0493 mo
(\015\224\011\014\015{\014\306)
[12.0249 12.0249 12.0254 0 ]xsh
263.25 136.5 mo
180 136.5 li
180 105 li
263.25 105 li
263.25 136.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[84.75 0 0 33 179.25 704.25 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 113 
/H 44 
/M[113 0 0 -44 0 44 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 113 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcP9?!<jm</--jnrVus%'UKR8&c;V/#P\Iq"TS\d!3#qu(>CCP/-H+[!!!GP(<I<p
"9\])"2>#k"fq^_!!!k2/FtCq"U+l+%@%\3"9\])"I0/^!1Elf)!WZR/-H+[!!!J`(:k7a"9\])"O71l
"hOc_!!!kA/EA>b"U+l+%AXd1('FaC!!!.f"TS^b!!!l3/=e<p"U+l+%I4e1('FaC!!!/X"h=fZ!5ed:
(r7cR/-H+[!!!J7(?6/5"9\])"Jl:l"d/la!!3-#(mQWT"U+l+%JCR1('FaC!!!/c"g/$Z!4W"/(sFPR
/-H+[!!!JB(>'B*"9\])"L&'l"e>Y_!!!k$/-#hU"TSN3PnjK*"98E)pB@/mj8c.Z!#XHA].='g"TSN3
bneD:"9\i-!!L%?f*/5Ui;`ipUFc!f"9er/!"G2/"9\i-!!JPjo)P3Z!#XuPX=OJX"TSN3g_RI:"9\i-
!!LRNa9B0UdJs7aZ7P&f"9er/!"G_>neM?2"98E)Q3@6lMuWhpq(/'f"9er/!"J60Wtkg@"98E)h$(=m
aoK<Z!#WO'eLUh,"TSN3ZPMR:"9\i-!!K,%nHG'Ur;Zm!!#UtP"9er/!"JW;TG@Y5"98E)kQS*meH!)Z
!#Wp2at*Z!"TSN3^)#?:"9\i-!!KM0joq:Un,NG*Pq2n=!sJZ)%@%\3"9\])"SW(l"loZ_!!!kj/A!G9
"U+l+%F#[1('FaC!!!/:"kNpZ!9!nX(o&YR/-H+[!!!In('FaC!!!.e"nM__!!!l$/?CB*"U+l+%GV`1
('FaC!!!/I"ipkZ!7CiI(pY^R/-H+[!!!J((@i4D"9\])"I92k"cNE])#5_R/-H+[!!!Jo(982R"9\])
"Pj6l"j-h_!!!kP/Cc9S"U+l+%C6i1('FaC!!!.u"n;bZ!;um!!!!k$/-H+[!!!K%(8)EG"9\])"R$#l
"k<U_!!!k[/BTLH"U+l+%DEV1('FaC!!!/+"m,uZ!:Tsg(mQWP"Tno.!"G2/"9\i-!!N$"T*=9UW;lo8
gFTrf"9er/!"I0gaVG!^"98E)^BN3mX8q2Z!#VI^o.1"J"TSN3PnjK*"98E)Pm-aZRK*=)l7B"f"9er/
!"I^!\eYDO"98E)c3;8m])^7Z!#W!mj=CE;"TSN3U_`M:"9\i-!!JSk!!S;]!#YM_SLamI"TSN3lP?N:
"9\i-!!M*]\HU+U_Z0ZR_(=+f"9er/!"H7Mit_b#"98E)V$6AmOoYF\!WW3;Pq3%A"TSN3p(j;:"9\i-
!!MKhXp*>U\,ZLGbUgmf"9er/!"HXXfG4Sm"98E)YQa.mSH/-Z!#UtP!!NH.!!!In('FaC!!!/r"ePtZ
!3#qu(u$UR/-H+[!!!JQ(<I<p"9\])"MY,l"fq^_!!!k2/FtCq"U+l+%@%\3"9\])"I0/^!1Elf''_$M
/-RL)!WW3-g_RI:r;Zg"c3;8mrrKe5dJs:L'XJY<(]Y'E!!**-V%*#*!!iH&!!/Ag!!8)Z!<Nu3(nMQE
%fHA.!=J0&X:5.7r;Zfuh#t:l!!::C`;kD~>

%%EndBinary
grestore
np
177.87 130.75 mo
257.24 130.75 li
257.24 102.404 li
177.87 102.404 li
177.87 130.75 li
cp
level3{
gsave
[112.25 0 0 40.088 177.87 102.4 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[112.25 0 0 40.088 177.87 102.4 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
177.87 130.75 mo
257.24 130.75 li
257.24 102.404 li
177.87 102.404 li
177.87 130.75 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 3 GetGlyphDirectory
4327 <051C60D8A8C9B5EE3177713598839CC545276E16956BD252DC0511C81B
9476587FF696885D65613235D37C005C17DF83B0ABEB83B354ED54F8A2A8CC03
155EF7B5918BE81B087131212033CFE9450CB11820659EBBE94367D4C145542A
2203EDD7C75B5A913D43AF91ADBFBF0FECC1E426DB39F11657CEA85E991A1432
BFCC6821B5F5778F82B2997056A5B0B8F0CC387BCDF5C6BBD3AEE61A22F93CFB
F8121036C019C3089DC6968BC8CC80EECF61B4F1905F56D46EB05F467AF8D2DF
D77F445930386D7EDF1B50F08DF8C6C76B2C645F0284E3B17140C58FE2B65B01
B4F0994DAC7BBABA09E563D869B96F63AE40D7A68F601A070FAA112239734B3B
A9BD45099966E9465DCD8402151AC4EC2E3C0D778E83F87C34EE6AC6C54BCBE6
E0B5F02A56155EA9581FC889807E90978581EAB8A1C01F872A022DC3A4F16B0F
5CA3957581F49622D005DDCDC832179398F79FAD9B04CBCDC59C32D41BCFBB0E
17BE5D30725A5F6606B8F08047D41D598AFD3261FD1CD6E9A1C161DB41E7B59B
D2F6BBC9E74CB60246F13E3FE8214A77EC833C1F069411376DAA7A60E9B244EC
F1EC5EEA7EE4358FC323E816EE3C9BBE588B827E6AAAF93265B721168DED2229
03C0E1> |
1321 <051C60D8A8C9B5EE31A2DB7749344F2B3F33D9AC87B46FDA4747DEFC2F
3ECB3B30C2CACA205868550128D75B9AABEBC55094F9257EA2017B913FA8D645
2CB3000D70C1D70E9E05B00C63F1B9A86CE189F4793DBDABB5E0C83F4849AD73
92059028E9B714A7DE7DC3DA18477FF069D4385D98D59B536F433D24A837EFE8
29129E3A2FC3AA39C855C07FC7CC03767A870798CE82C9408695CB0E9A4A50C6
3A19C8265D55702037D88BB774FE7110434CC2AA1742C668A6A4065E92D6D5E1
BC4498B9570BAEE87A5DA7C3298E568CC008A42E1095CBE579827E7F4ACA1C8D
51165F5A39A4FD395A144B155D0A8198A0D50E45744E98BB4100E5040F4F3C70
CDC963741C7EA9410CEAD55F7AF7E5A2836A> |
2520 <051C60D8A8C9B5EE3130BF4C507E79EB6A1D61750C6FD226316148E44A
901E7DF1F201AEDEF2CC221B58643004A862744737089255EA3F9DE86489CFDE
1163D6404171FDE6960C213651E9F3B0AF922FD55168FA038CC8652AE6010C61
BADD463E96EBA6CFB9228A089C71CC539BF21D0AE1E4849FFA95A5222CFE72C3
FD10441A0607651A0C25CE70B3F97ED70A27473CE50F091E7751EBB08CC7DF20
1327037829E069B4443088AD6D4A3A2A83B0E5791A750C83175CD6248DED2B07
941E890A42DCF0378B8B6CBA3ED8BEB8EC5F7242577DD9072E172E190FD8E13D
55DD3E6916A7AB201D76F9645789D467ED5B56FB1CA705D380B7F4B727A5BE2A
A266ED81AA8041554B917BF09422E0D9C84447BC87D595295BB21A128B6D817A
28A759F1169E418E2C8C9B216012ED028909FDE17731B339DE1EB0236EAEAAEC
13201BBBA0ACD005DD9A15FA7794ED918EED01F39992AE8785EFC183A5A69AC4
834C3A4AB93BB484B64E5B074D5ED2CD657061F08DB67DB21BD1578A93D997AB
837AA4C1EEE3165EEA815FB2CEDF9486384F6043933CC17463CDC9B62C947B37
735B9D0FD4580B8578E4ECFD> |
!
end
end end
%ADOEndSubsetFont
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12.025 -1.47264e-015 -1.47264e-015 -12.025 0 0 ]msf
187.8 120.28 mo
(\015\224\011\014\020\347\005\)\011\330)
[12.0249 12.0249 12.0254 12.0249 0 ]xsh
270.75 202.5 mo
173.25 202.5 li
173.25 159 li
270.75 159 li
270.75 202.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[99 0 0 45 172.5 638.25 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 132 
/H 60 
/M[132 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rVup*L(+.m"oA9""cEZ`#QP#)!!!+_!VQPR!9sOa$CVFj%0-S/!!!1p#j2Hn"T&0!"/GtW!MKMF!!"(B
/CuEQ%fHA-&$cu!('"U<!!!/2"jI2N!k/0I!!"Lb/Aj"=*rQ)X(;:Oa&,cLN"h=d:"NpeK!7WR'/-$ai
!8/-f('"mD!8[mU"TS\_!1NuP/=S0j*rQ*+(7#^9&,cM!"d&rg"S2VK!;nC'/-$ai!.ksd&,cK`"oJN(
"Gd'K!0Ji'/-$ai!1"Df('"mD!1O/U"Tef,!.k4I!/W9'/-$ai!0.if('"mD!0[TU"TS[i!9O9P/ESJ`
*rQ)5(?$#/&,cL+"l'7]"K2=K!3n*'/-$ai!4EZf('"mD!4rEU"TS\<!58HP/A<Y8*rQ)](:b1\&,cLS
"geF5"OI.K!8/p'/-$ai!8\Kf('"mD!946U"TS\d!1!WP/=%ge*rQ*0(6K@4&,cM&"cNTb"S_tK!.la%
*rQ(o(AnpJ&,cKe"nr0#"H<EK!1#2'/-$ai!1Obf('5!H!<3%P"Tei2"GHjK!0/W'/-$ai!0\2f('"mD
!13rU"TS[n!9!pP/E&,[*rQ):(>KZ*&,cL0"kNnX"K_[K!4FH'/-$ai!4s#f('"mD!5JcU"TS\A!4`*P
/@d;3*rQ)b(:4hW&,cLX"g8(0"P!LK!8]9'/-$ai!94if('"mD!9aTU"TS\i!0I9P/<MI`*rQ*5(5s"/
&,cM+"c!6]"T8=P!;lhP/Gq%!*rQ(t(AARE&,cKj"nDfs"HicK!1PP'/-6jm!<3%P('56e&,cKb"o8B&
"H!3K!0\u'/-$ai!14Pf('"mD!1a;U"TS[s!8IRP/DMcV*rQ)?(=s<%&,cL5"k!PS"L8$K!4sf'/-$ai
!5KAf('"mD!6#,U"TS\F!42aP/@6r.*rQ)g(9\JR&,cL]"f__+"PNjK!95W'/-$ai!9b2f('"mD!:9rU
"TS\n!/ppP/;u+[*rQ*:(5EY*&,cK["TS[X!;?JP/GC[q*rQ)$(@i4@&,cKo"mlHn"IB,M!<3%P/-7@R
*rQ(q(A\dH&,cKg"n`$!"HNQK!15>'/-$ai!1anf('"mD!29YU"TS\#!7q4P/CuEQ*rQ)D(=Eru&,cL:
"jI2N"LeBK!5L/'/-$ai!6#_f('"mD!6PJU"TS\K!3ZCP/?^T)*rQ)l(9/,M&,cLb"f2A&"Q'3K!9bu'
/-$ai!::Pf('"mD!:g;U"TS\s!/CRP/;GbV*rQ(j('"mD!/CaU"TS[]!:g,P/Fk=l*rQ))(@;k;&,cKt
"m?*k"98FR!;Z\P/G^mt*rQ)!(A/FC&,cKl"n2Zq"I&oK!1b\'/-$ai!2:7f('"mD!2g"U"TS\(!7CkP
/CH'L*rQ)I(<mTp&,cL?"ipiI"M=`K!6$M'/-$ai!6Q(f('"mD!7(hU"TS\P!3-%P/?16$*rQ)q(8VcH
&,cLg"eZ#!"QTQK!:;>'/-$ai!:gnf('"mD!;?YU"TS]#!.k3&/-$ai!/D?f('"mD!/q*U"TS[b!:9cP
/F=tg*rQ).(?cM8%fcV0!/(LW"U,$_!;->P/G1Oo*rQ)&(@W(>&,cKq"mZ<l"IT8K!2;%'/-$ai!2gUf
('"mD!3?@U"TS\-!6kMP/Bo^G*rQ)N(<@6k&,cLD"iCKD"Mk)K!6Qk'/-$ai!7)Ff('"mD!7V1U"TS\U
!2T\P/>Xlt*rQ*!(8)EC&,cLl"e,Yq"R,oK!:h\'/-$ai!;@7f('"mD!;m"U"TS](!.k4K!/E-'/-$ai
!/q]f('"mD!0IHU"TS[g!9aEP/EeVd*WQ3?!/)*h()@GZ!/UmU"TS[_!:TuP/FY1j*rQ)+(@)_9&,cL!
"m,sg"J,VK!2hC'/-$ai!3?sf('"mD!3l^U"TS\2!6>-?+M98H/-$C_!!!VI(;gmf$N0r)"NCVZ"TSYE
!42_,!Yj$![28lSqZ$U'ed\hm!!rK&!!1dVWrrD)f`7ZF!<Nts(nhcH&,Q>,$L/(j%0-\3!!!&f"IB5k
"76)K!.Y~>

%%EndBinary
grestore
np
170.79 196.65 mo
264.333 196.65 li
264.333 156.256 li
170.79 156.256 li
170.79 196.65 li
cp
level3{
gsave
[132.29 0 0 57.125 170.79 156.26 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[132.29 0 0 57.125 170.79 156.26 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
170.79 196.65 mo
264.333 196.65 li
264.333 156.256 li
170.79 156.256 li
170.79 196.65 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 11 GetGlyphDirectory
3673 <051C60D8A8C9B5EE31766A149EFDF5D12A4233FF1D1B609B819520AC26
AAA36FF00CF7AF3D3E4FB545B56996A797698B0D4E3F72B347671D9DD9C879D9
0729D301C0F7F2256E9B65EF6C74E74FC32C669BE3A55E669C674A990AD3AD8B
D14C6AC8A4C756595A88B37EC15DBD7EFB6688EA3B8288CEA88861AC0844F51E
1178F9994E46E62311FB80C58C82BF0712134DE5FE045D2B8B7145F649CDD062
DB719072C12B05E4ECFF52D2DF9AE21535318A1EF063EB3F94DF12C9007B9530
4318F96004801400BF7504FFD2A5D42642FF9C5B02F3954AA3F9A505D70131EE
977A3727A7B708741060124BFC4B12214F1BD0CD8FC11205A5024C4DE9F5EAC4
63D06E10727CD40F590FB42DF8711C4783D4B82EC7114C1BB2A641E0AD82F3C0
346D1FD0F1EA4660D18121C3B27C5F6662187682BFE2E5DA55C9AEA6996ACAED
4AD2D926908C9A778BE5E2653D98D66CA1D860698F52B6CEE3C6FCE95AE74E89
1AE5CFF71055A37BADF4C56B1F55514D2DAC634D17B510CA2B65073260A188AE
C7BB5BBBCD7FFC848614988274DD76D70FF81E3AA9B4E2> |
1878 <051C60D8A8C9B5EE31713EB88602A2F17B49B8BDDF83160C75F2D01869
340247E01CAD54C4D43F2813E69EC97653AAB00B4230FD7C21EC0C92D6E4CFBA
26D7F521A9DB36563801F88F2F2F7929CBCCC36CC7199414AE89DAC29E08A9AC
FD2EE6BF68F3F9808E4809072575C18F0CFB5D5E0C989C345D7B1BDC594BD8D9
736A93CE235DCB0C871F61D2230CD67C3E4041BA51A3150F5B9DEE95EA0941BF
AEFD0DC282D269945605C81D29F0108ACD939E7481907E677F3109616AA9B96E
01DF87934E026688347D01BA1A8DA962D6C97DC44C8F29CEF27F9FED8E212002
F7E3ACFBE66CE8FADD3EED8988171F5882E1E05BE16D0CAB6A75FBFB72AC9A89
D6AE75D238DBA895E06833FECB3AFE1874A682A0F85B188A568C54B3BFDC7437
893166468338D157FC3ABE74995FB18E282D94207FBDAAF28AD06B2B169A6445
66E8A3A16457C72777F021E40828803A8DC29196E45F36157CAC48812FAAD071
CF68AA1D904929E3F5662EAE5DD5> |
3687 <051C60D8A8C9B5EE31764D853166F2644B9E85C9EA4B8CA841D1AB3E9B
EE15BFF89B496177E20B39FDA2F0561382A888496123B7348AF193B066A0AB47
35F2EC5BFC8D98AB7AFF5E414698F4E3669E28FE2FFE34ADBA1087666CFD6A53
49B2E7CE8B3EB2977AAF83E4291190385511B5962FA62A5703787D45EDAF7330
5043FC62B2D32013792D506C2EBFA3A1F184E006B893E3B64041418143ED98B8
557F86C487DD2BD1A9DA26C57A404970EB0C841308F3EA1B7765B3078F5F64DE
03DE678BCC5121948D5D371E12213D49362A889B5C3F1F2CBC6EEF88B6EC6CC3
604C266D83CB790C397BAB107DF5717E13A6B2877E3721A9B1AE6460D9D4C7E0
C6BE2830D7DB6194CDC8EFAE4F67E6B6929DC3FFB838875D0C982BE1AA2C7DBB
15939B1DB280E9D450E1AEB1732EA1C8A57BCC037560DD736012BB175A3A650A
5C00FD7C9888CEEAADD8C0F6735427851D99F828FD44FF90DE2CE73C72389F73
2A72153FC62AD435D8D87ECF0B8CEFC8B2F439E01EA191C34162C9230F4DED58
25FDF60AF37D1F8BE461BD9088689A3F62F19FB0B92809CDBCE7829E2FAB48B1
72C83507BB23BB6324F8DD747B127AB2AD> |
4245 <051C60D8A8C9B5EE31764D25BD5396B185306D60BC41CB82314AC39C9B
975A356DAB7676B3F0B6050FC4AEF4BFF242564E8CD146892BF6C3A456916FB7
0070334FFE0F3CD13F4025DF8732B1B71E25A4DE442DE0BEC120FDB71EEEFC13
81D0F21E64E55B59E0539E645A6A252C1538C0B49C4925966A19928E984F3041
7D6BFED27928A6B06903773BF670AB4B998D0A7A5ADD42A35F89C2BAFAC01A36
E2F4F037E352D38DF89802AFCF40378F7F11807AEE64ACCA480E3B36F8315843
9392ABBA9B474F1AEFAF20D3A4D284E8794ECEF61358A6F193A68B5F944D0343
8286621A62B477EDA79D03FE2F776509990E9E21496A446921DE135E891A92DF
8A7292C89CE0DCCE5FB7958EDA9126C257A66A195A3B0BC12959D351D7273825
830C5549B935C68C4CFC5CA04EDE01CA77EDA5ABD26F634865E6C00B47408C12
51C5099EF5CD297A6AC30F74A5F0F160208AE50116D309EAA864127EE4FF4910
C7748E8C176EB20F9095AF68E9C1CAECF47ECF24A3443B75019A88CDD4BE6FA1
E0DE32BAFE8F9BB9280D61CB2A33D9A0B849886F768887A3EBB39DCCB244FB52
36A038FE1EE7B8FAC5EBDD70C9512FD582346C79CA66A9A0A39ED239A4455296
8A756C74A83E0B947BF2DF88333AB66DB19E705184D81BF3AD8DF48F8EF85D8E
ED5A4380CCBE98E79006E7D3B634567C35F2C467A2B39757EB5C9752651B1D9E
596F48D7E2D87198F5705F62BCF2A564160EAEB9C15A9F51A8F4285B9FCBF7C6> |
4057 <051C60D8A8C9B5EE31764D0435FE5EA5EEF86FC4F42AFEBA64F55B5238
4C2FF8888D1713080372254A7BCDC369C7B6C4551041273F9B37FA9773D588B1
AB992BA87D98E02CBC5F8C521CC0BEF9363A30AC773809E4A0E834EB6987D0F5
1C9836930C61B10B32F80BF445C149209E14C61430201CDF512B4395A5B5A2B3
A293AD1293BB023122AF3FA0858486113B4ED2C4DA8DBAB1A90C0B66F8AB1A72
5F211DB1E11C17DCAF68693FC421DB08D5A4D0A61C0851583386CF9FA8512EF2
6275FD6457E54A89CC1638F1A86BFA6AB7B7FDF2ADCE6CA757657A41EE72E6CE
BF7A0C3D2AE7075B7E20A8FC94DB344473AF5462541ED54F3C5C453A7C5A4CBE
176EA489A7E22BC67B8D74A7EFFCD4C3567AEE0147A7C4575571A2EBBFB06AD4
0ABFA41BE8656CFC9AC2A01284EE8B7E17D569F631E6713C2485B53F5D3776B5
B7> |
4662 <051C60D8A8C9B5EE31B1BA5EFBEB0222D9632C52D42D6D459AD7FBD4D3
98336EB4B012E8082B05BE3D2324D72D14FCC7932FCB8ACA5EEC7216F8B108E0
995FA8509793CD2E103B11C0FF343201000131392B593B11C9AEC86DFDC94CD3
D6FAF8D87FCF252EFBB29BB8977FA46D6950A5BAA9D972B1572C99C7AC712ECF
86D232084C101D0179ABDBA37B6CF202B9F704687D6B0D34343FB2D6640E152E
6856526BB8BCFC7E63AF6F0158B27629378AB6C3BF0CC283EFF84D0258AF35CA
778DED58336BE6FA368A60235681642A4D591FD64E20758461B0A0DA5D9A3CD1
9711BFA2A6B9DAF643D8594775158E3E6B8C6C7B7A6D58EC18D39A3EB611303D
E043C644D38F51B7CEBD16D7AAC5F98448921DFD5388F6647C46A336D7574D3D
B9AC5936CB8FD343999192CEA562778537F317042C9AAE97BF3AC9B2921F41AD
72C678E2FF67B2DFF4412AAC8CF465BC3AB2259F1C3C292EA24D3064572D6A6E
41704980927A3BD3B417C3F52C55CB7467FD565BF27FA65C09C5992ED583080F
5CE3FEE3014B6C10CC632E63FDE5A34A8D341A51EFBC0F987387E1CA8F951903
4BF0C4D3018E27232340A1C4300CCD348DFD4CDFA32B8F00B60038F8447D3A8C
0D7087BF6800ADEC9313D783529E549D84E0B6B3769A26AE9757FEA48A9D238F
2ABD7A71AA8B1B9B353DB4FD3F4C50629AFFB9F7933FB5F717DB2E5ECB929A1C
B3A7C9659735FAB06705D302FF624A1F2B5D9CE7DC3E71E646ECF5A301093D0B
69A568BB1F3771EF416E2C83EA530BE8300009C9C5A77917C9AB9A2948> |
1444 <051C60D8A8C9B5EE31764D0B4C1FDEC1162E1B67E5CE131B0972B80E3A
DCA9002F6E600E345F9C9379356ACAA68DB2C6DF058DEE670C10E6E786E0C216
B4B1D09F404A0C6900003B99C550E53D5BD75D6A275573CBCB3A586DBEDFDB8C
F737046D9EE453E0BAEDB4A30089AC58B061D1D20217F5568D66E3F9F727DEB2
84DA2DF4D888FD98CBE16B378DBCA2E45BEF51B1D6CE1EEC6848547948601623
A9C849BA19974E17911911A200E489E63AB2361A1C438C688A22B49B98560E69
2678C2E9FF70164C3ABAE99A3271D1F3FB7BB3E0FE5098E2CA314090D79D4417
33D815E1B857650B663E16AE7981C51F026FEBE9836F721688870A17A9C05800
39AB10872F5FBEA00F81F4971C9363C7DF6EE19B370EA4BA5D114819A5B014FD
105F37E168D0E2444C6C55EBD3110BCEA9A5CB20E446D4BD7B6FDA9A89790516
71F794B3C060B5F508FA562CAE7D2F171F966ECF63C7EAF03CCE15E1132C3311
D3539180FB392D242DCFFBBD540FCDB4EA9BFA821446579331058D145C41C98C
399E287B24A5304DFD9DD722F9556FC89A1A5F9A76904C2C7F305372C6E9407E
24A6BD72FD91310C28FFE8F1A5702140E62738D84F69939DAF> |
1438 <051C60D8A8C9B5EE31764D191ED005951C7610CEEBA380C48D5E8CA1E5
F820D6C592169EA04982D0B228B7DBF2281B415C3F122443C5A324BEB086D817
31C92C5D0F7A8801928F5A572054B2A6F8F00287BEA65F20A69D658952C0462C
727E80823BD768AB1276161C0247904E035DA81CC7880B48C12508A43E39A509
9A1A113D98A784C2030ACCD3247432A05376CEEDF2CB27B256B9602E96E8678B
122BB0F14088EB4FDC914C9861FDFD2F54EA4B874A30133A7937A408C3865301
2E881E11D364B4BE5D0A1FE39AD71880BD4F3C073429A4E2E4DD141058687583
E69EAED5EF9180D70495B4CA77D0C6CB2202970C95E87383EF504D8EAC403EF1
51660AC113620934A3CF70D7EBB535236F294876C9D908B77F67885C8157A657
3D35E9A8C241E176039490E5C8A33212F4133D0F63CDFED4197B521F06C2F1DD
8D2325BA7892895B5D2067C736B9DC507DB1053724D9886A26BE1C9A32B5CF2A
12241632C940BB79F1C3A5A599003FD55C0F4C6A7CD4DF462C7EF4E86A18AB1C
C2AFB26D> |
4535 <051C60D8A8C9B5EE317635DB23483369790CACBFA5DF9788F898CFE273
793F9D438074AA22710B60C41366BB23405149F38A21C29BDD0365F37621022C
F44F9D1DEC82F3CC4DAD7E0F3C5BB8B612C64AEA032A3C8078C976CF516E28FB
F0B47BABF0C1D3E8C37C17599B43D226B135187DEF800EFAEEBC8D5D4F16A825
86C6B7DA79FD5604250E640338B7AB5C44CF52CC4A8CBDF2696A147903F349BD
4A4BA5E5F895A0E8956431823BACEA0D95673F17737E13213A9EAF945FDD34E9
22189A89AFACFEF0CCA5E54B390ACDF95D580CC4F801278349B149356DE5128D
B18D3F74B7D5ABACD3CCBDC4BC46897EC489A3A82206521EEA83671FD6D22A4F
35BE42A8230E42AC69B47A1195211F5425A1FCBB6F39A71A5B8356CC8C38C8BA
FBA6EFA910A09925DF7C724237EDD1E3280F29C441671C5FED3A8237007E18E6
795C03410F307FF772CC4D504121864D66628B01FB51F82DBD7E889B47714639
D2DB086FA8E511A3EDB8BF1E37CBC2C1EBBF73193F9387C51696637241381FF4
5388D35D8FA2667EF53BADC9412662B50D35254D69625F28A9878368F96197E1
621C5A0BB8492081F012D66D201A7A59A823625C67D7BE4224FD08A09E3C64B5
0D0439B7D2DF78C053A53D0BF870> |
1107 <051C60D8A8C9B5EE317642D15A1EB5610D71A3BC3B3844085D168A7776
9DAF4A7A283C6E4DC52EB1CA7C070E5754E51972FCCDC4BCAD7257563FAE813D
53B18C73AEFB4B4E8DE8C88ED4BB6487DC36E9E87EEABDED0CA43C6E8D1F163B
7C59CBF3E2ADA60917FB892EE82AA2756F856C8387E7C7BF77AC6418B40880ED
20DA6F5DD56842BA6AD17E6649F8C1694189856544DFE6B054760ED6ACFDDBA5
639527BE8451E1B542140AA5B70F469912DC9EED2B245E0015814607B17B5106
033E044FB51BD5617F51F37AA82888C488EB74580817EFCB82DBAE3FE94DBE9E
1F42C2BC55B0021377899E7FB654BDF1363394C196014C5414B96F038CF8D100
D1E3BD5943786AB4F9D4E53966CEA79D3E78DDF5193EA9DA82C41FFEA54C4679
062DFFB5B3FB5B68A3DFFC14A48151956B3EE7A9C9B4FA30E6C0D36B8419E796
16C02756222B5B84F8E932384F331D3D7810C960C5E1CDCD94140763A9011071
BDF3AAE6477C84B66117F95398D57B499BF69EBA36E88FC7B404073C3879C2A2
2CB1C793> |
4532 <051C60D8A8C9B5EE3176D77F96EE7BE0C190A3FB6A35C498B39D97BC7D
826B8E4C3A236F342ADD4B70BE043F7AB6FE1EAEE2FDB728C5530FA58869851E
BF3ED2E906345E91FF12EB5D400BD8DA6BA6A373D1CE45DDDFB9F136C336028E
66941865F516462A136BF0B9715B57D226FA9D62435E05469394A563B455DD7F
13167759A067C4318F0C86324519A24EEDAF6867192C2A3E09034D2E983DA268
3500E8963D54CFCDF1983360B1522DB3FEDC6C38E984CCF8C6DBE432E167743F
F343527C979DEC2CEEAFA07042EBE80376456159BC48C445A48B8CFE53BECE99
B3621B7AFDFCA618D1795FF665CD6BC3F8066D460953A15710F6501A8D8BA224
E632305E137EA84A6EB0E115A48FCC6AFF67F262B73C62E498551DCE5F9439F2
00EA7BDEE61A83928AD3D48647922A552F4A76B0F8C7A471D439875EE7E429D0
ACF0BB0B03F5A39B8EA2C2C22FE6D9FD3B50156C3FD9F8FD3764BAB217D164F9
73A4A9974A6E2827EBD27F9B21957179C43767F5496E468FBB9C171E7C661514
F48BFAD3D70C1154AB27410E161526363B3CA865B1218243835790B3F762> |
!
end
end end
%ADOEndSubsetFont
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12 -1.46958e-015 -1.46958e-015 -12 0 0 ]msf
175.77 173.03 mo
(\016Y\007V\016g\020\225\017\331\0226)
[12.0239 12.0239 12.0239 12.0244 12.0239 0 ]xsh
247.914 173.03 mo
(\005\244)sh
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12.025 -1.47264e-015 -1.47264e-015 -12.025 0 0 ]msf
181.8 187.419 mo
(\005\236\016g\020\225\021\267\004S)
[12.001 12.001 12.001 12.001 0 ]xsh
241.805 187.419 mo
(\021\264)sh
267.75 255.75 mo
176.25 255.75 li
176.25 224.25 li
267.75 224.25 li
267.75 255.75 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[93 0 0 33 175.5 585 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 124 
/H 44 
/M[124 0 0 -44 0 44 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 124 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 124 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 124 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 124 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
!WW3%N"#apqu?]tN!KCfquHZrNr]4^o`0pN!!;p)Pmm^$qu?]toa$oj!!`?$nH#*[!!;BbRK*Bj!\!Cd
TI^6c!!!$#'^6C.('P0J!!***joqUc!!M-YV?$W*h^ki["=O6M#RK3$Y8.6T!!!$#f`eYb!!gpPZ2jn6
dk&!["=O6M#RJcm]+tM`!!!$#bltfb!!gLD^&\0Ba"5.["=O6M#RJ?a`tedl!!!$#_$.sb!!g(8aoMGN
].D;["=O6M#RIpUdhW'#!!!$#[0>+b!!fY,ec>^ZY:SH["=O6M#RILIh\H>/!!!$#W<M8b!!f4uiW/uf
UFbU[![n$Krs4Jt"V^q:!<E@^"TSf'!/gjW%JhW</-I@$!!il)(6fR;'EA+6!V?P^"TSep!1*]c%IPd<
/-I@$!!ikr(8)EG'EA+6!U']^"TSed!2BPo%H8q</-I@$!!ikf(9A8S'EA+6!Sdj^"TSeX!3ZD&%G!)<
/-I@$!!ikZ(:Y+_'EA+6!RM"^"TSeL!4r72%E^6</-I@$!!ikN(;psk'EA+6!Q5/^"TSe@!65*>%DFC<
/-I@$!!ikB(=3g"'EA+6!Or<^"TSe4!7LrJ%C.P</-I@$!!ik6(>KZ.'EA+6!NZI^"TSe(!8deV%Ak]<
/-I@$!!ik*(?cM8'EA.5!K%$\#Q+RX!<3N,/<27a-ia5Q#l5=!('G<O!!*,p"dB/j#Oh_X!<3Mu/=J*m
-ia5Q#jrJ!('G<O!!*,d"eZ#!#NPlX!<3Mi/>as$-ia5Q#iZW!('G<O!!*,X"fqk-#M9$X!<3M]/@$f0
-ia5Q#hBd!('G<O!!*,L"h4^9#L!1X!<3MQ/A<Y<-ia5Q#g*q!('G<O!!*,@"iLQE#J^>X!<3ME/BTLH
-ia5Q#eh)!('G<O!!*,4"jdDQ#IFKX!<3M9/Cl?T-ia5Q#dP6!('G<O!!*,("l'7]#H.XX!<3M-/E/2`
-ia5Q#c8C!('G<O!!*+q"m?*k#64aX!!3T=/;l%^-ia5Q#lPO!('G<O!!*,s"d&rg#P.qX!<3N#/=.mj
-ia5Q#k8\!('G<O!!*,g"e>es#Nl)X!<3Ml/>Fa!-ia5Q#iui!('G<O!!*,["fVY*#MT6X!<3M`/?^T-
-ia5Q#h^!!('G<O!!*,O"gnL6#L<CX!<3MT/A!G9-ia5Q#gF.!('G<O!!*,C"i1?B#K$PX!<3MH/B9:E
-ia5Q#f.;!('G<O!!*,7"jI2N#Ia]X!<3M</CQ-Q-ia5Q#dkH!('G<O!!*,+"ka%Z#HIjX!<3M0/Dhu]
-ia5Q#cSU!('G<O!!*+t"m#mf#G2"X!<3Lc/-RF%!!iiGM\ZF0!!!$#r<82b!!i2tNWB(gpFMO["=O6M
#RL&<QPK]<!!!$#nHG?b!!hchRK3?slR\\["=O6M#RKW0UD<tH!!!$#jTVLb!!h?\V?$W*h^ki["=O6M
#RK3$Y8.6T!!!$#f`eYb!!gpPZ2jn6dk&!["=O6M#RJcm]+tM`!!!$#bltfb!!gLD^&\0Ba"5.["=O6M
#RJ?a`tedl!!!$#_$.sb!!g(8aoMGN].D;["=O6M#RIpUdhW'#!!!$#[0>+b!!fY,ec>^ZY:SH["=O6M
#RILIh\H>/!!!$#W<M8b!!f4uiW'#]![siqkUZcS!!!'$!>LG-"V(M4!<EF`"TS]$!/U[U!rEFi%0-e6
!!!&p#aGYq#5eJn!LNlf!pfoP!!!)h%A""/$iBu)!UL)c#QP),!9aHZ!<<2Z!2BOE~>

%%EndBinary
grestore
np
173.62 249.8 mo
261.494 249.8 li
261.494 221.454 li
173.62 221.454 li
173.62 249.8 li
cp
level3{
gsave
[124.27 0 0 40.088 173.62 221.46 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[124.27 0 0 40.088 173.62 221.46 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
173.62 249.8 mo
261.494 249.8 li
261.494 221.454 li
173.62 221.454 li
173.62 249.8 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 9 GetGlyphDirectory
44 <071C60D8A8C9B7C12A0AC806EFEFB6A21E0C132230AA4F70384BF621835A
6AADD27F7AD9EBC8368DFEB93FF60E0F1EF2C76DED489C290A3A72C3058498EF
66BC1648538289B2D7E1FD7EEB> |
14 <071C60D8A8C9B8151C299A67C5CC11D6B75990296E902F53BE84990F9DBB
A7> |
46 <071C60D8A8C9B69A173543128C8D077D69C2B6760C4B44A8A3855FD9FFD0
FA79F379DE55250E13EAD4C85E74A79E4F1BFBCC81C6AB9FDCF1A6BD8A245F2F
8EC77F11B9487B81DEF43D033224216F64C32E6C06CD63E6C5221DBC41E7A772
3E03100C2056D03A3C0368D3EB6C6E3DB1DD46EA06A47E6EF7E9E3B804> |
70 <071C60D8A8C9B79C5F9637C0DBEB0DAB33762D696FF7BC023BF753C1D368
7E2177346F16DFC90399E289CF9B793A4C86CD89B53A50AB0B6EAA93D21486E3
6FF171A72A080BDFAAFA54D4E2F407B44DE36BA285531791D0487DC33F76C2FC
089250A1CB6A81623E69B63C465CE37615> |
66 <071C60D8A8C9B7876E03BBA86E4A2BC6DBB6F83C53EC83745E1B4A3C57CE
690A9B02DCA50F99909AC1FFE57927FA5208C9B74F42AA0E0825761CE39779AF
1D8DEDE21BD5E690721F898D797FEF119F3816E22A28AA57266D0F77BDF354A1
6A9008229C2AD17A740D23C7714080CF6525BA03FDCAD428257BDA59ADAD5A1D
BFEBC81A787BAAC8CABBABD714F838FEBE7358E84C3B6CD7A2681E3854C9E7DE
BCEE9BC04AFC> |
79 <071C60D8A8C9B7C2FB6C662DD67221B2C072A62D5FF03BC3D7BEA69C6E12
4420F8CCF909DDB6CB03A7034D967FDFC16192B3656B384AA1089D0829000D6C
70B2A42BDDBF30D974B54DD9406A7280F67ADF30C721AE0F3154DA27C5828BCB
A57233AE7A214EB0435255937992018E0F1FF8F52D57EF29704B> |
84 <071C60D8A8C9B76A0D4E9270537364BFDF186AF99888615F859196141139
776C0A3AB30B796CE5CE3F9A944F63A934914395CD70A426376DFC2D862CC982
D9C84F1C024E7E47A3EACFFA0484357192BBE6EC94AD6811AB0D588AF4A87756
6D02F792C65BCB1FF0BC1DE1C17B9BDBC6CBA6> |
2314 <051C60D8A8C9B5EE317642F3482D3A2E7AC63D429DB268A620FDD16207
2FB18F96E8CE1D632D77662C7AD8FFBDB45781EA025343A88D9C63FE4C1B4ACD
145C1495D88F68F5CCE775A6E7A2CBFD6D3A61919E4F491BBDFBAB16A4AE3517
FDE79FB7BDD832F0A05EA40E47D0A03E3A197AC4AF7F04849B3D4A4A24C08DDE
A8E65191B5B6D2720CC635FCBCF9B564F5298A438E79B81FA626203CE15AB35B
56DBAD3799FC0D9CF1DEF13B3D54F46FDE366804835F1AF3B96ED2BAB82052F0
514CAF1C282F1AEAF08837349DFFB9DB67B576BFE53C38E76C7E4F3D924DBEB2
6A22CEA36D6B5879CF8980C0D463A5E3372F91B706454BD5D0C431746223C193
26CB643890430FB0475CFDF663A6540161B1EC3D6C0B34B0634A18ED064C1F2E
049EF22EE0FE4F77CBD44A46CE692FB7C0A6D5C3635F1E00A7A34CB39E0B52CA
3E6D19F062AF524F18426EE29F7797143076B5F44F59724087D442A8805BB820
701C9E54B79BD0CEF9CDA078557E975D25C3A8883E2DA1303902A93A9FB28BAC
689CF171B1BB960FAE55A3CBF88A3DDE4542A8966D971EFB8982B6BAC4956D2B
2B7830455A64EE5162525474D2AF123A3B51933F54ED893E7C394A36D124D5C3
DE5150D90AEA90B5E1D9A62436BF60243BCC8119AC6D2DF8910182EFA16C9441
864611401F3D769009B865A4F004838FB2FDC78922CD8EEAEB33479ED9BEDA52
4E259F6E9AD10A6F8201DBF431527178424685D8FC814788CCF75EC5A5C6D5EE
FFE58779E9954E74AED2D418C8FA50F06EA988DC487CEA5635AD12DEE45519F7
D8FBF26E9633D0817C13F16AF9C5C7381FABC52EC49F7AC64F28A28D13A04FA7
25D93F33951D399F249FF77D36063B7C542515456FBECD33E99529EA2CFA2119
8B6280EC670405242E6BA63B894F0E1F6CF2EEDA0C3BD0C1E3BCBB6F798889C7
2ACDD6F20826164AFCD96CC461705E> |
2507 <051C60D8A8C9B5EE31764D3D18C34B1DB7A9633D3D9A69498D67BD7758
8B1B2B4EC7BBC3B26B29CD9E5112B8330F058C68A22A12BF38F098B779172CA2
C3EF46A7F492045BE2EEBF488B208FBA020AA222246BA4A8AEFE7E8042F11546
B063B4CA383926C864B9EFE7233A51A3C29FE7E03FF2B0EB5D5B92BEC5AF8610
E034C73009F897E29F842D81C3AFB47D1269A089D2F4609081F45C66D2877D74
F67FA947697CC847AC0DA033C4C739F3215A3005367F5DB37177484A935858FE
33906CEADF5C933CD6D117CBE1B984B3D1EBE83E16EE17B3A44B2F4B512A3733
29295236D633FA2E80AE2D48264029FF15A81485E613D0081B2A1BF8EBD797D7
8285ED50E0E11C99011C41C05D024D9FAB3C70ED5216B0C953340F12A4A3DB96
4803BE1B594AD7C83B59312ADBAB361D9DB10B9937AFF53C49F4272DDEDBC4E1
BA0F9B13B631EB7F28644D408124872F852DA0FD154F924B281F596559E46D75
C2F01431CC565724CE689DBBA06A62922356F3909D33C72FC83265A6EC668350
FBA760C342D759C4230D790A559E89A8621C3D138571AFAD0DE8C7F99BCC01B7
A1B8BF19265F96B998B69A1EB96B2E77A89E149AAC1B8C9C049BB8811DBC81CE
511816> |
!
end
end end
%ADOEndSubsetFont
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12 -1.46958e-015 -1.46958e-015 -12 0 0 ]msf
180.33 239.45 mo
(\000,)sh
187.95 239.45 mo
(\000\016)sh
193.15 239.45 mo
(\000.)sh
203.878 239.45 mo
(\000F)sh
210.394 239.45 mo
(\000B)sh
216.874 239.45 mo
(\000O)sh
223.474 239.45 mo
(\000T)sh
231.33 239.45 mo
(\011\012\011\313)
[12 0 ]xsh
411 259.5 mo
309 259.5 li
309 220.5 li
411 220.5 li
411 259.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[103.5 0 0 40.5 308.25 581.25 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 138 
/H 54 
/M[138 0 0 -54 0 54 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 138 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 138 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 138 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 138 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&VZ6`).,HML/-.41r;Zj%'^6C!('"U<!!*0,oEC-V!!;rrJcPWI!#peHoIKtc
r;Zg,PnrU"!"o/0!!Jquh$'YUc2[hc[OfKN!$_@A!"Zm]]bUS[r;Zg#bQY9U!!^jOU&Y07i[gTN!$_@A
!"\H4OVRp/r;Zg#p]ZBU!!`E&JcPHD!$71PmjnG_r;Zg.RMOs"!"o/0!!K,%f`_?[WrU6A!$8a'_^kj5
!!!'#!"Xc!q%`rBr;Zg#O9P%U!!\_hh>dNsVC^@N!$_@A!"Z=Mbn^9kr;Zg#]EQ.U!!^:?Z2akGdO_IN
!$_@A!"[m$Tb[V?r;Zg#kQR7U!!_ikL&_2pr[`XP!\>lHr;Zg.MAGh"!"o/0!!JPjklh%kRfM+A!$80l
djtJCr;Zg.[MHq"!"o/0!!L+A]`eB?`rN4A!$9`CV^qflr;Zg.iYJ%"!"o/0!!MZmOTb^ho)O@B!<=0o
/G^mt,5hKA&!%Lp('"sF!!!.j"loge#+ttG!!"(E/C#dH,5hKA&%`Up('5'J!!3-#"GI$T"TSab!9jI`
*h+_@/-$mm!!!P,(>'B&&cD\0"L/-T"TSb9!5/@4*lfh@/-$mm!!!PX(9A8O&cD\0"Pj6T"TSbe!0I6]
*qLq@/-$mm!!!Q/(4m;'()@M\!!!.Z"nVru#*8iG!!"(5/D_oX,5hKA&$$Jp('"sF!!!/1"ipiI#.srG
!!"(a/@$f,,5hKA&(_Sp('"sF!!!/]"e5_r#3Z&G!!")8/;>\U,5qQC!"X_uqA'&Cr;Zg#Ns4tU!!\\g
hZ*WtV(C:N!$_@A!"Z:Lc5$Blr;Zg#]*6(U!X8W)JcPEC!$74QmOS>^r;Zg.Rhk$"!"o/0!!K/&fED6Z
X8p<A!$8d(_CP[2r;Zg.`tl-"!"o/0!!L^RX9AS.fDqEA!$:>TQ7N"[r;Zg.o+m6"!"o/0!!N9)Jcu2Z
"U9Y\mf3>/Pq;/N!$_@A!"Y_<hA-)'r;Zg#Ws-rU!!]\._Z0ZX_(<8N!$_@A!"[9hZ5*EPr;Zg#f*/&U
!!_6ZQN.",m4=AN!$_@A!"\i?L)'b$rVus!"G?sT"TSaa!9sOa*h"Y@/-$mm!!!P+(>0H'&cD\0"L&'T
"TSb8!5JR9!!"'o/GUgs,5hKA&!.Rp('"sF!!!.k"lfad#,)%G!!"(F/Bo^G,5hKA&%i[p('"sF!!!/B
"h+X8#0d.G!!"(r/>4Tp,5hKA&*Odp('"sF!!!/n"cENa#5J7N!;ZZq*f;N@/-$mm!!!Op(?lS7&cD\0
"J>qT"TSb(!6tQE*k!W@/-$mm!!!PG(;1I`&cD\0"O%%T"TSbT!29Gn*o\`@/-$mm!!!Ps(6K@4&cD\0
"S`.T"TSc+!.k4D!!"($/FP+i,5hKA&"49p('"sF!!!.u"ka%Z#-.aG!!"(P/Aj"?+ohTE!!!O`(AS^G
&cD\0"HWfT"TSam!8[\U*i:L@/-$mm!!!P7(<mTp&cD\0"M=oT"TSbD!3uS)*muU@/-$mm!!!Pc(82KD
&cD\0"R$#T"TSbp!/:IR*r[^B/-7@R,5hKA%uM.p('"sF!!!.e"mH0j#+GVG!!"(@/CQ-M,5hKA&%37p
('"sF!!!/<"hb'>#0-_G!!"(l/>k$!,5hKA&)n@p('"sF!!!/h"d&rg#4hhH!!*'@KIlsN!$_@A!"Y,+
mhPm8r;Zg#RK_aU!!](re,TIiYUn'N!$_@A!"Z[W_\N:c!!!'#!!IuZq#pa&MZDuA!$7U\j"(0Sr;Zg.
VA@f"!"o/0!!KP1bln(O[fF)A!$903[k%M'r;Zg.dMAo"!"o/0!!M*]T`kE#irG2A!$:__M_"iPr;Zg.
rYC)$!YuO`r;Zg#M?WVU!!\Mbj8]0$TIeqN!$_@A!"Z+GdhVoqr;Zg#[KX_U!!^(9\,ZLMbUg%N!$_@A
!"[ZsV\T7Er;Zg#iWYhU!!_WeMuWi!pah.N!$_CB!<<X`(A\dH&cD\0"HN`T"TSal!8dbV)l5+=/-$jl
!!!J4(=!Zq&cD\0"M4iS"oeRS!;$6l$7M#fmjnJh%fHA."VdIBit_V"r;Zj##H%aX"TSV*!.k3&!.k3&
!.k3&!.k3&!.k4@!.Y~>

%%EndBinary
grestore
np
306.85 253.35 mo
404.645 253.35 li
404.645 217.917 li
306.85 217.917 li
306.85 253.35 li
cp
level3{
gsave
[138.3 0 0 50.11 306.85 217.91 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[138.3 0 0 50.11 306.85 217.91 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
306.85 253.35 mo
404.645 253.35 li
404.645 217.917 li
306.85 217.917 li
306.85 253.35 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 11 GetGlyphDirectory
1810 <051C60D8A8C9B5EE3102D49B8FE8A5B37CE1D1AE73EBCAD18E5BB81637
4156C0694E679AF5860EFF58FF78DF9B4CAF4AF534204ADB7E2758A0853B7945
D34C65A00E670C9DF2487B30CF4AFA98696F8C9C25D3CB7CBF0DCDF58D887B03
612CA486382518F2C449E2361A0117731C9E8E03A7B0D76672F18F8EACF26E8B
1D32F9FC282568D4B36AAB3E62A171EE5AC2CEE57067A54152272A6A701FC714
22E2A7C79B123952613B2EFD27510D4BBDC4E159AA0117783328740BE95177B4
A2AB2C498258822D954ABCAC9A61ACE728FAC0AF75AB309B9561640A6B2C0006
8644C540C958ECFD27FBEDE4364E4CE9C34265E34240AA17BF7C000E3517D995
38616AC65C7CDCC13E473D2095877085B128E72C2E890D90538AC01603986D54
EDC91659D90A744ACF07E89C36C7801D1C91334089E35EE9FB2B3EA7A61FA70A
62C3A95E4BB1E6AE10CB891C157DA5E3642A50633A4C315850342C8199F59328
01A860116CD7A8A0D57FE19F0EA0DBC014BC14DD5D504EF711447F47D16BF1AB
BD66FE31> |
4399 <051C60D8A8C9B5EE31764D76012A1DAF2B1718DAB41874BBFA7EDFFF42
28D08B209E9AC9526F4738FF448D98C787C7A5CF54F2DD7DDAE63BC7BF0E1010
64DC6FFBFDE8D4782E84BE71CBBF86519B8219D3D0BBC262F7DE8F9522DCBF36
F733DE50AC7DB29347287B01DAE93BFA0535F87417DD632023B5F0A150724D08
D08573C71426DAB508554992507E464E18B54D0269F06B82B65AD882BFCF1159
F7FF892F33994252FFE29F417E46643967EA9F294168AC4CC9EAC1401E0F4211
BA7F59452F69B2A5A9369024FAA44F7519E49920035AE0829AC6FC4816E6F5FF
9BC6F6A11AFC16B5A02588E6949EAD5B7BD3379E01CE4F69AD80C342E387DD0C
C9FC2D6D092526F1E415D20A8B6B63BD497ABCBE7E43EB6CB96D1269069D25F2
2671FAE12BEC87FE3A7DFC8A51F7187E621C1C77376E918F9CC870DB823B12F0
5E7D9F1A8C5CF62B15F76619A819F91B0AA4B5651FC466646315C30F571DE568
8C5ABB96DF11B9F702A8D8B9F243AE58EB7499B16CE7939E0B4D0CAE9C33D97B
E05D5F49B3DBDFDEF6A126308E215155B245E94F3D68CC46360788C3B2BA6949
B31632D3C8335F6BAE9B86C74AF5333EEEC36D75DE80FEEFBC30369AD717C27D
DA33746E0693FFD8C5F29329DA3BFB46293207D9E735A610A2ADA15B19FCC220
EE68F635430F4262D0CDC244A653F7F255CEF0C7921A236DA52C01EC0DD9E457
A7DDF908A592A1F0B5CF6B2A2CB623D2F8DAC20A878A48C71A52D45361881AF1
78272814879E0BA6362949CD9A61DB8802AC> |
4333 <051C60D8A8C9B5EE3176CC0BD8DA82C725DE2F9E23385CFD4031E75999
1F7EE8F5A773FF68A23778B1981B4F23AD42358455E971A5F5090F2524EE8A7F
D4E2340FAE7833B44CAC63336ACB3585521B0D28E063557EEEC2B9D50C79D69F
8283F2498B61148A9D355053EE3713C905DE407BBAA87EFF98801A42D87A8F43
8B9AFAC4C5D5F70B00F13EB29BBB2B082428F9BA7F17E7CACF48FC9A8DF92A91
C33609085A3AF8B0317EF9AB871CA0E9C6A86FCF40ECC19A85131AD61D2ED4BB
11E40207256DCFFAA108C58F> |
1030 <051C60D8A8C9B5EE313343C6AC96D6539535EF248ABF1033ED656EC024
7270AF76D619B1927D9B00D5F2F79EEDB3541DB6D3EEDC360257F4293968517F
EE11EF2D5E82208AD4BF18402BA26351898BDF533B42BC005EA390954C037F59
28B77AF15A9573C2FE3FE1FAFB9C2C0E60F8786733B07A3490166DF763F4EEA7
8D1E9B7DB42B7D695EFCAC8BDCDE6BB7EFE8A092159910F95F17D2414C5A1F2F
AFCCF7B7A115AE523897088C8B69B08258DF40413998E8AE19844A7C248C9674
31354FC0709B0D3D96197850FFB336DEACF801A9996DDE606749328C1513E4D7
0E6D9AC71FB73830E413EB268D445FA614A8E15E771A334C82C7E19EE69D2DD5
73922E1F371A7BC75AAF7B57156A1EC3B87DB24A280AAF7B35B3CC317B5071F5
7BA5BEA088E0136FBF2B97F45E051280B47F0F0A111E3B565990DC4F294976B5
051056C3CBD0C2CE6B2C712E50AE1778210451ECEB410907EBAED630882F5556
C13DC04468D3AF5B3AD03B6939A25EB5872FEC0804CB4A00618BF986A315DA0E
B0843A6EDBA92B404F701B03C535F3C69EE4667D04CAD282CA2FF10A33697DDA
928ABAA74CA54BCFE47660A1E84129BFC1F1D7533A234174FAD8AE32C5FA3346
56ED6E395FDDA1FE0C2ECA09B4E1209BCF738D853166F9D5E859EAB4360C61E1
8175C26E3CA88BA3FB2FDD00995D1B956FEABAB5409628B026480D480A5235F1
AD386DEBABFAC7720F54E437B42C7D4F7F881E820398C4A9659A51A5E0AED695
BE9F562023A061674643BAFA91E91F04> |
4657 <051C60D8A8C9B5EE31761F811ADD87CE9E7F440D5963DEA1A32A9CE91B
0EEDDA7515FC24E71859CC0BAC8A0FF247EE4001E81BDCC35C0BB786C828EE24
7D41F02769B43CFEC1AD9F941D9E81B5C06FF73F4B292CE69FAE0D877EA65164
8D16DD9990E171E4F5ACCE8C1B37FA73AAB008A0412AF32FABB1B164FDA7AC4D
619C1088334C817CCBE341B14B40C9C3C5FDB9A613F4C4783CA39A32660CA373
F4BF757DF21497934CD92903C5446F3D4BC6F788A2AA759B159DEB4835441ECC
B844578219A6A4> |
1518 <051C60D8A8C9B5EE317642C6611C582415443358924C432A277205B2C4
93DBB8E6D28FEF665FF96CEC034FECEB57A3D3A49E32F975D267E9893C1F686D
2FCA2D6DC886D2982DF30D9CBBAEF244A3A2FF6FC4A02C9DCAF3A705B4A457E7
392F09FEE97FFDBE7488D8F2519840B3C6BA4E798D14C740ED28217C9E2263B4
DC109B84F78C416598BEC0F1FEC11ACF32C94CBD781AC6D09D32D75C67C8B5B5
7A0C7D0A758DEBDE57CBD2BAC11446C8B416BF078B51189D68A467F8E7DCB637
2D95222C94F829F139BB1D75D9AD782544C885676B5188545D77A210B208B052
77EB64ADA7946EAA8783565A29AF438D4C6361B2D1696AA628CA246D22BBE236
D881AA8CA0CB25EEE30EF3F7E077BA1248D970688A40BEEBF94DCA073B4EB004
67F518B6D667DB6FEE65DA7862EBBEC8E55D1DF3A6E582778D8A33436C071C79
C82176EF69C8F8C68C80D2D81974C36E9F36896485C28054C4AAD0FCF55E4047
C0D09F1EBAE040C2270FAA9BBBF164140218C039491CAB726BD52874822D5092
D433B55ED23E266776A44C101703CD79104013E0FAAC6588200A8925AA965327
8199C514A62417C8346ECBB29C6E796C660C60B3735A3A8B1B3CA30159CA8A0F
CACB44> |
2063 <051C60D8A8C9B5EE3176F6056620452AA559C2957B1ADB7B51FD112BAA
B6F4281DD4CCC0269D2B98BFF59EF7F43BB065FC483C57F7BFF8D7BB08BA2330
72F4BA8D96979DA9B0B0779F83E940177248A0359D80923DCBF25154B034B7B3
F48B0FB59CC1D8AC84C1416C460003C7E408D66AA5B8FC3638ED272082B33751
56E8ACF2DD4D224C74E2A0C62559DB0F18A0A364EA336144D926DBC62FC55B9E
7A4B5BF4EE055705F3969009A3DC395E75FB4EC03379E52A4B06A3C5F565C5F9
5805C51D750F34D0F3D9E350B1FCFB08C8C9B44A3DE909AC8A6B6D5C4F29C164
EF8CCBE3B335E5C10947A2C1EA2404FA254E3BB1CC6787E74A4CBF300010E03F
66755F93C452C62223EEC7E26C790E4BD7584B581A8DD4FF46AF41D6653C5067
5CF749D8BEE82432A1031E56F3BFA61D83EC73E64A2DE3100758D91A984C81A5
16349B31997E9DC38E9AE607702B769C4D3299B3F18B2FE435D50267BA79B416
00163403CBF63873CB16B08E6888646DE974C2E06FABAC204D26FF00FB5D7666
87FEB2C068725C0E6519F2C59F1E4FEE8A2B2CF9D9C0F8CE> |
2249 <051C60D8A8C9B5EE3176428BD78CC1020FF7C128648AE27AD26C165980
5D340EFE730FD150B6988BA28729C691BDAFA2976B787752BE46C71578635EBD
84736F4E3FE38378395EB581B72D111BB322AD3B986789FBFB376D8C16881BE0
BF14D3A845F4B554D92A05C30D4272789F459F17E122701BCE6C5D7CF4ED4DBB
6D9810B21FA9D9A6F7B0A540D218CCD1449611617353704E71978C067C5ADCE9
DB60FD526C05FD4DA7B5A1AC7EF8E55FC842CC73DCD461512A33F8F79D128C6C
30E3F5A328763C8C7E0987F6133CD8007C2A8C439BC7AF3433E0EED22107EB97
2F89BC9B677BBF85F8CAE6650FBD1BFF53E51E6F4DF17B517BEAAEE74B78845A
9BD184120E0E06E27EB039721A01620C89BCC56EF0F315FCA247FC2C51E1AA41
8237296FCB061E97EB43268EA4DA03D704B7E2BAEFDC4820CB9B89200B33BC98
D4106CC84330DB1F10D72721D93E2F3425C89033B9EB9A2861B52AA046E1AE5A
4BCAC47D1A42954189744EA1FAD69F3340C1DBE68EDBF4D615A663125E074496
6C9593A650875B91900AF14D3C1B5197EB9946B86C978ECD0CA647F7AEF6838E
38FBD48E3852785C7E99FFFCC12B22F09BA318CD84D2C525D5F4B57051F40E09
38B4585F1CCE89C1D17FD2606A25BAF742BDEF87DDAD255BD22D1248750824> |
3995 <051C60D8A8C9B5EE317642B4FE5E48D4EE7B225FF89561BB2A315CAFBF
C907B5C33E7AA60CA13D4B67CE0D66E0DCB040FA3001FF77BF860F69221DF0A4
88121443B599BE5978BBD42FE1A14922034387583D0E25D5CAA7E2DEF8DC93C9
182C6FB374F4A4FB8B98968B27B91FF2C1E2B6CC8D19AC65D2AA34B597C646B8
7A1C5059655A758A4E3751C6DCB6FFC45B75AA0FE292ABE10F7408137A8A67AB
4ACDFB16715A12F7F8D595988B0083AF59E989FB2D612DC7A429BFE2CDB16F26
B4FEE74E4D4905730BD134ED9179FE0BF19CF784B63AC67316A90B5B730AAB2E
7C7BC09D990EBF216DC2A770F6DA888B594A2FF71C12ABB5B958767B21650222
292AFDEDD4ACF237609E00AF0E9D33BA8B08AA0D> |
1631 <051C60D8A8C9B5EE31764285919C9FB7DC7DF650A9D05AA3FC401891CA
6B91DE8D4ED0FA765A2FB0B39EBC6BB2072654AC3CD2046FB3A7A9AD736665F2
26A61E3C68626AE9C8AF7F7E948E02BE1CFFA5BE55EAB10A33A51F925378E9E6
666FD8DEB986BF6943DBD8FA81E02E6ED5F8E64D534C87E22AD94B1AE55BF152
47305B98F85294D5AEEF18BFF50B292046B18F9589AF6328CAF78C6E946DC22C
75DCE4386065BDDF3B06A2AF1E5E2937B490226C4E19408040065067BA1611A1
3F150F32C648794CA39F2E9DFF28D5197B5B7E0A423FBD9AC8745F19DFC6BD20
801AD8592AE26DD16683CD2A71EA63C9CBA56E747F751D3DE16F75FCF01896C4
45DAE0D2B8B672BD4825BEF4E256A4A92368D10C9FFC> |
4487 <051C60D8A8C9B5EE31764FCDE1CD85D52761079EA788AA5693A8DD20CA
04C655FD68E359A8F19BF47FC34592824EDF35C6FDC4DB47D55B7C51F07F87E7
45BCA5207AC80EDF3462DD6900D1693A76A0402E62AA21A40BB36DD81D0B67FA
C4FEFFA7876FB1BF5A037809E7A4E2ABF8A9B01D2D29FC6F89666B9D618DB407
07CD270CD9C5BB4A6C724B9E45A479B93CBBCD1E80A3B88CEC1E80D40EECBA51
9CB8B9248E2F8C8AB96E8E9257A1A8763AC783B7502D8F42613164B873AE4013
E4761898D4E2CDADE6229FE8335E2E57F1D4661408417BCB5D6CDF083862E23B
85F69DDE5FAF194BC2F416C2C9DDE44259DC58F42D94E8146589C031406C9C6F
D6026068BAABEB70DDB3C8274673F9D5CC773CBCFE745FE6BFB2D509D232ED2B
97E6FB6E06D3BB72C528BE577E37B5D3532EBB4E3C3A6BB5E3054F5302F83651
8DB344795BF72C364188DADB9756C8C185CB7E448B5E66CB27925545747885F1
62AC70257F779D8060A4BEED643FFBBDF4C2BAD4DC8C63AE654C70A76EC1> |
!
end
end end
%ADOEndSubsetFont
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12 -1.46958e-015 -1.46958e-015 -12 0 0 ]msf
314.15 232.25 mo
(\007\022\021/\020\355\004\006\0221\005\356)
[12.0244 12.0234 12.0244 12.0234 12.0244 0 ]xsh
386.294 232.25 mo
(\010\017)sh
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12.025 -1.47264e-015 -1.47264e-015 -12.025 0 0 ]msf
332.17 246.649 mo
(\010\311\017\233\006_\021\207)
[12.0254 12.0244 12.0254 0 ]xsh
258.75 306.75 mo
184.5 306.75 li
184.5 275.25 li
258.75 275.25 li
258.75 306.75 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[75.75 0 0 33 183.75 534 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 101 
/H 44 
/M[101 0 0 -44 0 44 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 101 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 101 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 101 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 101 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rVup+UC@2,qu?^$lNk$,!!N3"!!:OKdfHZQk5YJiUC@2,qu?^$UBgi&qu?]ukQ/<s`rOKe!#r6qmjnSK
$31&8Tb[b7"TSN*rWT)$rr_3[\c;^Yat20r";hsU!#2XQneM?;%0-A5T`tH!p].&h!%?eW_(5^+(]XOM
`tmDF":Ye?!!fV0o`b?uRK*=9paiEr";hsU!#49*`"iIb%0-A5`!,!$rrf5"oDek>Te$<`(]XOMobOYF
":Ye?!!h6^`s)JG^&Zsh!%=`rq^_je(]XOMTb[b?%0-A5ncc6$rrgjP`W,ue^+A=r";hsU!#24ErY>VG
%0-A5T`tH!li=3h!%?AKbq&u7(]XOM],'QF":Ye?!!f2$rrehl!WW3KTe$<`(]XOMl5$lF":Ye?!!gjS
dKTXRZN01h!%=Nl";hsU!#2+B":Ye?!!hZj]*83;aoKfh!%>0)mjnSY(]XOMTb[b?%0-A5rWT)$rrh9\
\c;^Yat20r";hsU!#2XQneM?;%0-A5T`tH!p].&h!%?eW_(5^+(]XOM`tmDF":Ye?!!fV0o`b?uRK*=9
paiEr";hsU!#49*`"iIb%0-A5`!,!$rrf5"oDek>Te$<`(]XOMobOYF":Ye?!!h6^`s)JG^&Zsh!%=`r
q^_je(]XOMTb[b?%0-A5ncc6$rrgjP`W,ue^+A=r";hsU!#24ErY>VG%0-A5T`tH!li=3h!%?AKbq&u7
(]XOM],'QF":Ye?!!f2$rrehl!WW3KTe$<`(]XOMl5$lF":Ye?!!gjSdKTXRZN01h!%=Nl";hsU!#2+B
":Ye?!!hZj]*83;aoKfh!%>0)mjnSY(]XOMTb[b?%0-A5rWT)$rrh9\\c;^Yat20r";hsU!#2XQneM?;
%0-A5T`tH!p].&h!%?eW_(5^+(]XOM`tmDF":Ye?!!fV0o`b?uRK*=9paiEr";hsU!#49*`"iIb%0-A5
`!,!$rrf5"oDek>Te$<`(]XOMobOYF":Ye?!!h6^`s)JG^&Zsh!%=`rq^_je(]XOMTb[b?%0-A5ncc6$
rrgjP`W,ue^+A=r";hsU!#24ErY>VG%0-A5T`tH!li=3h!%?AKbq&u7(]XOM],'QF":Ye?!!f2$rrehl
!WW3KTe$<`(]XOMl5$lF":Ye?!!gjSdKTXRZN01h!%=Nl";hsU!#2+B":Ye?!!hZj]*83;aoKfh!%>0)
mjnSY(]XOMTb[b?%0-A5rWT)$rrh9\\c;^Yat20r";hsU!#2XQneM?;%0-A5T`tH!p].&h!%?eW_(5^+
(]XOM`tmDF":Ye?!!fV0o`b?uRK*=9paiEr";hsU!#49*`"iIb%0-A5`!,!$rrf5"oDek>Te$<`(]XOM
obOYF":Ye?!!h6^`s)JG^&Zsh!%=`rq^_je(]XOMTb[b?%0-A5ncc6$rrgjP`W,ue^+A=r";hsU!#24E
rY>VG%0-A5T`tH!li=3h!%?AKbq&u7(]XOM],'QF":Ye?!!f2$rrehl!WW3KTe$<`(]XOMl5$lF":Ye?
!!gjSdKTXRZN01h!$7gb":Ye?!"Yb=":,85!!MHg]*838aoKcgZOQC5!"&Q'U'L`%quH]sV#^PthZ11e
apm#5!"&Q'YR'h+!!N3"U&b5qp&LohJ,~>

%%EndBinary
grestore
np
182.13 300.83 mo
252.996 300.83 li
252.996 272.484 li
182.13 272.484 li
182.13 300.83 li
cp
level3{
gsave
[100.22 0 0 40.088 182.13 272.48 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[100.22 0 0 40.088 182.13 272.48 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
182.13 300.83 mo
252.996 300.83 li
252.996 272.484 li
182.13 272.484 li
182.13 300.83 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 2 GetGlyphDirectory
3039 <051C60D8A8C9B5EE31764D1907641C9340D8E7DB5E79F53593490F1CC7
845D33A934355A66DAEDD9FD416D42ECF540031CE1C04AA0AC97186C2E7C425C
418F949EDFDE60EB6D74AFA90F938F0FCC8E18A3815BF4BA90E6187CC89D86E2
C42509DCDCF21C32E3850C370D7EF4633F60E1E27614B07BC70FD5E5AFF3C45A
E48CB350CFF1A04A191F4F3D1472C786E5944D2C615CDA5130E4348CD29C0ED2
3D149CFE959C66E46FAEAFF900BC333FDCEC7734B3D1779CA3022D0106ABF8BC
829D0DC11BD5C95FB4B60CF88086C35A33971EE1E912DB58B738286AC7FE0ED5
383490D54B3FBB00224D4870863FCB93CB6040CEFE84D1DA5EA7A4BE78F99FF5
45EBB2037DA2FB71370B773659E49F97B16E2BA7F8DF4FEAF8E7296684933FB7
FB3EDD15742A90B93DDB071A7574AD31DB3FF69E51F6AE919057A6FD9994177E
1B0F8774F562AA7B> |
2126 <051C60D8A8C9B5EE31713EB88C67926D13F71D9128DDB12F9F62835E19
77CC64A8E40D6B32FE1FBDFD1B98A71FC8767730AF5608FCCA2CBB102FA0BAA3
7EE4B079424C4A6E7BC9A140E76F78B6283F54D600456CC27DF8F069E6748732
334A90875B673C3DC98A04D383D9B4A530F0334B5B829D4B2887E8237E46AC91
C24528B5AF8DB923821A0A98F1DF348C38852493D65B6DE9A8BF7BAACCBAF76A
FBB1463CBFDD2598F2563B1BC2D015C703B7AAEB584E23607D61C9D29283C5EE
70AEB774CBB55B963FD862F1644D5B302CAF7B9360D17FF56E229465D4C3DCFD
1A51A9B8031823CE9151249CC24F117CD7A2300630E3E35573F9B592081A9AC6
E40FD9123E892E3CD9B6C9B5D81E602C5B176117EBE1241032BD2B8756F78892
4FA770150918BDFA14583A1976910AA4C43103915A838C6BE28894983909EF3E
63B8C96847A1E3F3AB25> |
!
end
end end
%ADOEndSubsetFont
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12 -1.46958e-015 -1.46958e-015 -12 0 0 ]msf
193.8 290.53 mo
(\010\311\017\233\013\337)
[12.0239 12.0239 0 ]xsh
229.872 290.53 mo
(\010N)sh
404.25 306.75 mo
315.75 306.75 li
315.75 275.25 li
404.25 275.25 li
404.25 306.75 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[90 0 0 33 315 534 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 120 
/H 44 
/M[120 0 0 -44 0 44 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rVup%OUV9tqZ$U!rWn_o!!W3!pAp`a!!DHcRfEElkmaU$!"/T'!!M9eYQt44q>f7N[fHI2blG6R!"[:)
`%1m&r;Zg'`>6W4!"/Z)!!Bq=dKKUQZ2iAS!$8?qi%+jPr;Zg.W>=Y4!"o/0!!K#"mKERpQ2pCS!$7@U
r%%glr;Zg.Ntqa.!<)ru"HN]d#5J7Y!!")7/=A$h,5hKA&+C@-('"sF!!!/d"fDM(#2K9Y!!"(p/@@#/
,5hKA&(DB-('"sF!!!/H"iCKD#/L;Y!!"(T/C?!K,5hKA&%ED-('"sF!!!/,"lBI`#,M=Y!!"(8/F=tg
,5hKA&"FF-('5'J!!3-#"HN]d#5A1Y!!")6/=J*i,5hKA&+::-('"sF!!!/c"fMS)#2B3Y!!"(o/@I)0
,5hKA&(;<-('"sF!!!/G"iLQE#/C5Y!!"(S/CH'L,5hKA&%<>-('"sF!!!/+"lKOa#,D7Y!!"(7/FG%h
,5hKA&"=@-('"sF!!!.d"oJN(#)E9Y!!"($/-$mm!!!Q/(6TF5&cD\0"SW(f"TSbm!1Nrg*pG5R/-$mm
!!!Ph(9SDQ&cD\0"PX*f"TSbQ!4Mq.*mH7R/-$mm!!!PL(<RBm&cD\0"MY,f"TSb5!7LoJ*jI9R/-$mm
!!!P0(?QA4&cD\0"JZ.f"TSan!:^$j!!"($/-$mm!!!Q.(6]L6&cD\0"SN"f"TSbl!1X#h*p>/R/-$mm
!!!Pg(9\JR&cD\0"PO$f"TSbP!4W"/*m?1R/-$mm!!!PK(<[Hn&cD\0"MP&f"TSb4!7UuK*j@3R/-$mm
!!!P/(?ZG5&cD\0"JQ(f"TSam!:Tsg*gA5R/-$mm!!!Oj(',!IrVup$Ns,Lfq#HBS!$:kcR4J=^r;Zg.
n.qZ4!"o/0!!MNiVZd&)h#ODS!$9lG[4D;%r;Zg.e/#\4!"o/0!!LOM_Z^#E_#VFS!$8m+d4>8Ar;Zg.
\/*^4!"o/0!!KP1hZWuaV#]HS!$7mdm485]r;Zg.S/1`4!YGD4!WW3'Ns,Lfp]-<S!$:hbROeF_r;Zg.
mhVT4!"o/0!!MKhW!*/*g]4>S!$9iF[O_D&r;Zg.dh]V4!"o/0!!LLL`!$,F^];@S!$8j*dOYABr;Zg.
[hdX4!"o/0!!KM0hus)bU]BBS!$7jcmOS>^r;Zg.RhkZ4!"o/0!!JMiqum')L]IDS!$71P!$_@A!"]&E
Oqn$0r;Zg#pB?rg!!_`hRfEF0kq&_`!$_@A!"\')Xqh!Lr;Zg#gBFtg!!^aL[f?CLbq-a`!$_@A!"['b
aqashr;Zg#^BN!g!!]b0df9@hYq4c`!$_@A!"Z(Fjq[q/r;Zg#UBU#g!!\binGiUj!$71P!$_@A!"]#D
P84-1r;Zg#p'$lg!!_]gS,`O1kU`Y`!$_@A!"\$(Y8.*Mr;Zg#g'+ng!!^^K\,ZLMbUg[`!$_@A!"[$a
b8('ir;Zg#^'2pg!!]_/e,TIiYUn]`!$_@A!"Z%Ek8"%0r;Zg#U'9rg!!\_hn,NG0PUu_`!$_@A!"Y,+
!>,>2!!!._"TSc&!0$sY*qq4R/-$mm!!!Q!(8)EC&cD\0"R-)f"TSb_!3#qu*nr6R/-$mm!!!PZ(;(C_
&cD\0"O.+f"TSbC!6"p<&&0[C/-$Oc!!!;7(>'B&%K-8,"0i$e"TS\%!8mhW$D\.!%0-e5!!!1n#k\H'
#6"W%!!!+`!<<2q!0$sY$MP"!%0-e5!!!2l#bhS)#5\B#"6fic!<<2U!3?0N~>

%%EndBinary
grestore
np
313.58 300.83 mo
397.911 300.83 li
397.911 272.484 li
313.58 272.484 li
313.58 300.83 li
cp
level3{
gsave
[119.26 0 0 40.088 313.58 272.48 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[119.26 0 0 40.088 313.58 272.48 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
313.58 300.83 mo
397.911 300.83 li
397.911 272.484 li
313.58 272.484 li
313.58 300.83 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 6 GetGlyphDirectory
2568 <051C60D8A8C9B5EE314FF435697BAC9E7D3677D2B6CC6265F50A0EAC1B
17E751BDF687550A271F7826D474C7D3DC5E3C3F1D0A54DEC70865048D9C5B7F
FE4E341B7111011A524BD0B01C46408B5D3B129F34263F8950473C2474DDDE9C
26C6ACB7EF76E79D1FF343B8F78B0981D90BA1CB4683484A322B5FEBC75C114A
B48219C6D89AC3BEAEF5A543AC04F0E74C26CAACE2AF23916C8E75F6B766B5F0
62062010F6E4721E0B5DFD96BE15038BE4274D40A4E732DA08CEA526941AA817
066705CBAC483952A170602EDEA6DE3360D45F40E3F543E7806A011C1EEDB184
A87D25AA9AAC82A56775B0EB419C4723836849D543B4DE03EC6061BA1F9EB810
1E885121EB6EA54169F94C3CA8614BA05E5E1E82EB8372E3AEF326DBA1ECFE34
405B7ED3F2F8B436AC91B190F99281B2A4EFAA0072B0B4ECBCDDC42C02D58BE1
483878E155E460922645E4AE0E621BEFC6DF44534AD971B68D5DE9F453358838
64957947FAE6638DE298250A2D3326380841D2A7E96EF5C9463CCDC0B217169C
45BAFAAD763BB941BA99996A0B19BA3E1F6CB2A69E34B7DAECBA3D985531AA95
AB177D339FF7B776050E27B8EA43CFFC14A6BC96E01EA2ECB0E53ABE04104E77
7609D02B9664B5E6391DFF85C9FF11D6443E33698800D0D4DB0568CECB31C5AD
89CFA219C27D75CBA34B3E14790DE5B7FAB5C0F9E2E79AB6907033A8B3CFD4AC
1491B1DACBE3A28502AE261E178F42C532CD899E144B1E800AAFBD9185FC5577
185171F6824BC3E36BF8D156> |
1988 <051C60D8A8C9B5EE31713EB894F54A8BB8A4D7AC345FACAA20B64D9B70
4540E4A72E894CEB77C5D74DDA95C03445A6E2A4182443E1C5DDD13E20804CAF
5D846F6173EC1C77CB4549E431A802D6BFA169DD15AD4B12C8FBC21896A82DD0
8B8CFDB81A181D21C38CF496DA48D19F8B45B3E7691039BD2162970E03678800
150053A4111884B1B4DE911C1DF9BD074A45E148B33EEFFA8C7921EEBE316D7C
1A78EFE6EBB358243F4C52B877EB5B82477521F1A4C6811F6478BCFDF896FD88
AA30B58ADF44BEB8D7CE313CAE9FDD2E1B9C6EA277A939143A5113EF8487D5F6
07E2A7A7F87C311A089AE91D79408E1EDEFE2D71886DB6F44599AEB2AB60499A
4C22271FA90BEFD0733DFB5AC5F4F0807A> |
3404 <051C60D8A8C9B5EE31764D06A93F85661245C74BD956B189795DE4BE3C
6B9C645C860A486173290E05D03836E3F059BFB35953AC692E9330A19240FA06
03B72D7E73B457B1BBA83B79698D923A06C7461CF44E4E5A4E0822277B99A190
CE990628B6E6EF937F9D9623AE9B0A9C7222AE96EED258713F541E981DE50C9C
C5555952CB420BB9A1FE5FEA2063B3EC9823CD4C4992262386DA06F4F70D2711
A8BA5F8CD3E38897D5F2ED7ED6BC7F07D88F67E22960C5999622B2EF398A3AB2
BA4822B41D7FB3B94D7BB3F076250BC8F947A9B75F11F8CE077C0FF98671F41B
F8F2B8557146BF796DF916601324FE407AF29D686D826DBE90C0DAE16237CFB8
5F4D213F44CE32F8B1015C68986014612AB6BAA00208F1AA074B8A> |
3392 <051C60D8A8C9B5EE317771280C4EB0400D1CE15D99471D263B1700097F
2B7363FC7F09FF0964098ED3A148B59CE6AD9657B7D910842D641A2E011E479B
2CB19B0F51B12480AC42B420BE429CCB00EC81F983F868F77BDFC87D25F67702
3DE475F1F50CB36EE74A1C94DC3B43E42A3B18B86FE467ACE903DA7A97C4BE0F
D9235D6EA7FC7EE12B8757F4E605216776DE47A6EAA7C7689E28CCA0847D2EC6
91565938066F8094A75695EC1E019DE6DFDE5EE06805AAE9DB0FC106B2DC3384
D6FA938EF05FA85BA4EB594031040E9A056CD884E2809CDDF54640860F8ADF95
7128179D00DB5FCD6E94744B4D0E7FA59B280A3C52C012A0B4B2124F3406DABC
9136BEEC24D5CDEFBBDADF5F6CAF3CC989F4F6CCD6C6C4EAC53482B765BC9E45
A499642845EEA53B75DA72A0EF43CCD39C6788911D2D96426EEE5ABBC814FF75
C9F6B66B835DFD2B89F2214E734B357F67AEBBA5F57316FBD2897EB6D3675E9B
4D3D46DB3C35ECC772B66E161C6E072715E7D8431808B02B50BFF5D3C5B418DE
E0895F66F9C3E57B1A9A11613B4AEC1F3100EC4D4B46AFAC2C4B237015708895
00D2EDDAB9B17488FD81A769181382F81E7A75C3EAE97C64889369182A851455
77B6EAEB35FC68BB013732FFA527F0F8811D8552DDDD8B296CF6161208083139
2C8F9C40C2F149DA615F17212AD0E80EE0BAE5E7C5B78A5E7C63C7EDE8F3265F
6BF3A14FE3753B200F690F85CBA9D67EA8975EEC> |
1626 <051C60D8A8C9B5EE31764284AC612E1818D8EF16C1E56D2CA27F912644
F741281A2EC25589106EAC8B653B4945C795932D7089803B2B850194C9D797B1
7736A755D2C4D9D0B485859F17517792069A7F16CE17C1FB3A791B8DB13AC866
B57D8A59FF6716D7F8048BEA133FFDDE36C6443970E8DDE374FE847196DDFC32
2B24AE5462668EEBE5FC315FF621A292CAAF371C669CF0F44280EF086E237A66
1B9CC7A0C658ABAB4A85485EA372F1F1373BB21C4FE756FCC878E04EF128ED> |
963 <051C60D8A8C9B5EE31764D56C43ABEF742405130A55D0735E43C59C6842
34442AAE7A98B897AB7A11D03683DD2E25CBBC60C396EDBB8A3C9A82B85A73E1
D0DD145E1D478731BB85C09D821E9DA43454422735727042FA9B1F6940EA8842
81E3756057704F5983B8D3D7B024DDDF6A926D061676A1DE9CC35F962E048F26
0396BD7987DE3E94AE587C14ED2B77035078B5739791396061CF1A41E5DE9F00
51F9A121A821019393AF56B8363F62AC5863350119529DB7AA2F516C49EEAE59
756C88A01043AF4C23BD37C7A913004F9D9FB4276D733F1E84EDB21FDBB19234
E5B8734F8E576855BD9EF4BD08B221DC081A44194491DA3428F0EAF79D5635D4
44B964991A75230847EA913455575B069DA5BAD2FE8377C828804A005451C577
E27E394F1B781DA411A6AE4EC5B770E5721BEDAC01B9D836D8F6C0E86032AD41
E74DB47D941306D6F9D94B4749159A8FEA0BAFD2B941DFBB09A2E4F62361321B
EC3D927AC1673F0FD12C743550A58DCB2DFC29FE610E1AEDAE031FEB454AAF07
901A1413C5650115FC4188135A4D5344A3578719CA31E0653A9575EDA6761936
6D870E33514C89D37303387> |
!
end
end end
%ADOEndSubsetFont
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12 -1.46958e-015 -1.46958e-015 -12 0 0 ]msf
320.15 290.53 mo
(\012\010\007\304\015L\015@\006Z)
[12.0244 12.0234 12.0244 12.0234 0 ]xsh
380.271 290.53 mo
(\003\303)sh
1.2 lw
217.56 82.56 mo
217.56 95.89 li
.763302 .517082 .0459602 0 cmyk
@
221.28 94.96 mo
217.56 102.4 li
213.84 94.96 li
221.28 94.96 li
cp
ef
217.56 130.75 mo
217.56 149.75 li
@
221.28 148.82 mo
217.56 156.26 li
213.84 148.82 li
221.28 148.82 li
cp
ef
217.56 249.8 mo
217.56 265.97 li
@
221.28 265.04 mo
217.56 272.48 li
213.84 265.04 li
221.28 265.04 li
cp
ef
355.75 253.35 mo
355.75 265.97 li
@
359.47 265.04 mo
355.75 272.48 li
352.03 265.04 li
359.47 265.04 li
cp
ef
217.56 196.65 mo
217.56 214.95 li
@
221.28 214.02 mo
217.56 221.46 li
213.84 214.02 li
221.28 214.02 li
cp
ef
261.5 235.63 mo
300.34 235.63 li
@
299.41 231.91 mo
306.85 235.63 li
299.41 239.35 li
299.41 231.91 li
cp
ef
270.75 360 mo
172.5 360 li
172.5 327.75 li
270.75 327.75 li
270.75 360 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[99.75 0 0 33.75 171.75 480.75 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 133 
/H 45 
/M[133 0 0 -45 0 45 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&cN!tI'Xek((]Y'D!!!A=%EJtY#Q4W&!PnoU"98M?!4Mq.+O)IF/-HIo!!!V[
(9\JV#RCD1"PEsX"oe\[!1s8P/=e?l)#jU$(7,g:%K?Ft"d&ug"S;\L!;nC%/-6Y*!!!"O(B,*L%K?Eb
"o&9$"H<EL!0o,%/H6Re!1Obd(B4jD!20SS"oe_%!7h.P/CZ6N)#jTB(=!]q%K?E]"oSW)"Gd'L!0Ac%
/H6Re!1"Dd(B4jD!1X5S"oe^u!8@LP/D2TS)#jT=(=O'!%K?F8"jI5N"LnHL!5L/%/H6Re!6,ed(B4jD
!6bVS"oe_P!36+P/?(3#)#jTm(8DZF%K?Fh"e>hs"R#iL!:VP%/H6Re!;71d(B4jD!;m"S"Tef0!.k4I
!/W9%/H6Re!07od(B4jD!0m`S"oe^n!9+!P/Dr)Z)#jT6(>9Q(%K?F1"k3_U"L.sN!<3%P/H%.")#jSn
(AAUE%K?Ei"n;cr"I&oL!1YV%/H6Re!2:7d(B4jD!2p(S"oe_,!7(YP/BoaG)#jTI(<73j%K?FD"i1BB
"N1;L!6d"%/H6Re!7DXd(B4jD!8%IS"oe_\!1s8P/=e?l)#jU$(7,g:%K?Ft"d&ug"S;\L!;nC%/-6Y*
!!!"O(B,*L%K?Eb"o&9$"H<EL!0o,%/H6Re!1Obd(B4jD!20SS"oe_%!7h.P/CZ6N)#jTB(=!]q%K?E]
"oSW)"Gd'L!0Ac%/H6Re!1"Dd(B4jD!1X5S"oe^u!8@LP/D2TS)#jT=(=O'!%K?F8"jI5N"LnHL!5L/%
/H6Re!6,ed(B4jD!6bVS"oe_P!36+P/?(3#)#jTm(8DZF%K?Fh"e>hs"R#iL!:VP%/H6Re!;71d(B4jD
!;m"S"Tef0!.k4I!/W9%/H6Re!07od(B4jD!0m`S"oe^n!9+!P/Dr)Z)#jT6(>9Q(%K?F1"k3_U"L.sN
!<3%P/H%.")#jSn(AAUE%K?Ei"n;cr"I&oL!1YV%/H6Re!2:7d(B4jD!2p(S"oe_,!7(YP/BoaG)#jTI
(<73j%K?FD"i1BB"N1;L!6d"%/H6Re!7DXd(B4jD!8%IS"oe_\!1s8P/=e?l)#jU$(7,g:%K?Ft"d&ug
"S;\L!;nC%/-6Y*!!!"O(B,*L%K?Eb"o&9$"H<EL!0o,%/H6Re!1Obd(B4jD!20SS"oe_%!7h.P/CZ6N
)#jTB(=!]q%K?E]"oSW)"Gd'L!0Ac%/H6Re!1"Dd(B4jD!1X5S"oe^u!8@LP/D2TS)#jT=(=O'!%K?F8
"jI5N"LnHL!5L/%/H6Re!6,ed(B4jD!6bVS"oe_P!36)".bQAP/H6Re!8\Kd(B4jD!9=<S"oe_h!0[B_
*q:eD/-HCk!!!Q((5iq2#RCD1"T8LX"Te]*!.k4H!!!@a%J^G5"oJ?#"d')^#QOr(!!!+f!UToR!9!nX
$DS'h%0-S0!!!2%#hoUb!rN#u"0VaU!NlFH!.Y~>

%%EndBinary
grestore
np
170.08 353.98 mo
265.041 353.98 li
265.041 325.634 li
170.08 325.634 li
170.08 353.98 li
cp
level3{
gsave
[134.29 0 0 40.088 170.08 325.63 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[134.29 0 0 40.088 170.08 325.63 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
2.16 lw
170.08 353.98 mo
265.041 353.98 li
265.041 325.634 li
170.08 325.634 li
170.08 353.98 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 6 GetGlyphDirectory
2009 <051C60D8A8C9B5EE31764DA07B7842FEB2FF9A8E28535362CE6B8BAF39
4DFBA36F9FBCC3DCA356C4E874C303AA0D6D2053ABE28ADBCB0B5087B6E0A12C
64FF7346539D0E57FBCDD38D80FDB8802B03C004840CF6702DBC99B58C9DF9EA
1E8BA2D05350FCD9502D5A2DB00793821A275825C6525AFDF59341294A3B9522
3CB738AB3F973283A3D130A9932A91AB9FC5D130C141EE2D9C98C008BFCC4759
C68F18E45DA83B764957D348592BEACC06A980CCCF5B8DFB30855007252326CF
A78A4FE0D4F52D3A77BDA996A8D3D4AFDB2E932D3A2461EFF16C0C2EFE383C40
798DCE5A7995AE5C24A206EC915CD30FAF3923CBDCC03D4DA1CE82D188D4DDFC
A39B0202E39C81C841DC49F5DDE021854AF2458221949C774F3C79D830C4F5FB
F20DA12D605AD1606229C6C1CDF5C6573CF068EC97E569727143F0CA7039E2F3
12ED35912EB97428441DB06A282DDC2F04BC07F6A94C4B7BA746BE50F63D4D83
B3B106155FF1CFF25B45AD64E93A9987BE94520C2D3151809BF402DC2105BBEF
7C31E48E1C39AF719E95F71A864275AF20A300E4C38CEC731E82FB1FF28EC9BE
819DC36417E1135EF521A81D9D83A17623BDB8E2751C7D1628F690DED6923B4C
4D97CAB06057B262A57696C6815E1A0A8BE55079AD100ADE7C5797F3B629D7E3
4FCAF260BBCA111889A1A81FEF7E88DAFBB641C92D346DB36D9CF5BD4642D052
08E170F3175CF54BC2560A95D9B1CA668EAC8451FEBA2773AA6396DA0E1CCFC2
CD5C3AEACE67BFC1455A3B17649B09> |
2833 <051C60D8A8C9B5EE31764D4F93C2B0118A8BE8187DBA9E13ACAAFFEBF0
3A1DEBA8FE3F9DD679191FC5875829BC02B1E940AF7E404273ECC167CF715AB3
70EBC78CEC045AF8305086876FEDA89E74451A561A376562105E697609C3DE9D
2EB5A0AA57914A711635A6DB98B0C1E0E730F6F6CA3C96F8AEFFFB6495E5FF05
463E48FD0BBAE85F1A1A33BF483BD608244229050B21B1C0A8F155BEE9ADD149
1D7AB954969FA732625DB9D7E0DA521276977FC76CAA185BA2088E91C7A0A659
D2A6DBECE1643DC52193AC2951AD685775CF8339A1D745EBE3C960995B1F31FD
146C3267D43A5797C8195F2639AAA50672FCD6FC23E921A0986850A1EC6365E4
174A33D49CB02FE5A3515BC014E4D041F753C92191C0487B5EF4DE5C0A45C62B
D6C59AF8085AFDDF0066594B1DE154E8E54DD8AF3D69AE1261B401377A2FB4AB
228041B66DE4B4F59931E683565CCE49769F4A8DDB75EC7D6DE01E3979D79BFA
CB144A0357BD04E2F98E9F6FAE95584B917B4B25AD443AFAEFA78A179CA6A635
90737DFAB68C8B703848C86B6D0486F3D88BB6DE0C6C530751ED334DD1C98745
FF4A27E68B56687E318AD3803A62094BFE7FCD0BFD566991FBECB2ED28C3FDCD
AAED8C9ECC286ADACF53A3EC708CD04FB4CCB8FFE07263667593996391F819F2
642768720991A1DBACAC076D0886A49E5816317A79303AF659237E77B92F80EC
0DAF336E983D3769C24AA866A0BD7A984745745E8DE595D98B477DFB> |
4089 <051C60D8A8C9B5EE31764D761D86A2104073EB71947F319AF4687C822C
DB77CD849EB570B920AB5F4D2098DB3140980646EAED909E21F1E36761764546
67E7717782C97D7D9CD61CADDE90E6B21331F4EC1E4344702E9C8C2907F138DE
4CB7BBFB7DBDCCAEB0301E5DABD2C97A2BA5568F272FD937BA6B857A4DCCC84A
28672D433BEA2922DC5DF9D564BA7B680D20971264D87260D0D84BF59E048F3A
94FEE4EBA0D7FAC592DC4AB9A088C545234834BC7184F1E7D64CFE1F680A3C52
1AF845D871D539EA8037D288CD87D6182713F7A4AF6E18A4CB595E0CFB3575A8
DF6488F40D515F04412712B9537C531EB9DAE08DCEDB5E8D6A72D1A01688C95C
E2E65D76E3C4278F0EA1A32731AC9A1195EFC483C336BE15A677CB4A6B081B0B
A7AE112003766471DF7D7FA3F2CF61597B18851EFF4288A41E2564C4950493C1
9C86E6743673427D043D44A375BD2B02330F3EB16665217BB0A4DAE095E05344
348C03505C6D119BFB99A19588E909BE8630E953F8E6A5CDE7522490FAC9E5E4
CFEF0216CB902FE51A7E8F03A4090615736426C223F2C8597CCE3F3AB6F5CC3E
73986E246C8C4FA19910C8AC5CB01B358E4E> |
2286 <051C60D8A8C9B5EE31764DFC1529388B33C64BB4D3C541C5BCE984C2D9
93D509F86FC2FDC3AE33F880A8D77A203002C3CF03A5DF8AF5FB4F6EC3CE4321
57E1C111678502EEF9D7BAE1B44A867EE90B719DB8D92DE077FC6B1938226D98
8D6F3988A0B207447DABCA5E30C27F317430E385BC610AE83FF64A6A517ECF46
C6DFABE14C6DD1819333A174FF701D641BB4A70E42AD3FA5F0545966CF6C0DF6
E842F50E11FEAE339003BC97E263B3937A9ECFB948441748606E307EB85DDDEE
2FE34A9765B759896ABF7C41A40383A3C11B96AE6623243767CAC3FF5D04E886
0E501243A3EEBD4C3E08AA0B4AA5986CD8818B37A7477FF1A89BF4F90B4127CE
8D5DDA2857D3AD4D92712ED98517FF803883A6BFD4BF70BA886FBBA3DA385D51
3EFE0D6D9E328443CD04AB7C4E16CC95530320E92381F23260E594F090776EDF
7A96F5EB2F07326B8528B836F8BA95F3C459455081D63CE1F7170C47156B0416
D8D95892C1E0C06EAD0DB2A4C27C373C3F3698CABEC2347FE8ADB56B70AC4F85
53110A066AB7D37FA5EE25DE58236EBE33AE5E75AB4D3F8832569B00B53D2709
11B9B22855B729D110367E4BBFDC5E3CBA2E519966CF3C3F> |
4665 <051C60D8A8C9B5EE31764D8C40184AE56EF07A972E5E4B7E19B4777BE7
8D63D785845A75A3B48D9CDDB78F6CEAEB8508F06FE8FD58D38E3A8A7260DDFE
F41BB810F2391EBC16D2F193F9EE3C9D0A52FBFE58BCDE62D6C5C30804E94607
055EBC7FDBE6684D09C11A29A90AAB9B498279E6F7E4F7A5B3F810158D2E6E95
E9A613B4E4BA1EF1F430B517179E592051640E444E02D00C4D309CB02870FDB9
848E369237D3460CBADFA333564C488C6B39DD65489FDEEED71B1C02231E5AD3
DB7552256368D9A5464834F063A0F6B0B58E25771DE2FC3F497E0B36C0442534
A44CC81E086CE85BE884AC0F9E31B3844B30A30FDF17D7E6BC99323C4A14F5FD
6D4F12281942AE722ACD2C9B005C7885254FF0E109505508CBD87EA9B69947DD
9D0ACB2B21D2E779A86F8E942142790A4C67F82545874ABA796B2D6C9396DB6C
62F25241CB83C8404EA6A2F7D0703B733556EB2CEBA7C30DDE4D2A10F702D1BA
0DA607DB9EA637D2845A70C113F49F7712D3FC> |
2226 <051C60D8A8C9B5EE3176226FCE8AF51BE273BA2E92C79BEA570BA5AF54
FE4436574B15F6A87C450F5CA5368CB25E155D6E114CE88F7DCEAB413A97822B
9F9BA8D17F0389B6199471F88387F5727DC9E8486E45239ABD37E29D36B2F596
CB85A39DCCF496DB7169791CE327EC24684EFDDFB51A3A2E3DAA3CE84380CBCA
B052C41309D6AA6040BE2C6917BD036461C23EF8508106C8136A2580F31DB4F7
9FD22C3D1A77B776DECA73373AC78330686D0AEBA88BEC78D87559C680221190
D7859974DA4B9DE2A27A3E78F4762A45DE95F574B4CFE5789425D5C50A1FE03E
1DB3258BC56CF0B074C689C45564AB5112CFCEEEADE58D90B9A1AC754CAD8A4C
712F41E95E6AB4B15E8547666E587BCFA66B04923D8E5F74FA8946428D042FDF
A5ABC056DDB1A3E5CAB92BFB423424A4E3FFEC6404C5B78F9C9C9A528916179E
14FC3DF971EF80FC9BFE5680B25496BD0D254F773A3E2E80069EBC8BC62BF34E
BA65F8842E0DB6A1BC65C5B97C8349CC75E92999423704A77E703DB9BAA0989C
7C876738B432BF6ED00257812BDAA57068ADEA7B432CA5E4A358CAABDE27A98A
5797F50982C8A175CE3C936FED3800BF514E39F9257CFB3CFECFB56A1B162773
722716DE79932258325AF047553EEE9682585D6C3F2A866A3FA11BBAA38A904A
A10909CAE957C4BC28E724908F8207A508DE6493> |
!
end
end end
%ADOEndSubsetFont
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [12 -1.46958e-015 -1.46958e-015 -12 0 0 ]msf
175.77 343.72 mo
(\007\331\013\021\007\304\017\371\010\356\0229)
[12.0239 12.0239 12.0239 12.0244 12.0239 0 ]xsh
247.914 343.72 mo
(\010\262)sh
1.2 lw
217.56 300.83 mo
217.56 319.12 li
.763302 .517082 .0459602 0 cmyk
@
221.28 318.19 mo
217.56 325.63 li
213.84 318.19 li
221.28 318.19 li
cp
ef
355.75 300.83 mo
355.75 311.46 li
217.56 311.46 li
217.56 319.12 li
@
221.28 318.19 mo
217.56 325.63 li
213.84 318.19 li
221.28 318.19 li
cp
ef
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H uf
/JDHKHI+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 19.1.0
%%For: (keming yang) ()
%%Title: (procedure.eps)
%%CreationDate: 8/8/2015 10:13 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6=`6+>Os&oM"7SO:g.7**/_hXlh]u(r8o7Oi/4l)9WCWV-:-ZtO^n.uCcPRM7K7Wu5")S,]@/MkT_"OCggUH?Q3$Yd'S]fW5
%])>2sM6+kBaGc(:/L*$[[nGcWW7N-)Qc?dO]bL<;A.ma@SFQN_^"qmZnl(_RnRr9Pd*Vu\Wf4R]+[;Ed$f`j(SX.<KYqXFKbJ/*C
%mg8`KSoEO%58]@Zj=LhNm[*d@g3>GAAN0G'Ar#:)pe<rcg$*?oDju,d1Xk#N-f@@iZ^IL3p!TWTWSWja%<W+]o>tOikBfkR<'3j]
%C]+9@)[f#Nk,$`ZL%!G`]/8seHDg@CLDR7&-A-6CD;;ss.I%f9,^dW+;shIG\ol!<AdDP<,uDd.q4r/7`XB?ubqPP"S]o%4kV#57
%d%,8.P@DsV.[a$YfQ7JgA10L&UmM:SU([h;h+;05R5B5D9e\#N@D%035Q<D:_dEE>?i8_eru]QQWF`qk1?=+lWTcZ6M/.Q")/qAQ
%%jmK37MFW<6_URGZW%Xt";ctm;4:*R1mLW[=XHj!$+RrNW'PMfOe>VI('$uTigG$<PG%.SK>FEaKu@^@C>j[0o7+o/ccZHdf8$c&
%3#k@qG1HUCKO-\\V^QR#+'m.s]Po[l_cS_i?A?+A1@FZ7oS-74D8<iCQp>dB=0]\$-bT%,7,[+AI+BC#ZJMqs"c[ekqjdsI-5Ft.
%G):_;NtAD?%(3h*Ir#(AStl&6n$=R9'$Fk?B+o`94hem@Mo7DcD`SP%E9RKDf*oQCR3ZZA4R&\V7W'3J>U=X6_2K1"BWNJHlNU0+
%p"HmN%t%.T,_:LH#RLkf+Qd`5he,7tTckAsGaZ'4pN<1e;og"LSm3tTUBmjg6dlo@0hfUSSIGKh,uM/8390.]L`SD<1Xm"^i0\]`
%6o?EmkfK+BmctB?ZU\7B;,)f8dL<u<oFd4+Kq!'b0:QPkDhJ)7>P`cf:XMOC--O._R=o?&"4qQr]$%DKT4Qt1bJI2D,u6749<TY*
%:b8#fDoj7=9.$?710LYLQ"DdJ-Bj!9cqXFa-3M4B)(5]]i!RHGALLS3_lMlS4=QVj9W\LpCUI[c^L!s,JQe&G6lJdg9NjhlP,IfL
%oUKL?lgPFB6,2=b`LpR9Dojg!'O7=?F:,1\mh.\&bKqoP_DgZm>bNX!/5e?I$Ego-n,[Do^Aob".;8esK<E$*b1(0F:DtP7G_0X]
%97eY'P#k6D8I%fX8a?Y0gj!P3Ua"k)MEr?C$<<4>,X!O$`.<OO:^m1KNANp1Go?Ga=82t?,]j#fZ12c@Y##Q'#ZidKKNne'8IGNq
%6jpNp&g^+:8")tf&&ehF,i"L<P7HNjPGSr5Ui'o!8.k(kb!61X)MJ[\f1F<1A*>.BTbsJGkTdnOGo<b]#!.QHQ`+/X8HaGE#,--q
%S0anlkRKPCO:39>Bp)"s9<_4G7rV6H'BJ,l9*6F3O#.r98ao=EU]U+Wr.p=['9uBP)1-rX;FM&p&5lP@5C!LI0$R^6Sk7"$joM/t
%BauPULgO5^8XfItBM5j97K_?iTbG2DTL<Ote78k@WL1=jdh3J;@[)6c57Bn#.K@L#aE@8Trf\Gr3`6jbO7Jq@Uf-9cnt5iU72_7`
%bL"_t:U*G3.K@LcWC4HNs2bdt]i$#_PlKgB=s`'ks5\ruImcI2@gH-k^>uouNVnPq1@]BI;6/1HX5^OSY1:U#=na$<<T;P4/QGAB
%d-E,[R/Ee\ia2j<LD<de!eo#XFG2eIMl\0Z`H4/$mUVtAN%Zf<?:-Rs1:;3Uc(s8.?77!t1VlZu,oHD0!^l&_5T]07W`mW>7qoN.
%$>r.!Cl.eV70"h->#!NV9O5VZ0dGSue1-:XqHln9dAJs<^>(0e&h3q^#mS?";n-hW<uLe*Wi"h'.b#>p-?t-b+G(^VKATiNpDrOa
%$B]3km0T)X-5cN1HV+T0+&n0u!:p>c1:CUN.o[.]JqcV4C6]D`Ft6;l9^3%8*L]MF!MATK1*@+s9<a@0>p\;MfZ"1JPEA,6UEMrn
%!9jsjLS7?p[C"ST1;ODLQ!rTr(&b#&>_9eq-Q$uc(_^V\WZVSMBY(GS.iGU7L`TAS`7G#]#X59%$D0&u.nTo/dF\B6Y=s)c97eXm
%a(,/bZr%Q))<IUfT1g-t=<k1P@>e=5!a<]i69J)!8jF8-Y;1(F+,i5F#5eKi2?cNLmD0JDUQC#Z^u3428I<!3T7AorO.O:X'VRZJ
%NF=SmkSgfO%bSg<!F>jF'%J3HZNRUDFX](FBZQk#%-[o%N6Jd=VJhbW>A6:d!)Oe;94!2L<A]L?Xp29HP>.0)'UpK\<>ARbdPi%)
%18tTF#[IMs1=.Q\RjB>5R7%6<&:.S]P:lYUheRafJiMQLN5Ue`EtF`BT&jLsl2S]t0)hQ9Z5(g*>(pQC0d.k^Vc<;Drs7'rcuB/=
%J#EZC-Cg#_9SDlVXclj5e:Oa"!$RFrAA61t]#/d6i(DFB8r;"'A"H7(IS-G.,OseDbVR+Ua]'V)-ruKSZQEjE,N9BoP$13I*bH$"
%_M\`p;mulCXU=)>iGt;j73^9@KkbLu.a$b0_\5=Hf0qgnW!nW;qB#RcC=;]5NQ8"f"ti9W(reEXs&J&-Bg<?5bkin7c&2WGXpgfD
%QI6u+bXha?2^/tJDM,JMa>\ch8t909bSWcdVc9"CU\jW#_Q8oZ0:A=Cdo<#8bt8N^@-!2U/2A_Eaq\],'WGZXfbL:-\_)sk]oj!c
%Q0mk8#:?_NYrj(Z$YLrYbNH`e0Rah1.UV[$A:2]NSmNO%^Ta-YpO%oNBk3,4G]+oHHPa2!GqcpAe[[C-dO_4EdG^sMltnElqBL$i
%f-0n`_4X#\p(@(%O*cB>"n<[\*p`NRmX4dfi.$YZG[^;#Sklmo06Yn-K^gJa549#$h#mXn(-ARCl$.g0%6%+3pp8=ss-UnNEDbs.
%H.87W]<`>=l>b:6(dGt=B)P#VO3Ig1a+Fm4<ArA.,qk>T=Dp;@nC)+/9.)L"<j0gWW5hhTCc^Od#T_$3X?.4$Ian<:I7_F>_YB$2
%FZ@5/$_9u3V"1eYGk/IKVpKeNL]()"KO.G/0nfRUQQ(n'Ze3=eP7N*V'@9QL;:kSLCrgam=U;-COCFEiI#?dN:Lg^qNMgiN[/O0`
%bru9%QbROrq2C@Dk?^3o`pgZJ(QCY^XipJ8K)q^*fQa4)JJpB+VVV%J[j[f%LYm/J5juM/%rUl+@#-b>?96!BMO5G]<CHtoW#Eo)
%_/E3=I1\LO.op.kYmIZbIQ^`N0;D^NWn4<BH\\EH+TZS].W[#)WQm\:V\gPVk)?rl7UA&Q]l6HpF=+a]S.B61al)pGflR3NE?fVi
%L:ho/HML$ZX$n(9IuFP!/\Ec*'\aL!@iPNn8c@UIDfZ%<-We/nFDuW//"qSCYOeQ5??mDg`QR`C8Z=m&eQ7=cb@PpONY):O-H4#'
%S&VHE`aTPU]jC`j527:%R$1V7"O^Q(T"4dEn)X!I,NF"4[ca"C.WJ00NnW+6q2ipK:D"b,:1_X_Wh\u!(+QWHp4B=FMm"$]`YO7?
%>I7+hQUuF9n+D;<G7cQ1WIs&C@Er6[52eqC/b)LZFIXQoR,Mb-3l0.jmIS.64ff%Oq;cMe2YR%]./(Y$hV3^?8KN3Je"AXMmldpt
%ie^7Gd3&&"`Y7S8@?9T9'p9usT*-0L^\Zr&h%+r4in_"-39OlqhU2D/i$iuEgd;g^:M^(^Ae:'R'?e=dfOPWnVk09#$JhW-Is@"A
%YpnJi?[5P-/"h\q:&+,b]qk+d@fb+)2kY%c;'bu:MXPi:3hPUDW^9/pmTYj'@O^Lo66_-['W4e?q)()barD%iBMqShqH\#2QqorZ
%fAlBd_'_l#4=1WbOpH7;%cE[FTJcddGijfh2$aTk!4X"U=T19!Ob#E-S4H(?$<,C4N@P>l;ZAtDQH='5[u(4-$.=E9irA2D&kC?-
%oE$jX/7u5*RB&PlLmp:!*ET?&lM"_"4QoRr.W0rP'arh$DFFRF4@ctZ^H:AWIRgElcqUpU!@LF>#$$2g9)i0SX,Hjg6,nFi#.5*R
%:Rk^"BZ/U@)ON`qM^nWD&k`Rpe\`1.6%a\CDM/Iua;&h-\.L+Pa:WV.G9-^]0flNe!44"R(G1/`q:WH0'4<H+og_/%#ZpWsN*"2(
%<,kef?]j]KPIUMR5,M`Ph(&Y"!\ZF3oTMhao1ReA)QECr\cB>.BU8;qrq:j>hu<Q2s5/>*=9%Yprp;rMg]-cHrqnGL%B@J8/lIa4
%DlJMObC*n@<Tko<@jm(d[0:*G-c+5D1/*fZ1DQe0e<%JA=U(!`Jk_u=QY).lRB<\n[MGe#FI\2onT[/.:W??'9YBTb-!lIqj2d`d
%:^J%%HK(N'EYoQlV.qgjJ$?Y<rt$?H^BC+';firXA`t?7/^\/-/%/2j+jI6#/((!P(Y%#pf\-u;XiR_KMEu`3.Y7R1Va/!goU!GH
%,l16qcRJKNKE$i"+8hGO?Q!.mpfaAQFUqRG#JX:&$!"sK-k*8IY,85@C8)WMZ;mbo=/efo;QWnJj[uLMXCNgF8ue&U,V&<k>@B"'
%\Q5l!/*1f^<%aImj`EL_:6lRTGaU->W8FQ%;QWnM<D)@NWDkE[9'K5Gl<:T!X]3^6eP`eWc(JDF>CeEC='?`S6#),/%ePZeiRUQe
%_(CgXePbTiM1--%2i`AjoZQ0")Z9^YCA>8qgJsBj#-BDu/PP2*U-=Ab:#OShHW^b-mbMcIOKhPL=XK\*jHa?*$mH0"DUF9I&t)F`
%8V0#W"1P3s*)T?i_,,,>57AS<.[m)1L^pCP3mFl8"rBsiT2AVX$uUoQ6E)ef'iD=>r"0%+ktDEr#).jsObTM8":N`[bLdAj6c0q5
%:<-f1/q`F]AT6!c#(<2t$puD*kp2II407QLm_GSs4<YL512&Qm]a4s'5qRU0MtTA;"%lK*m!B2_pDS"3Ja5#Y2'Cak^q0XfF\1is
%5?&$i!W.o^nfJbNcih-LWM51j8\DPK3F9^1kb.f;`Qh8ao2G#R'K\Ouc;1^OG-SqgL`Q2ef_Ht>IYs\g@csZAq'gL<06Z=j@OM.R
%m/.PZ5K1oDZ1Co\r"M6Y(HVp2Z'4r3G(,=>T46u]f_Ht>IYs]hMk-YtfLc&V4$U^0:U0Lim/.PZ5K1qE`D4QBm%f)fSY'BSVqCeo
%G(,=>T42I3@OH"9G1&Uoc;1_:;saDr4$U^0:U.6bfJ1W2cB)\CLZe$u!Gn5B4!'C]1rA._=ibS$NCQ9Qm$&I[hCs8'eK7Nj]_n;j
%T#'M/0!r->jo+Z;m0J.:7/-\6>3J->5!Dp%Sd.Ek,Xq0a+H)e3W'0!#cS+-WKn"^cHLR!qq*4kJ^\`6To<WKOPg)!]jW*%V88Hqp
%<U<h-Tl/<0h8H6^"/S>s<UQ,-K'1p>T0XYc5X4_=]6B]<C,%4,rsD4\ZZYY\(]BV`f#hi5N6n$lktF7O7Z<EAc:B[D7T8@k8`YQ)
%rX7sSW_@oo$A-oBBbO`k:R-)s\cK_S?i+-]P*Qc1(N8*$1f).ThW"'s2t5R@0L>pegh\>047a=S%0Bt5_F6cKra)X.',4HWmRMcR
%'DR\lMXe[r&ZXp4E1-YgiPiigS^FhC.jn$bcj[[X_7gc?ZG1F4\Qfsm9J$U3&:4u3M631\^]'uu(#m0E)_;H<h(QM*$;FFGn/nBW
%SNboCS9E@Q6o.pBlkK3677YnIf1?[W,DEQrME=f0\^#_L2)F$HoKP;Y!)r+,VmGp_#I9%J6n]?dIG%u`pCbV$7-Qq#7'ff%PW"Vs
%BHFa_eA%&iK,XAPCX55IWB>V+diVr0rt2-MFO9LUdp_;3/.6C_P33$-IK&/5=$0QZ/f"=PY]%[hB>:u%jZc:c_uiQ#3q]D"Dt`.i
%@q*PE7-C'FlZZEYqY^rQ+2hndj0;m>3o_)UT:5]4N19t/WdDaPr\,5nArTmP\^9I.+\."j'`pt85=@Sfr/Bqbh.dCYafO9bc(=,A
%ECFrKdKCFZ2U.+r-lu!pQ81DqQ(,WV6i%Zs4JZ][\\M!diE+l_c2T]>H[p+,rh)LQ?((`&69'(d..CIRn*Obb,j;/3%-MS5'P<mj
%-hJnd)`Jk;NQG-\POPGI.8#bIkMnc"^:(]UHjGmI3_>=1oV[lRp\P7EHqC:6bJ4%;J,;J/^L"-pDas[X6C*9i'f9*'B'7-+/b>i=
%cnG42p%X[M-7q5":]&Ktr0WTcUCu$n?DJ$`,iJp%;/.=Ea^[k?hD]K%%ki/2%X,:?r/154oQI_F2sQikWVW1RTKhsia'_11k(V'"
%a0P7PGl1A;iICn!^\BJ^mf3*P^\i<Ue[#j+Qono?*T#]+>E`jBF>NNgOdhGD7I`(l4lN:\hFlYdra0Yq"KuhQQ1t\ZBjNfhcR/7O
%dn;1_(u!U&7dkEdSbJ_:-a9LNfT\/O@L_/`5YrpV#il2<#t$.5Pk6=$W#j@8a]P!UCf9Q:K^8=''b7e=QSN33LYh$<2O=6]lPLM4
%JJ5!a%GY>B23:ZMQjMP]3oS02amVR2kFF([;$na_]G#17`bO3Lc3KjTKdmi\Yn?HVB\`P)UCh_u40jtT_ShkLAa@!f\"bW2MgG86
%"M#D29(LV/-'h:Q&o>FrAf<OZQ^Oma@6sV,3OX0`U'ihEKo*=@&#se@Kd4OiTHhsr/mj:f_&Z0UK&3X`Y"U\$ib&q-X"\L8X%eLZ
%nibgQ1+cO)3la"TABM&k?%oZdSVbcl8gVm!MMJV8?m&0LnSgDY<9deYMMgT@0Qb/Q2:^SrM?("u59-IHcSO8tBCs0H\t"`E1nA'L
%/3[AO0mgngU^Sp&318_uURS\300"=hi<79/R>RIi(B(aDPR4rFW"$aV5oE\CU*V\MVGhKHZKdQp3DMj/qI)-4M'8D&]hNct\1DDI
%o7K=HWO">n[]C39Wmi-1HM01':Z:iBTf/4=99[pFk*cJI!"6r:=P&F)#Yh-hP+f"t"A3Hb,a5*Bb*L7s[9@-,r#]ii5=>:?bG*H'
%Cu%<5.@jG'k!l\k(Pu42.aLQTC+#0:3rYB\-EseS<#nP,PiE`OH5Hlon-IijU]0lf9euC+[,lCSqp=*sZqhBER*c+]ONP(C#>0^%
%j,(>N$SrQpV@p<p23fId\2&=Z6;3g58kh%)as<Y&3#nOpYo2CT9./Op$"Sd[$1lFWHWKD,LSGpjgD/TdNuV_om\O)oR*+WKZSFRT
%.[>25Fp5ph)in^WL177@PL6`a6Bg_>Q-SHJN+A5Hd5"G3;*V5*%-f[GZ9<H?3u3-icU:k/`_OQ1m;k.+8LW<mH2fgPJ=sX8/`\c-
%FVAKCP+?_t0sakn`f&>e.Im`6WLde9fU=>O/UWocWZJp/9k]<kBQ*SAapg%n0mV(K3%#,,G_mjZWS$CD'?,or)[n!oG,ccpI<hX\
%%ZFr$0.$+,IP;<%"c&i$YPt>M#k';-Y+Z'/MP2.J"HfPQ0"Y2D2Qm#oWUoE,p1-r*`$-4]40X:C(U.^"a"UAT_<NY2<qiH1lIH;4
%YQdBC(-sE"L(U8cn4XP'f8<6s.@(5g6S-@s3?#_<Z>pId]VD_U=M=YFFq9+m_J"ga7!GLE_\s<p.:WTgCDGhINW$+7FJ[A;BL=f3
%fS77Tkb`Ki2"W`r8.P/t;e.t3-:p*BO!gQ%$MFa<SlOp4gb:g&$*"W<_0_Q]WY2ebf)9&H1g9gf@'HN7Y1'!P3RGul>frl;jF-e<
%7CGD;)o''Tk>NG,kn8B/g*$8c$ub*7h;KsF:Y-Noeke3beZk/n'-9+MO--,)US1'(fc\unY"MG)1+RG(..Ei'K$&0#k+tXfL`R'r
%mb9V`\Z_S-La]HoNVR*/Lumtm)ANl(TQ6rBP+[M@;G8iS518XHob&(N;):%,1RSYGdFRc"(,='J!gW$]&_iA`EG"W2cGgN?gCkIS
%r!]X-kF'(2W1)_SrT$[)V>fR`s82io^]+*ps4;blQbW?7rqq9Eb<Q$=J,>l;cbHn16)[CE(oH-Tl>^WGar.7UZE`+9\#E,0c9O4r
%(j9=K-j2\^g4(3DrK`D59$e.d[qtBK--'s&JWo([[#?GBHgVUSmD'S94qOGBZQ4oGqZk69)>KTd3Wql_;3"VRY,"+T(t7J2000k6
%mGpsrl2$Q]8?@9!KtictLIJJ)\ADZI(`;ahe=IMr6;m:f9j&7$JqHh$c*?31%R$A+-\LjU2JeBflAhaMA;pr@O<(7Mi[fD4L2=Y"
%>bFG8B\*89#5Jj!5M<>`-oQeKE-J[Jb7jlYROi>_6F1(NT.0A)[LZ*T,1uuHMN1Qe-koF1\q8/N/^&ZIcpoRu;`SlaUu4(2#[CI4
%k]"DgDFh/RMkbsRPb+lOj]#>6S6Y8]Wg:.CXgH#8@<G5eB%G^M(@;PN3$Ke.&`1MP>BU;6VXog193JUKR\K6Laq*hCFGc;gd#[S;
%N;.Tl[1mLU$B-J9%RIM#+Xi0-d`A,j!=e^AMU1%I(oG^F#M4SQ-1.a#EZ2Tn,LengN(iQd'hardKAS"Qm@lF1RDD>2"JZisYUK?c
%-u)UU'U^GS[2HY,"c:RZTdUP)p/&T'bo)IaZ]a??f8enL&lZF$a!H%Q)bgU'R*I(Hh#?qsm!3lN3\L*kC2m'ZKUsl?+`_P,\+ut<
%7pDdNB\(>ujWJ4*9AF2+YJ?Y)J8d55)l>\rCLhu@DShCGA[;5,;)J-jc#?F6SL$9aqP%/o1`IK8#Y[PE,(uX:ZMZGKIE7/?7Dksr
%h;Rgk(^&Gq<KrBArDg.)`3=F\1&b+Hh_TKk%-9t66sj$cn;@+.59VBVo0o2`ER2SPTM"@q-&Otn8-TqkLnofF?o!&$^',R:i`5gD
%0V,030K?T):bM:,$KZ1f0e*r"M1kFA1DW//nbn@s.mLP*5N)ioD#S`]Wk;p.?]E=R"0V2a[;th:-?O3pr:"R2O03mmpY6McisXDP
%F)^<t([=JmiR3Lb(V\7Ks2l/#IH="FIpac,QZr5ia0.kh:U+keEWJt";7;maLN9NdLu'^)9G5'[n,e/t:YDj]Rd-MMJ,@))T+(oR
%)M:haM=W:cM\Oi#h_n83I:9!RpP"5'8A[6:^)#)M^2U^Y#d=;f0@6)@iD'a]bTJ/ON5'%ZNuD:WpI`q>gK-k#'9[I4Y^]%u\GOG.
%/HMXrN<oqYg_[\Q3V5bgOYjH/aqoGR9>eFmZm=T<p:ggGi2kG+@L'"XVABhZ4F@I-8dHe?77:4BY?[s0onbm6R/GWQNbYrso$mF#
%Y;#t27R^B.)OmVi9Ra><K"fe@<,\[7OZLp\$GtZl<d5OYO/Z7Z.Y'gc.S\O(mh$DFE"NAK2sCo2k"P$0n6Fg%La-!qmDPpHoL+6K
%+(&?6XJ!95cg?cD"ff!il2&53id5l9R6l<n5+GhCD/9\CYm5?Kqn>Q'B"E9B3]HNq`IU7?/O(;E5n34(j80TgPFJ&N&#T^;.W>D'
%i-=R=Wg/`[VGK3dTBWHi]6A,sQ)_N?)jX;4QlRO1Wg\,jhWdu2]$N5$C[M"R.:7;-d;/9W@9icKX9eLSn&JZu1UO6&)uIEI&S6-c
%g7`p/Sh%8e_a,M5`Ll1skY8u(.KUhW:Du_1?ldbX.CHX!"goknV!35IW2J2%c0s`k"@GUcFF^9YP>]X4C*V&`kQc1-nR*lS2n1k*
%K*mjO;<&8r@)L>4?^*+7-9&CIksXA0C9((Z`n/fZ.],$C6.NFSG+/?LN@EBR7JbT@Y<*>'<#jNTdoT7p$=b=IDZm!;6?iifG7@@f
%m@c@J;\M=Dk2GR2`8W!B?!gNeBTumAJ^FKfh0g\Kc/D+6*9uM&4Pagre##sf#(4;s.``P/HlW*VK[%)dTK\+/X6003*9o9Ud]D!i
%5#\E3L]'RK($bq@mTuG0Y@"E)<iB6f-"@Fm);2[j[<M@e:]Ut/I/@q<[7'S&J8\5bTUnu(OaP7PC,L*78..]0VVQY+?b]]0rS4o#
%Q7S[m-)kPF25Gj3?jP]>S,QK4q_W*rp#Y;LD$b@/k6(0R:f"%AC(iS6H$=$_oZ$jrim8+6+IknZ7Aq4bW1,oCb\i[l:q;Qg*CIeR
%7,a=Ek%pFeW*oeXZ\-'f9D-#LTH4AbacdaS_BRL5bcVH@p=nWI)pp_4"/aSB&%0(0P,b*;ecBO(a;7VsP2n(<oGF`35GJ?r5#;\u
%W!!M5SG;UJ66_1o\$G+*/RRR+#O0]-J/U419l=khZl0AVouO%`l=3G!+0mqpcX'"^h>J<8<5/^gr(XMs(%6rKI=@-[]V?CKk@O<b
%AiB99fhk7bWY<h)I)j;$L(j11j$>MIEXCUfWIQDVUi5r@Zd(O.3NDsh<DpUTW?2VKAq=O_;^9&,aA^@,I,+"$O_XTMP9N;^'e!!.
%^:Uc&djfLk4hS.Jg8;$q?SgfC?F+nc;cgGt5)\#7UXXGF,[g:%6/D=MULm;Y]^\k9gm8W](qE\"]"RVSOJhZ.PFimn\*oHle^Gjf
%\!8Db82D#@V='MsZIREFl<uLAD"[FaHG4m]<M&K<p6;;C5Ms<nY<QTsQ^^.hl=kfa-efNFVhELP!Zg)[:0>0S"mF/\F(4[HZUpL,
%?><M:YNY#)N?`57FiX.=(Xoj<g'c?2cf6&;Vhpbfp"o]7_%LJ+o\AU?*ar>)J1R6V6i47SM`(o&nl3p=RG#Bb+$]TYHV0A8Hj]6s
%mhb,ia+M^3rOq0dl=i8aHRTkeLqDaqJ_kOJ1nL9O:6mu/Co`N(l4[Nf=JoVr.4e=-o(7)K2Y38NfD/CHnka+-=!"C=;07l!PtTMB
%\Qk"4LX9g<'CiK^m/]&!,lhN'(sF>m7n&Jn`#cLX$m$-1)EUNOr5d0rT4<3Rn_(C"fs':koaa)L1_hsLa;E'kCKS'M_>"Pd,Ef'e
%m%La!(&(`r9ml;Fn,(,e:ue[)CT&2[?;.O1Vu]i)ldCIj<2;@CohROtW3;L`Z)V,kA5qCPmHeX=:k`UA1mOc?3Xj't5FQp3eG;F_
%iJi?h<Lc!P$=I<A8k1J,@[aWRMC_M5=$2m:($1EeBJiTuP)"uB<,>`?63XuqVpYaUh2SmgCT-LHMgK6<TVRr@-)u:&!I@Am*6Ia%
%KjeXRZXFG0rZmYRf!67sUFj(?Wlk*8dp9NB3A(P-,HQN3-FNgu7a4/4F(ESn+3W[!j"<u,0dM-96EW*<$Zu/u%a12/Bl$1+6hDa#
%eC44N1kIb@<URr`q9Bg\=%9B!(">>Qi#a8R\+'WVoM0&$M%Itn(0//]XPm%i^n\Q`!:)T,kj-O&GiA'@MC'tP]qcO)$9qQFR-/0h
%eRqmWF4G-t&j@0H";-PW@a7Rf&07&o3)lXo3-=M>YM]e_bWL#]h^l<o7@V0E0Y)uf-,(Cp9,/\#mK2qR,5)S;m\W-0pYd;Gl)F*H
%gd?J"<80qj@u0dG'DjL0*.#=L2*Y[7\L"$tO7X&pW-AP=-hfq8ildc7p;0F%P*!+"HQ/EW[jIF5V%=FEj+>"D2gV7\1kY-k:M`f=
%qbGZ+H3Wb63n.rb`Yi,e/ef<F\54\<d6J9?O""q^&ZJ)el7*drNRi'Bi/Zg]2k-D@nB@t&8ol\e`to>9fMu^=^?X1LIX8$i\G>bB
%QB=c%o(6qN^2k-*Rf40d(YQ1a*4bS%d@K&<\3D]`$(a*Ko:_Fs;YmdgqINFn03*n%Ibe.MM=eeAA1$=od0^<5SD<GN4$#f:6YU5@
%.^>7YK>=ig"ZIP5A2hKRDIOdnaTP>^,Lb@-;bK!`X=B='RbG+^OId:9@#+Q$d;.S)PPie]p=@#hF_F.;mC=;fJL=lo4U!BMK<$`Q
%o?snB6edSM>f>b<n$eEE:_0u3:fCB('Yk\,2bVu8OCd1F[rV,gU75d33pfTY@5ZK?_\2u-%*M^UYSVVO>Y)=nJBFX9h+t-uQ!Tq:
%;'hJ>Xt)&(&Hk-dja*#8Fdh(U2sceZb\W5aQ!och1-R(5*HV@KD,Ldce1@KhO?#(7QE95ZCX]/OoMe<,KePe@rS"R-2E%*W!qe6.
%k^)[:&:q[mU3NhhZZ9nl<M02kXt%uS/6nZF^t:P=EcbI9p?)Ch?Q[]9'Y[#Iq3DIPX:K#+m^=gt6r032Z^KphFk/-C\pq!G7jTst
%9[,W+m<ro_[hd5"Fotch)YQ9fXaTLM#cUI()s`ra%9S6C?Gr?D>#X.%KAG6CDQ\X8>Ag.uBatD`7pZ!2CjKU2+Vl)u[be#]SjI@c
%)adfg^^od8,&*Up(hOMiLb1>:!#<r+m)SJ%\]gN(VDdG[b]rKY6,ef"mVtoiE^1U$9C[Y0k'S3oI_\t>6]g(F-CW3NFQ?YZPF,)Z
%ga5H+OX%GB2TsaMfqo-X!33W*_KE@D.o6P(cU7H.^qPT1OC-U,)/0I'hFW(@:bE&IYgE%6J]`r./Uc2NmNG[8cdNF!1XjWk7i"u#
%l._.@7&+]eHs'0eMjZ3<5agVI_9&jrQZf5r-*a>8m)((8A@F8Q*.:]N<d%ujPr$D1kqG6*0a0Fp>g[h8UYk6Ki_aZ8(t^li,sd(X
%8,HB[W!na>r9a06=m,;,3;Pt[Q=R_/,on.D/oZKZgl>J(P$Z;24h$`+4l]?Zc*bQg)^gbFh>hF+Mn)J3HojiUDo[^-2pGV@=uAC6
%4eLugCc6dLXV-Y/B8X*oD(uNaA%+W[A^S\S[.60J[Ojpa\o^=[A#*g-UUe"g8P@'oe&oWUk=ts<+Li]-WsF#lX;?]<DJTEcB.nX9
%6-/?B#[DRf42*[)d)OkXBGi)R'!)'V7P":j/ms8MB/LJ:Um6>YEX?i$=jsbkIXVEGe#us)7A%`d?GM8]HrFlR>>;p1X2S.!%*F"s
%I&LA2EfbfHmO_BWp<pO>2_MbMW&Dh%\,_;=a[<8s`eTZa#4sF"b>u"9[Q0`'CaodoV-du^Au1A/p9dGW['M=%[7-DrX!4mt3n/dJ
%UF(;:]uoo!-7a\t[P%(P%?jhP(0N)n`+EqCEEL?2GWB#J2e:VfJi`=SmU[Eg4#+gn=hV>[=bXI:@LXcVCZB<2.P5jC#?`Uh#)-f5
%bMDM!-u`k+.o0JRfABj=(XN=bfM\/J71S\&^)#+Z`YH&C,gOYkRG%S&[2/WVLCPS5;L?9^"taApVGmoDbE"BCQU@O[LiHtbPQ@Om
%=!'5QmPt]1qhVC1H>mO8J`]j?]>)<)="?G#?5#f9flC=t]RUruHg;lK_MmO=\3R_bYr'&JWnDXXZiO+Vbf6n31WA7W(6.KX?dT3X
%'rkHQluoXqmoY^1QmT+@lo6),D$rG92=YC,q8dF&6[JRLD)>PN4P%AHAJF"YX[Du816$q5)256T,HB!\q_o1K[[p^%D/nt#0Wt%;
%@P)&KgGi>s=@3h*,`Q?>L+6@e3!n2GlIds_gGr>'S&n0IiFp>Lk`*YMo$Lc'6>t_dJZqF(AciDZ)-4Td[H)<SqZRs+Z]rfH97E*7
%=IZBoLK5QtR@.)KGfZ1Q>R@iB,J^]=1=,>7H!<OA>g7=+9KX7bg*(;FB.OJTXW.4;[g[%+$L_h[h?sMeiAT(5enJf`$RJb"VO5e[
%/#!\U8hc!H5I@7)f<Q&g@VD:Am\u8-1IXUorkl5+,VsEL]p5?&`fo.j/>t%,2`;&_nO%0E[(N=nKdjDfFr&Ie68eu&EZ++7C9s<$
%SZ+4Q9CKDk#>I8!?fEtHH]qH?!Na`O?PE,)pjaB3C2HnL(<6I=mH)VWl@W<D?.nShX0p/PiMC^g4,8(Eoq_34kOLoWern<kT?E#*
%X='Rb5*sTj93kd`S^0Kd%tRkZ3hLgQ+!Ki*V"<:&np0^W,ATj51P*^'V(OBgc=`cmk96g_X/GRBkONoZAA8l.q<W1ujJD<Fe+l\g
%4XXE*>:uIB)ZX`GM1kg4g;RMKL!Mdjm+]6K,):?l/>lV?PHgtHXq"+'kZ7eN%_R4kBGG#h'aO9>hf\k._b/lt7I-%=$rmY+4=4c+
%`_\RQ;.c.*BGL)N]i&NBRo>Q<Z%qHZ.k["[>kcV'kZSblL)_CIS&C7#2pHA`FP4$8U=5ePaPU3Xm>raHQg2^'8(@ICRAI2=X[]i0
%0rZe9^o(;_RUimmh-6h!:TCp&RrBFh[(?M$9.^#COES*hVqIe;Q)I>3asl`'<IBWo!]IR9"]m<hV+:aV2Gq[mJ6/nkN-/lh#:KC/
%318UmY7<@4FJcRnHf[0>)pX)0:O4n]co'"*b/GB<i3m1_*5l_7D-C9k.)B>o8#6]OWTlf><lgE0(3Sp73*5ohl'[`qYt.XKbM6sO
%M_1R'.gh\UrXD8;WI.t%3HDcD&roT/Fqo:0[u7m`]/3(r[EU.BMS+/*;n/qK6]WB8It=+VS_)>F,*Xc@S(\i;HsAL%:5hKHR4c</
%f1kFF$l5heHL52[UcDs'/;Q-+Q.iVE@^9.6Ae/@6DWHnnj%@R5kZu.S8P@45G>-h6iZ"2!CCOp'&C5FOO]T:VFS;A=bcM8"E0f,%
%F%a2Mn_>&JfNG-_ZXbb,=G!N/.hB*(>+ALaN2'p>+Dr#3<br1%bHsM4]J\^NNYld'Lp6NOgEc-Rb<$)[#.gT;c^*XOXT<%#64g($
%qFo`.l2+/0FcS`89<2K)k%7U09$e*KeNrM+4Z<ej3\AMdS@#Ypp3C=0pQ[XN]c<'2E]n>`+\m>Uq`J--(M&`GVKN*!4O)GUZ9jSC
%e0\mGm$b>DpVsj?,aAKiCJ@c>iP"c[P5SX\C,,1:hMfke73BbGhA]"D>1.bmVmPF1b2+(\.i[-h=aEPLj3jqe>0)%83`E,3"c#Su
%HZ)aDiW5O1&bl*?cJBM$j$$:!+)Y*I%?BPkI'4NNHt;]ZnYgWrF3GB+p>.c?#AH%75`j_'+m6Y!R%d-PN5E]A;eiBa7JbXfk!B6k
%Fip(=i1-4s?kLf*k&4-MP$)(,HZk@CFR:</?$.d`JkBJ.fFdE=3jq2@i*EI$G<U)=ib-GS'pZZc`Qq7JX&Fi6Z)sYD0pu%.k@\n+
%RLuo,St@W9*\g@'IR+b*1Sk@O,c&&Ka^m7!bcEZmVd"4SSr9i=F_'XFUU6:Bo;#br?#neB6H;,CDp_tF,r>-$-8%m8>Ba\NcG!F8
%9AO`&Sn"^aUkGn:RHIFYY?L(FXIbiXNkE,Mak2p#bd/7X2.l!=Y8"QP(TQAQf9,h=o$/D-h6$]WPb,$;M2T_R<#)_L/q@nij^QV1
%Y8S5Z/oT=7A)LO.*D+%X79UAZXqkfF%BaC+/HB`A3/H@1Q"Qd%CU4J1XX!:?KifQO4h%JaO4C/62%DciP,t/KfNNI)>HP+#c0r$[
%Mu-=as#78D:U:I`p:E(.SQ,9f/m;`+r'dq/W$N*#mInD:D;sQ4gs8J0Z$*aFq06[%*">(NQ\n#1XlF_;8<Kh'KhS-\)?Q5_hBHR@
%a"BrLgUOWGT@ke+n(*pQHahQOft0*faZb-V+\A!VLo_sq(0.`5,[%'Zod!\=AM$KZO@ElpdC#]9>@l7I-Ap&KYYO^](hrjBfG9G;
%Yq<':##d;sP*bo1P4FQ@m=utKal,?W#6&@/H2?dY(4JePhMSb>gS?sbp9\4:CJ)a5g^hC)OL6Fsa^Fb1,VNrLFf&b58dS-eVq8N'
%^=(#+f^=2A0B(T[pjLiM9l=!Z<(Qo;0-Mq1G_W51qUM%224Kn\$YA(X$'0*'&++nYMVtns!uVq;OFW<-FO%JK[7Rj"\N7f@O`4Aj
%RkN_`85'#`:O`m[DPc:`GC81-d\N=Nn9WiuHb;lG_Ni;+3-bB/%UQpDm9UTmnECq8Q$neTG(PV-J#,QlF>3\l,?").Bli]M$-ssc
%mQ<t<0s+#tS,0V6l6BoKBm5-Rf&`60Z<o`hA=%K6'![+I:Em8uMN8J'UhAr@mU#8.mX,=VW,NB[$l/)B]%fd@"Lrm;Zd#aq(PPKs
%<(!r55+l*\X?WVeE47p68q:^1*MN51)HVtCfoN-r2lr5A[_H:\*@n(YIBm4Nb$&siR(aYZ>!hmFD'j2&0H@Mqp=lMdmc]B@k%t7=
%a.K0'^j47+\[,":(I;k;FQ;`'kG"J#DguW)KIQOsESDpGW\fR[lf!B>.q@a`G)G`G;f9p*L:UA3_[^C=-5S*tqKupbl)-:\YZRO^
%<RC2'm1@ZVSQt6#7#bgWbh>.go^R5SD49bmr7>o#T%WTbjL./ED_.<HWHSn<<h)ridDQOKSF%*?X6T"3=jOC/*g^Nu3?>KdcpPp#
%Dqke>l)[ugB<8U3]X?(2d<S*m2<.K8:o3lLR\%["1CD`rfOpN#\!54Y5-`GX8g$HHXbhI<Sb'AHcXqaH4u8s&A2`aIm'DS&>]XAH
%>sd3_'Did)h<R]"1X#(T/A.C-@q)'5<o9',g+KYVCn6?_GcWd-cX^9r"O($_qs7@'f9k3'`ba0C.r.cD>A0)#jV.N5Lr<GE2Tr/E
%-MEi6-]`A:nG3dpbh?T`ZWTGr:DlNRpWM$,=j>KafOm*s*cX!"2(&$b<M`hL?;G%&=]V/+`ldk/IB+O9F^gsnUog6@B9q)W'[l=]
%qolABbk/7W'Dp!q;RLPWVSk[)X?N1^?lb)PArA5jgN-YWI:cW1N[F2RM1&uGmBEh#9OaW&Pj5_f7sVFc@\94YBo.tk'Dp"ZqK.X%
%lU^@ul]OcQF-;g&$I)c27T=WdCNaG`*stseoaZmJ2-lLd%^N<'`m\euPo\a9;`Rl@`QsglZ2,nu$EDm[*:?YbGR!Z?mee#><.-a'
%l9!Dpd@oMY5c6Db>n3M&l$YGjrcUg"3M"^$Dj*W2#W0_5@_6OlZ9f@:2E%L+0#29S9dY$6o+f`C9LjDmaV`[+C*IX^31^)Y9(JK5
%E,;p%$g5G-1gU[h+^!jq5F%SQk57I<Bo3[]s",&u^$O^-H?Zjoq0rc4[EK-\>KR8_pu-]D]Kqb1q1$TK95.X%\2TH2s",0UK#GU)
%.P,#]`0B;)k'0R[=5K-G?<]eq></2:fJ:1YUHO1]0rIe`iODj/2[oW,=h2RbOiHMa0TO3I=[[uqOrfBSluNH*Eu1VVfL`UuBU:/B
%!M_Xa8V*&cPK1[DpfU3QnERX-067PY7nnt)lkQupW"l`Hee;ePpEj"5dLa^[6s7&l`*E6H:/["Gb$'sYbDKQI5U*"@.p@$ERapC@
%#Abr\Bl@[K`?pE_GDFf9Z[G(6J0E\APBU>mEh2]OC3+M]Z<$G#$6i!JmCHbC.UcqGc)VEt)s^cW9oVm%'T1YM0k;7#Ct>n;6.lg1
%Z=IFgbutX%]NO.NN]0Q;`CaCnG3i8?pGaF-L6g=DFLBbVO"O8V3jpac'eOgM[kVEH*7eaCNO2ei/=J]@`Ss=l.#dc&2)3BHFAFt9
%QZh4=G4(uFA;YX(hidTY,R\O-o?mEi^I;,p(!cdLkS#]D8,k0)qI;Y^D^c?DnT4`3`0u)GhobmQphU^-XA<2mm=ndOZZ2E#]@=B@
%Y.&>Q5CK_u?RGA$V"Hb/bIc*oV)S%DV3[bjbP%bk>b<\<YrNgDiLG+SpYhKq8X.tP<93-<EYHiS.p>!g=2iX-7B:(uhDst?[p\pC
%+_o'^'L=iED0)\8;*0lCF^m)PoPQA+3#g@oS,'R%,1XBZ)qVW"p=Mc04/UjuO*]\LQ_?K;gP:^ZH'NN5eNp6@.f[>OMs9IMOm8P5
%3o/ssfr&@agA0m>VhL5T#,4a;;OP*<:pXu^oYi]-c;^%">,AJ[?&o00PjWm>H$ZV3ap7dKBdfUj'KfuShV2S</\.pJl.DZ_eo_gA
%B8W$rm8p(<C,Y0eb2$fsWriLng[5SE[9S^.kObnD0MKtCgKd9RkM7W:30uTBR0"'-TaC<[&=D.:QnWcLBgJcX2-^L&:cE\'.>DE(
%B,G3LR4W^ZG''i"5A>0!KIOToZQ#/LG2:Pf)b`/"Ssd(&Z"'2i-d5qmVYPam1ibDno7!Cq&DEoD[&4CKZdg,`Z4K67SUI8+7!q)0
%Z@oeV+18^]:jZe7E^\dB/@<ijWk6t)\`r5]Dj?`WDWJO@L2pXDR<_)]&#eW)g@P=Sm#L&J:f^_Taj$s2+nMF\MRe8i?(:K,NS64,
%%CI7+]sWOYk6%[oQ(q!E&fA$/g@ST9'rEoMT+3?=Sl-bAiAkq\)-T3K_8i1d_$H>KH:'XQ?KT.fL=oZC9l>Ep<:A-QX%[nse0bSu
%8C;]4.dEsC7S2o/JY>Asf&hRlb`X9EI<;@??oM4cHE=40fEH;sgUY(rDP^8gP0KtR<`*'>9A7piB5Rf82/?cd#>.9@)SDO;*^Xb0
%i/6N9;MDq=)7]?AEBF7k'l[lJ.[P]jY0u?R/Ier'dc4"F5ukM3JlK-S%%(>M&G4=(&Dg\'n\WF8@:2!1Z4<4"lY5eX'!8Y,=`iNe
%=bkC^bq[5sC(5.\k+3XY+LH8n)HFt/Fr0`)[_f?sI:4HnX$5@nLY0+B"L"t@RA^kR>_>8C\rKMR+<M1iA$)cF9UEV6[QMK9S5Kt?
%[NK^TO6B^lDp?D(WER;l\bE"96W%OWi_YF+[d<Zrb_E1#d?<q%)f>kt7@$-HEC/E6o.7CK(W)N``rG!q5]kl;\bU=gR'6-MJ$+gg
%-Y[nFX8>"@COOLY:);Qr7&N:tf;B)'o`k:C.8V&NXV_`oXsu0G3mZ)t.g?fi\jh6+GY&^m9@T#rDH5,,If\03V2hJQW5k"D)s^oH
%*)hPr;$?:reE1;]\>Cpq/;7,blWh*270qc_Bo^k7$R'@mqkHDV-7bb4,L%PkcB-#H>qB;E-./jKBZRqk/1&\SHCEt@)Q)\,.>_s6
%&Nsah8\7biFIS>iP+Kjm,e>k=/D&J.V'NXs8$k,*h5)C.bt#-sIW1d>kVaO1j-](BM314:)Dj(MC:giLk)sjN,.=;L;\IDobkng3
%@>1:Q%]ON!=J<e7kcf1M<_*@E"92L%YX6<GkE:<GG?COf:L!j-Kkct>%m6pilaH\!LD;9V.mN[16:9i4O#a;g-=-\@`TrR*<V1%S
%*2d)E`7#4(@;m_:G\DT\iDS'HAd9C2];e$F]36e0i1V17)BO1TYcAL&n8S%;-s$Wp3q$gkQ3.Zb:HOf2.4ZKb\3RdkRaNl`:-5g.
%kX?"EPaZ*2g7dBm=Sfg#H\sNI5V73<Tg_;9GhSj:!6c&\*nkh`j*\S=])rT2'*(2]3W'!h4E#GtTgq,+@^Q:Kh$(^!I,L]_*,4gD
%<_(oHFPrkk1tJ*mq@ok3%Qq+bI&;5D1'\kh-%7:,%8l4hrP1c:CBSNAZ^_LfFIPn.idlk_EhrMFLGG5s%m75&`SaEmp:s%Z>#\_G
%)C)hZ4Rg_'(@@7DWucM!^E0.j5HK%dTtN$*7X)%bi1[_jD@^hmikRqYFWNR6IanN2m6eOC%_[T!%rINXe4UB(VHiV6V]BN[c4pgO
%>a,UIH/PCpBnr9e<]I#(rI-!>6G>lWX/0&l[6/l@+dM-.1?Ci*+85UVdF*mW*nnZ]8k<1^^dJ!i7s'L+ncp4N'>O/WgE&`1P5>qA
%c%1XfH.n,\*nne&%mHe,%0ms./,Yumc7*"1ru]^2$<Nj\VPbH'MmYta4L@2E&8V5&b\"*^&+.7CLpa[G!tXcp4'Vk`]5s\D-p\V!
%*dDA%r90mtQ9Oe7LN$O6n5A+/ZNCa*CU%!$>5Z0'lWSfR]?")oGMqG;&R?^g*\NSTYBZ^@4Rg_sZpPRqeIF]@k+gUDLMEEhdXd07
%6)4m_;CT)U*I)79h.r+\[_s]6BnqWC3jhLOY0HZ^Hf1UrBnp6UX=`tblEiq#rNPjDLJiSfq.YV!J(dL"*h"d:YU^m1fR\hOfEAIf
%Q3.XDUm[iuBQ-9jHf3l2Ra#:H*nodq!i<$\^dIuE?$0E88d?Ekb6l4bWYZKLbc&/D1E0I?M@%aK=Z)WWolcOYkrloISdiHDO8#"0
%&Y=/$dSeU`kOLqAFC%ubJ7b?11f>P!k9n>r=PUopX>meeg;Gr)Hs%#$Qi06e[XV8Pds"lP5IXM+73JY3&\:0h"Q/oOBZC?a,G5"4
%n_oBIHko(r\aN4*J+'ZX]'b'-WG;)^7TDYt=eN.UnO8S?NVcGMIZ]I`c,8!geJu<:;eH43K=X*P1Xu)+s-C6aI_8Oee8.D+^)Y@r
%]?"i>H3iC2WTVRH)>3Q@s$jCLfbsJ*hYX;(PJDkp#h>:rI2_Pt0Z'>$h$Was3\^6)G!Jj5S3a0S5LT!Xc5NUK\&.P(_n0i2BD_[U
%/%mkiD4b1cO*3_$[Pp*"Z.$MNTY#Uhcg70E54:$!]2DP$D]YLg:LEXZ+>>&AY?8ENhPRaV*kHb`2J"8qfJKM)&^r0S\2Jbt;Cen2
%+;:Z5mL?HJ"^`*L(hj+[ff6jir0r#gIgHJ!BdAADCYmZfn345*q?p9)FBkPTDquY<IWdcBDS@AXOA+sR!Tq+sTnE"%,M!$5D'*:Z
%?;T2,<#_HZ8B&mLYYGMR:*\"\L9H0%ih]XtY,"71=,i0l::^2k8E]R>-rN;-R@%peHP?('qbE%p>FP_MAjX9Q\*2X']iXWC0cCtb
%0'kHD!lfPgb+,9TVlL+EIXf\+H#rkBc$Cl5[1UB]ZWijVN1pC$)#akY0-G`?jEJujN?C6[oZdCVK!-?fCGl`TY7^;?1JTF8TiO,*
%=ge/"SY9ML6`N*c2lFXT]=V]4cY"-#WOYu)H(aRmmNA<O^ho>IU^-";nc4TULRYsKlnG;!6b:iq;0m1Nb7@q+?u-@P=T)W/\YfX;
%08EO<!&Oa%4ZeUS+#npael)iSZl*DGVk8&&i0))eg&-g?I6B53Q++"nM!ig1:h1C,eU.[E$Xe-l`%@Hm`,X'*9PN[&0n9hT1)>;O
%_=d5Z!K*F4ZE]Uo0,D6MNJ:h^IhSE.&;98/MRAl[DI+VCYA!Ql&!9JCgY^,eO8LpB9PqN_s&AMW_DUZR(M^!N10l1TgWW39d86ZB
%IGu/r6^8;M`)R#&dMJ<n]iOXof9O7FGTnO#f0(^JnMLu[KX^-P5i_?q#nG[NXrn?[Mi5clkL;oN3K!m'_?d?E&c-ee'</`f:XP`q
%@1[j5UktNZlb"p^bTVVYX2D3jVd>lE(2nrHnbp&;<CX3g7UPUoip0s4Pk=3/Tt(YrPg,`NS?F!7HLTp(gU24onX+Sbq;,.uo/03N
%f"m[#CjM.l$,2ZhP-qXE+MF1D\SDHe5Q[6n8\#Cn]]?Mr@^Gs1%(/`o,(O390,.]i$N]mVUSUaL7Oa4*nKmJZln`Nm:1ABNgC<<=
%;R_dJPM5?EFp:T8G,IJt;+L:UJhW\WA>jg$h^BQ';k"8[>$Oj@B%?59>5o:#I!M&O*9YfBfBDbp]asfQaI`nd-*s]b`5+EH&U&mU
%759<?P\=bS^*jcU^4DKU"GFKK+<_:b?e[Ann/<R_I$XX6Q5C6;,+Q?H@Yq4,'Iri5rdsSVO"0@C@D"Z51*cN(A,Z:-P^'5)iG8d8
%]nfNcO0m[+b0)5Mrq>td2mi)4#(]>P#6'JD)mN/;dDo\>QU)XFhAjR&\^YJkr;'F[kuhY_U(X#,E&nufaqUW:V=,Zrr;.@XE4RRo
%0M#*l$#(Q;8aaDLD4!g+cA9]H:B[OOfGN0&7\iL@*U:cdq+KXV(V;^]2),:L6S3L9;3&>D!3_$dW:6hX4]QJV421["=T?$XMMalE
%FD(/HTY$8_q\XCA5YRDX`W(3O*G=:$bj4*C5*QSTo4U+h($_`?8Vp25GBM8nqoii`>",ANajAiqY"70fQ^Gk;$Mnj&N&G3Wa-UM_
%*Q^+R?K?ogCF>T(lB!MU#"mW;?(tb*2KN]>IpA<U,i-uOFPH$\^iPr*/ou.^\CHMK`<>hqG]0X?m$?UE.*q7uf])=JP<-;D5g2>N
%5l&?+4K1GN_accc_A*XYRO-,abaad[3hE#+#_uXQ%9s,YqJ*SZ$kWe^ngO2d:>pgaM^L/\lKGm+5e?$*0GLgg;bX%X^2HRT)Db"7
%%^qDO&`85_K17_;^J>kmb57oslC\k>Zdi=*#'S/U,_;W3L_s$oR0gL3)l^jRRrjAp;klF\&WtAMDU4Q5kV.r)T5lAQ1"Em6la.M#
%:k`BQij;b.LCuiR`ULAKXBk!fX^WONH<PVX\LV<ml#+!\]OYCC*h&j/I;jQ5<,<g$WBtD^q7t3W,9\uDi0Xu4-An:KeCl'N:7=+D
%4s`-8j`9V/5C0=t;uZ#&T+Sep=**7hlFV&hXE'gq>(,UOHsgB7UdfZ*`6.fK\Z?`61T7$:TE6Z2br.3_fdbl4I0BZge])m,/pnIF
%`QI/D5HRoiF@fI"j-@>hGYLt"C2JWEo,XGXaMLB<M*O8]W]X;Hon0I-FbTd#W5E(_@Z'VF)HtLNj&Z7q6^H@?aK[-/H5a2.F'9%G
%+$PS6[s*EMBTKY0O:F=%AscJS5$SHe*E.eap[;kafeZpd48K$Q_d\GJn)\^tN;8nkD>/Hn3.;?A:ro=$P<EfJrG8^),7u)_QjR`-
%.;E$(Q-RY_ca?@hnQNT^q[?F6+-T2#FC:lJT<C]F8bn@r+?Vf.2soG$fiSn[>8l\m&3ba'7,s9d&1M$hE>Q;qZKopgY#XrB6uE:S
%6G8_srfkeY_8m=Wr?>i9'l6Yr[Yf=p%98g;+*X*M(>c2AHWB%8F-[Yb?FJ45o<UbWQu/*p:RS7eAi#RMA[X4<jl`D``npVV(G8/:
%_C`&fG3c0DZ*d>R*T84so!DbTj(rQU55Y;CA]p?^n[eYhU`0FjEG_R9CcAa34pPQA-'qnkn1[-ip0$3[nE5cTBk/*!O",aCcX+-F
%2=X&;2U[Dd9t'EOg_,j[%*.nr/bE*(nh.kl"/VDYG5%XUl%6_K&66_JXKA/<39(poH(=cuU;LU(Admj*cU_9c02-(jMQK?^p0&GL
%2N+dV0[Ep;_qN%i'!>Ip^.?Itl3f`X$GOk0%L8g,_X61lh!p"]rY[Va6j52$p3`!EjNQeZghcf'hifkKSJ$?[C0/,?Oj1_=k6mp;
%2gdnW#lDKQ=$Lr@DtP_#rqmml[EaEU2OXHmVqSWH']3Elf<[fS?eZ/"\,Q9n_RLbrC@,tMZZu2XhaFu2DcPXHVO)NVB'Oa:=%#5r
%n?@al#.>rT.YaT['m+fL<UR9k<>^/)?4m+YQ4*ACXEZ!/Z&e9l=Gq(+:bO;:4-NCsmMuGFgKm.O5u:('<jPn"W<0?5W(OURCa6W5
%--ttCWfl6\iLXCW_R\E-s%ikkiH#X.X[ASc_)fZ,[3ud`&fmdG)kh-Vg-)cJfjJH)4)3db0>n`*^R,nHQp/!SeY/ZC5=EX2%<gXs
%b?uO?\:=VMGhnS\NnLQ$cB>p"ksGY#$/WG,"B+7oJ&T+kDsi6GBn@mNJlk$fB2K4)=7EW[$gsX!IGrosl3GG#AQaT&HUWQfS$&tZ
%S(:d"W1bjJqN`ei*ZlArH$J_W^*_/i'N'blJZZ<Xqj'1ALcQXZk<A2m%*[j]+ib$-CMOc$`8Y^E.[L'djX?,Q[W`++:ESsro^Z!1
%^E&7op6l_&.C;pSeu7U?9A9>,>E\,V2/6R/g#A[H_M\59[cA\I%JFp"(:-T@/5KJhOo\?_fKm)nYJG(ba?3[IP%!h;!qXW^P/6,h
%;nE"U3tW0lK4+13Q$kh\aV5]9A-$!09;U7hbu=Nt;bbT+H=BWV<UWO]bsH645;"i,2poc8mIgm8V/"\SE@"iBlm4):B-@>Oo,%B;
%(Cgb`?E9jX9[W`a?6`QqE<]2>B9)jV/8:l6Xc;ZE&aN?IaH9r^f4O*2)d*HjP4$L>4L`KdQl'u5V>P%#\FRj00Bu>;E:bG4K6V:i
%pO58s>=T?&oV[+KG*hm"q#rb#jdqhjaEU9.C!2l<G;9+%chLtOrAE60'aNNlMoguDTo)/o@K+tSM(q/V6)PrOfpQ;*j8=IKhtIt0
%bNHr#_l$%%-tdOU%nTjdc'K!U[%EtU5>oh?HSaq+<s5.MT@7s@9-V_R8GL%YQbV=(.UM"[^=YMGPf\YEOndpPNHeE1<D^oR>!Tt0
%H1PN9?Zl@mNuWR1oZLs>Mi9k!,d"<N\C%cm-<f0fj.XNmZl_@*%P*8!)LXa?*r1&\+#Wm<-!fJ"NkV?1CHMBei]l.%,f)a"1q`B(
%og)5I]:(\=hb%Vb*Wj5#%8oTGZ3Q6q#0X]^l:XHERO,GI3jU'*P-$h%oW`.Gj*SLC?n,5sY#M&\g27p8As/iEf(9!45l6ZW7<`5C
%R22jqT-U4KQaUEtX1P.ugu:@e0i]69mCl=GJYutuoKb!XkpG!-h,Hb'@f[1-3D9k0^"[Ji?;$+IcUK($COc@!:X@tZ0okPLbV#'G
%ntaDmg#!`T9!f2CLBj;H-Hs`6RPWq'E9Iou),+!7n``r`KtCVcRb]q'pjA#B"9\J?JVlATW8_f);eKIsa^!&[<i0MCYBtEo.5)WP
%-^73cY@+0^qo5lj8IH/'X[eekIKV]9QVTHI&[.D\W(E)Ba@LPQ,Ct-T;!$R;+4PO#/Q1U0+*Kp=:gcZ]&R2m%qn?,<$1XC7"DH)I
%-JFL@LYCc3TD]["GhCj'Sk9f]OWZtj%W%>kJABgr!H0$:B>NB$i5$5%545p(L4&]BVQ<@UK#]Vf)UHfjcPm0$d>0)'Lmtmd6tU-J
%,1Y0g<Zk8.ToMo4i3j-e$Dq/rV#l]uXP3f!]_T<dFYgpa=s,MR3p;RM8f`3##/[qY9W+e**T^sFToS%<Zj-D31EKi(,<1l#ZVCs8
%+Y^&jlg:N6RFU8j!m1/3_u>_4.e=X3S:d+BGjp/?c?3Z0].5WU3aCMORF^>;7-JSG'Xk1F\:D".L,s59Lsq0!qkm$im,NUkX"/Ed
%7HHCYj[b:>^E:C!<'X!iWfBZ=El=iG%#f!CdLtl9DU]UOWK-'%m\@RHX,>J$hh6U&fqWSumJ(DW<F)c<@8/$t9!cE0r?e`]!s11L
%Q`)p<\=GDJpUC<j&5':ra<\A1"/6`=Kp[bGQKh!c;KKa+CalKKCso@A,(I]o$Y^b#UZFNTnQGKr?WBVZA_T'EP2qV:*M)q$a8m.g
%NL8'B]$^q"\&dcNV'6;0Ki(Cih8hm(,pq2;QLt[-XcUOl=b7,kh,1Wl5W[oj`[gj]qn=iKlHSnk;.```YnI;(W=/$`a*2`'bk&2#
%'o`W5[ff\RGfmL>m!HASYjZ58qUVnKe9fAdW!lM/S/fL+!hKUn^=9sIYaA@ENEuI=*)'W[YZofOZ("-TQ$nG4f__k67nbPe3=b9"
%=3?R;/9).HlK\]#SgF@<:_plp\;mR@q:OhO5BO4ZaQ^ZRU'^]E2`oZgqXJh?2W[Wq,Z1HZYF&u3]i!l0c[0"s<rH<+oq9_m!3pP\
%`GQ$[no.-`DH=>]%*mp5V8kk87@1<59on_$'fA;o`$VucXK[Ps=<_jHfYkL!(Ra#.@ajq,MIagM+;2dC<:1*2UE7u4+)A?POV1@R
%[ppj1j(Kk&S4W$*k:JgBE;m?E&pCd9WSd4*fBq!NcP^7a2#$6Ri,E%@B81ZW8e5`*MB*tC-Deo?;_=@E$m3^cW:g6G]*@*s?ourc
%SJA*`^igQ2%P$$?2s]NTc41XHMdn,9h^fFgN0L+Y$t97K;90i:]C9n!GNsnKrZ!$@P7\+c5+7?h`qNg[)*Z/PW-So+1jp7p<rd$/
%c8)Yc0qA^6>'D-u-sVjE<kPAi&6),FfD.B9LM"QZSc71]FhHm5e)BZj@49`qV\oG"MZU!oEcFMa=Y!G\WRHDo7^8#`m60.,5#M.$
%EjOOp*eJghTfVHYjHrR=ZP(D:6-*K443_(LM;3:nE[;[0I_AdFE[BHra=VgJg(0feFI<j$,tP#MXADFMLJd]`IN?,l;B]2<r7;CX
%r,B+lDQf7[qDB_:KFZ'M"6c.r".LtKLu"2\+/fk;lgG:qbn(I2L^OWf]f4q:"ojaP"6&u&,S'a#/#oUD^XnM0r%^I?=9CY^bR<?a
%cIKqb>k)f_<:askM]684Ss[3ocJ^-rjl^4!"[u+@1H6jQVF[\c17PWaK;&dm)]C.%W//`1ZB#>42heTk,@h>#>iKHIL@YPE>rL!&
%.\H1S6+1%2g"@;Zp8H^t4AiBQ:CK:tS]X=e+eW_+aM]aNb/IZHe6<hs;eBJmRCe<J(/rPm!:c0V+0L">[MP"ID@NdcrcV2&[_6@/
%<Vp3d[Wa@!*cWP8QsrAPM;'ur6gn/(jVM)<2G6Y`MbO`8ZIKY_KS%g-9b5njdM/Bj`$P[uJP_]c$u/\>Ojm3tnK;qXR.R=82H+n[
%<CtPN@])V;G0mfuoBPq,QD-/`+q2RH-;8Xjp<)V0&0*kW#(O0:Vo:#kMhql!lp,<cWT:TDK"4SXr.so/(#WG-:_U,XN?A4Lq;<\G
%F.nE&hqJ@SGN*t*#JZVED*#&0!bA/p1_?2L4DZ)gg,IH:3\d?oaSW,rCJ1*T;kO%Yc4k"W\.]#nA42`Y&#;.GO^<NR0id@!ad-E-
%!]#d_87o9dP'E%'&5?l?[O`Yn^=#qWXJt7o*N&99cm[]dOBfl(d88Z^R.d;YLrLs8@G6^e.WmS[N3GCXjC,-^3%0AKj]N?o\e0rI
%O\A-p2&bPm0"]"BT;!*T$LH'[q`a9oQUcedZmorA+NZ!Di=n$\:/X%^3T/Ll4tS4RUj:ui4s`)t\W_$Ee6-$/.4ZGtU+*13kKCpm
%_n)bRBNdhW8R0&bBNg+RMC,JFdH$ISm[D6D-3%S&617,miOI/J"hb:[MU;qb$$mE?oVg)tZklG3Ef"QZ/`dTL@kX9Yd7LZMb6-2l
%:Rc/LZVq"H<^Su!O=#o\g-RHeX,g@u+GOuMbj2d!LuEetGd)O"KI*4_>2CMC@?nJ;R2=^#>_%g%ie2I*b7SRE+AMm?_GgkH@XOP4
%87%J5e/\$mLc9.6/`(j6A^S.[N`>c2rR98H0iY`2\Q`UuK-mXT-<VtWdbT]!'I$['8(YpCW1rm=Ye7qlbM^UD[J`K)*(H`(`:l'-
%DbaiUi=HZZ/=r`Y@::ZWhD>UJ$m?9Cn<.F.?8%c,p,9Ud16RC0L:#PD?M2lfJtj)n_)U(A-$DfBmMU_HMCca/_fga.!D].fWb%pi
%;bikQYa(o*=/dZ0[pJ^Fd/eNNYFr^pp4#RI9,cBQJm-(0_+#%Z(q0SK*YiRP5;O[h>BX'bE'?'Z*`:Ii`.as:%i#C->e'?($i+\1
%:Dnu*Td?ju2b\kKoZ2c$N<%A<K)*9T9[KWSm!O^]@-Z&KSPO55]DJd+#km1!3qCu@jq:Pa[W\$>bM1b82m[;U:aXE^[JZ.J#$mmH
%>o_Z45?6rfpP!Fe([U#Q-(!)'>jZRSVn0/e.O+_[0$6F_G;6(dG80mqZ(m,$M*iM*GT`rop/Ejq*7]#T)IWOrqp#g$it.C\oL@"2
%+Ijg)_/JF+ZZPKu.@37a?j^tGo8*riHNi]:Z?8pNm!<H]jQQ$l`IXjX0?+L5dH\tVqI.+8;X$7r01@m%8>TPnQlVKmb?B=]3pP48
%Am2lSV'hC4mSnLnC)^mh=G5DaTrI'Ej:_!S%16:,(O,5#8DDqqEssM,TmaBE0hF-c7mB^lUXU_4aAS9@i"Kq%RV/Yt?'8I<m)58`
%jKlk=T"Z6g0\)@hJ+K<;'-MuGlN(I7QW/t2!0%iH""<Of;VL$OW4dW;F'DZ&3-Ek30h7#6[u-!pgltWj^Z'>pDual99X*G"gOtu1
%c4]i-k"PXEPRB)(eklhd$dH5HRccp/6CWVR,;'U?9@VPT[W]h_(Ma.OTQ1)kYV;@ErZ279oUq6i9$ijNJhf`j8YLNpMcR6<^D&[g
%/#5PpgYU5'=9`04XP#@/nnJsob)_hJ6f/UsOb8B2j:459I-Bk,;JnT[CH+/-'8.s^<El*=C(h8nBHHA>,3"CBpYs_NX'^;=SQ!=l
%B[L1HF?F)c]bD1T_c$B$!qdouqpHVrk@XOO5pWH-!bM^\LJ?Eree+CU7UUqs2.BMVVjS`NNS)0WE3,lU-\t`^\1#BYba@6=5<aT+
%H;I#9d3q,ER4UZPWt1BJc?''g4S(1L44LGskS>4-f"(L^#Mm6!l-9(V*cqc#q@sO1[0Q!aAlqI]2+Sl.&5>I;6kjfFgnhUd(/:%i
%CD=8^D<BUC.(dDN\FtFir(B?HmA()*nWZIg[4o>r0p+oiE35'q[%G?I!kVFPF9+`F[:tpfP.-(fJj_VphJT;cAF+H%GRn,X4cC@Q
%@d9d4inD\[6cN`?b78-%*KR^7_KqLgNfo1.6Sjd`IX-'m`J.Y7*Z^e-j[]+h5e11D@Y;?)!l1mKZ,,9%+h@!!87':@_*$&L8)djT
%V-ZUN+O9[%nh#,@1^rEk^BY0/VT'V4Bm#bW=DaUEb!\Bj^?6#2^r6roX+SSIi9"5%O]s/i6`j%mGDCka%%+OHm_G5'77(Y0MT_Kq
%5RS!I#4\9k&`N45#2:W:i*G\p_>C5Wp:#hPmE5NR#uGPkg-/uWraRgX;\)?\/S0OsW7R.=n@:OFMd/S#R:&2`Mm%n]VK0bTYf0E2
%!gbJfnfE2TI]^(l=6&[.%VU'UG/]kk42@f(Dp5k#]`rJ2F]E[rT:9!ZMjsL1kQ__qZ<Y2*Q&/;r9B7B]FhgcLHPLt^9YL&qZFt.(
%fhB*NaG2`+XtSfK3K<m@RBip>MHH(VCkb[2U"?A!Rpf5]g)@((,;p#&Ah!$j9De+]$!^kHnm!0(#gD;h\MuK=JH(5^\H$L;1m50'
%J4DdRi^X/9?sQ0l2a8k_6(4Cj$VZ+O!["60DglZ`"3.3.3i_b+"[6=1Ji`[:"!@.f<MOR^8NFJ)kH*?*Fda=o6Gb2TZDG]g8R6bA
%_29rXMK]d3Cjo@-KAmo:$kI/QXVCAgCCMI]0Y2U_jS^L(<\!RQDD@O(grHcD$?8%pkQ'jNbbh?$ag47L<rrkDN%0smEfM&#a@Fc(
%YdO077+C>J]-qEqk1Y2.?BeG/U0$cYf^8+&"T9h6F@&#n4tA>;rTb+1Sa]5CEZD()V$QK4o6Y]ULcRRMLQTHqQ=Kk]\]h^X9QK?'
%+[ajGHr]]e?$B]hU(bsn@R!LgMo^LS$E+6a][gN2-3h)pE/2ar`KrI%>UU*A7?)BG2GZKIFVWr<#g$<;i%!=Sh%k#GbPnjjX/plD
%p*6)s3o'kuc&Zg]l7hQJ-Xn^pglsS<XdkkAc_e2j,t1m&B!4BVJDG'ML(00JL3Pb=7-WiLr=B*>$lhXCqMCUr1t--_iSa68:g&*7
%UONhU(ApVpKR'uZIZN^:@jrope+$HCf-VXh1m7FPY9r8M6,:(j[7%q?.S[R.JUM^>_Bk2]3LkQ$?H5t&:hPq9VWb(RGC.BilCl3=
%="iXX`r_fB&CR/2f]#(p"b)q1=Lt]_op\_]Q1H4q)EoQ8qWCKW0+gj!qZPYFpb`m`m:$J+5nbO,iW2Yo31)e>ggVARl'K[aW-3Bg
%iZ\fb]*Rd?o%3"JKZ2q.X6!qs,_0%(>&L3+HIN0\XX?f!S2d4m+sj^hZQ^8F\-QqHfD8"+irSOQ4icTPTu5R\)Hg\(.[!>;N+O!s
%i(fFA]K[15]S#u1[Ru"9a"-03hEgfoke)O!]-CQ&de30@m>pBM9NJ.!pV!VBm5i(%k'ACl80GWC@NJcf1&(dN<CPtG$L<>cb;49c
%MEt7O@='9^6rL$5E>tF[!-Qe+iq48>/@<[Wf,@qJ,)9M%P.FC[,5F/JkXg#+3(G'LS^rX]n^leY!)*/YKVdt$4UFb`Ior_2fb4O(
%.=NpgUu]C.i0!_gQM>mLK\ouTa69b1DAm9OK&>HbeGMLmg)"r9d'6jh!$j:G#QV`%/f`VV^TJWV#`Gme.o;(tlT5ERh?>Vb't"Yu
%-gqf#'9_Jk9U3<GV`U)N%ESU$7G,A7;TEm8J`nH7`fmXK_QLRo\G9749Ud`uoF4IA$(cKj9Y1=4:Z(`aYYUuJCu$oj#B_+Cp?O1p
%.9E=U/Umkd!"%(?;Q1:s*4)JD,gR65+-6bRR5VleP[T01^+(-5g_?FP"2l'TH`2rG73mc5<$??s0]J>tIq79sc%"E&a(C:3m?f?I
%-"o\?;OX)22O]\(7:ULLYe*`#dl[.Wk3HTAIjj\+Sj)_1SKFXpa8S8FBZn>NJ)WM2A7aB$7>Bm7?/,B-1*fr,8E<lq.=HVafClA(
%KW61%ohpO^E@Ji8:9-?\+?q=7KW^%,,7?M%LqA!Os+mFk"?&]4S0Q0S`.IuN"PmcMF/[Jf@=q"s)Q-uE=n))rYa>K;,>+sgKp:?\
%1k^N\F>peMgA/DQIdp6%dH>?b-A<!.`^9p\RVK4tWb&WGF*EEGV+rh_`h\WrTZ[r[@?mdp``+SD,kbW8ShXNc\LbqG'M0R:$<?B$
%49Q.RAE!,KXP\<)/X0$S0.eHNOsq<,>Fpql1AMUl,u]%^N^a6('o57".VJS8j$r_@j(N".9!iNRRe^0TY1o6dq)?R^i]DH;[%2tB
%8]4lcr[;C5Gn;[qfH8(U3tL6N:-3d;ReUoKd_23U?bLo@&'[j8"Ds^.K0-pP`;:W8f#(E4&!WB^b/taeWM&%[oO:;X7LTEVVlE^7
%"&G1AZnqe]_X]m'!gQ4A%&E.Uj7/_8ImPh?@Li,ldu*Q7mN]WXHs_WT>2Z1u$tP9M&V'Y9C>D,n%/6s+aL#E;a^SRhnlS3Ss"ja;
%r)N)nHr.ajD;OT3j?5K<Tj>R(BrG#*'U:/t@?\>,/FXgsfV=nN-IYL8k0*,:IeDJb7KnVb=?<FuIU0%"bs\FAOo61<Ie"_lajB2p
%HfQI*<OU"ogYTDH+VPTh28t>RH@@uV4muI5&$tp+i'f:8cC^B=s7&i"$S@O@=3+ccXKlKdA@OuBDsjiioT%t/'P+I\,uDpi4F#c"
%eJOU,>K+A%\<Z=4RPi!Wg$S3hn-F_VR<,E0+";Ltkm.DS`'d80/88uo$>U>i%*`C@WU=(tK%@mrQ,p=(+qf(!a#1<X^HNp'(s0%E
%@^g]H'9UW.B8UM&Ge7RZB*$)5U:XW7M(S-SNfhnZc8'tF@7+oYnQ+s\eRE9_kc,C3l>0bV[XJ6'&Q*"!rfDG7r+IM)RhnN9e(iOD
%M<%h9%pB:;(oWf]2OJa.:B@bd2<rerfGgLK2gPRl>p(L6Ik=01Q>'<I%?HM8)Gs^_\TgAWl8-:^+=fUrmOAb2l:Z;-H;IH)_.P'Q
%#!Kb7YH"1n3(^8E.1aqtlWJ$d#1]C4KogmM2<]?\ZQ\7b3'HTP(fldGV_\[-(*Sg`eo)D(HrnS(&EANi''hSCN(?'Z^+5(oo4A[Q
%n_bGc!Q+XY8EC>@G9B:\mn(3K]8R#"B7a@8TZ@+;LLJ'POfc2BEDj3L^W4(lho[%_g)83,'br.gUgCQEP'SckQ5/*)iq^Q9G-H%&
%0WPJ<A]*GDM$QBa^=jm*J9BicHpg!lL\R&mOIc+KSfjcjj6Hmt%5_?/%92&BT:sDc!V2*%.NaHuqVi3u7L)5ha\*0$j-#`-OH=h<
%@IlFcL;Y;Y5dRH.\G[H$K)!j?Gf`njmRS/-dBKgO^=d!))_J#A`Ei$@'IQ`oLoOZCHY;k3aW;(!KU\0Q(cDS`\*`F&@6]5`QZUYg
%#]mZb&4L*,^V(j><L9qU+ZWIh_hp.'US0YmcnOK=&RLOf.#"H@8;fe!IMCF55fK=*L*Gp)8?'EH6P&#\lsPEnXr%q!']QWCn>^t2
%MI[l^O3<'%[i[rIn?!g1CMKJTSSpI?8$NZsKfjT/4=P9@nceoGOMM>@qJf?NH,H$ffJ:Jj\^Aa%9o#[(\MC&"!6jo8dU6QaKADB/
%M:.GVL1KSX;1AHnp2mB/FL!^I'So%aZGG6^Rd:V0AgNE+k.h;u9'eXP9lK-,InX::Kc)#c2d:Xt7B(<qFhNN!KU0XX$lM@1F=,s@
%-Y^R>]:9CViCrIMpIAOHmIiZW`/9=,I5C/JCBDgho=rO"j6h<9O(R7M2cdR@+!.9m'tuctn_PsnL"DQ(@t)936ls3K7A1;fZLX<\
%Il0,;&%Kb$e]R,dg&.'"Dm6I^#_c2lA(]T1L#uMV:2r>dD=_ia:3NZ7_SO)(3VYqb]K)@XCgEC#4dqQmAEX"3T.KY+:6>l?VIB8R
%,0'oGZ/E'<27d,^Q&mHV6TWJYOG%Ge,P<T'Nu5MDUWG=C&UNMG/1tq4:X>f.NQ_8m-\"%5PQ7@Vc@\DeJ>IE>Kjftp![[pUKjftp
%JlX>I.L^+B(*o`l9OVni(2!SRHXF(L][AAi5AU'8^]mI_Wmlr5+<"a+)WM<[l!#+UqYp6(_lQP<E\km2ncY@lQ:^X*s35>T8tng`
%Y_C=^fDa@LB<+Y:C,`P#Wnk5Tl;ZW03,`na])L/:`S709LY./<m8sd&0dt.2ctt(%0@#]=9+RhL@PY%)P4G4Y\CK@JSF-t5f]Do4
%-`,,B-cnVU=)IY[-'g^mak%JAfIg9tVq-Fp$(\W=C'e!?Q#d=k;[qU*4B']V5jiGu^qh(,Ad2N/A[8rC9Wm-lMND._ak:90H@L6A
%SAE+/EcLXhfu2V=?9+Xs+"J1=NfZIgYrrjNJ;Wf`$1O,>Tf&B9DXe:AjK<W9U.sA*Krr64S'nu61f&')HmP4^0i`'9jA5W+cZ^?i
%1AcGXbq@.or/usFAUM7[]p&jrhEK(MhU7US^&*YSr$I\AgU%#>l$(_o=/V5jAIB+7osBV.9dZ>o%p'_OH.1rm#>il,1@DKl#+Edo
%Q?J2b<GG!\(W@q:p[tk70jQ@J)i`ITD'A1_@c'4J?Du=)Sn4pn;SC3=*aWI@[c`d#a<DQ2:/`KNj+tDr8(5]eEA!k`+e$kCq%-3U
%X2o2-EX2_m.<g0^=4Bq<TdT8YU)=Q0!XS"?OS=%CQTL=.FQG>U?nk%[2#nBBAgUlUA)@8.nWd_`$q32:Jf"C-N"smBCeg49-JsLj
%0U59^4I="Gm\V'-PO4#V$0N4&OYl1-*q`^7(gbs/VO*s'PcsT=g7`2^B]"O<:Y3nF[\l=bmYPNkJ58l0WIS!RbtS@PC<`/X4e)8D
%Sh*?AWZS=eFO-+;C1+;#(=S2C(<05^"Xf#/E"n%!E@o?X%!t(K!lGd/pqsNlKs@#tl)DuNSQFC20$f4r_:(qcTeJ!qT/+\,(_7-+
%E<`1T?<T:$6\'Haa?_fSG2Q@0Pn+nW/f1HOEcC-)De$m7P^A*]Ocm0Se*e0%e@Rto[+1f!M40ZEU+M(aZ;pHckYgNBPn0F>7/n_O
%RrG,%_M3)*fPPt=Y"@Ts^(m.,`c/,E3%+%b&(&@kD*eJAF>K[ZIZY-/:WXId*gVXj>9Lf3OK-Ai30=SpaMe^fF9puCcVlk9bC0Th
%'Bt.T<E@!=&cA=gDqPd.0@-hd#=84P`OW6s(Dc4/A]tpQE.+jCRDh9GZ>D5q[M=O.#66.+CPZ,p?_)io&LU3t0_S`h(Ak7u:pba&
%N*QdjD+0,F"$jbO%M@l1P>KiT.LbfHd=NkKP]MYo@+[&Gl[8RR?[36Jm+2,D/-F6ag">[2-Lm4#bcP4u]42'_99WJS-F&]0-OV53
%>>u_^2G[_FrQ/Ufqh`nH,a8b&*IMjdf\q!GS1Kp"gU'H:j:hfF2IC!ie*(@VWLqX#mq6m?go3l[8=*SH1oI@HX@UGk]UYu/8<L8b
%C#dto,p/!/JttCc$d+KnfIS=AP-u)0pr^0J,gEm"KD%cfgcgR_Uhs93:?pk2`+\U>aJJqSqA<rR!,5Yd8Uj3dOnKeBJONu$4?b9!
%1B>Aa9DUG[TA4#$,AXOZ96sTpOe5W='8*/20UgaA:M+`oI@57(lZ_I-6hDfW`n9TZW8*>UA:+3JXb-ol;s/p\=$;b,p[NP*.=1Zq
%Gb.s+>C(,"e>m'"foXgo31bMa@gA^LDpU&-E_O\o$O-WZpl81>HH"$(bK<d3:I^j1+$$S#Z$Y=WcG#`KcM2%mG*fYVL4l\?E+X1U
%=DV2(lZXt2;`A=uE1nEn*+05(D-aeuCT]4uG$Wi=gR@d$>jluZ:)GbiPTqP\C_*`#CF%9+iT[KlbIQnC[p!N[Z927sa4kEHPcH;f
%jWU4&Ftd6s@6P3BG;JC',_0`59BIVHR'K/1%nl%4c'TlbUdMas1-]KmS9Vp;CruUN)&"[LI4Uepc^?L`j>9$3>;AEW`gf%Vm:aW>
%U`"6JTm*qUIaX08dqLmI13YH_iW(WJX=T+`C5[g=FPDUhh:0L6Z5<BA;[h6HmC,LZmr_$!W)NZroFG:h5mKtf7ktMLK>DaFQ'4GV
%s7l'_pE0G$5Nnb/QTuK:TG-j][ceE\A#W`S[sN&TiSSc1q;0"hiq>^e\TF$jMWc4mcA^liMPraSZcKT',+`dO#)4cAJ!5AaTDX7N
%ar0FQlg<h=ZI5^R`u$M[3Uc7N&K1s?XN]8sFcO$*<p.\;LZQ!BUGqQ!5)V"6RkEbE_(e!2Tl_RV(&c/$kc/\.Hgbm\&anYCb2]ci
%7JhEsYK'ZihFPPj?F=tDKsKj(C>EQYp8@\pJ87PpnLNhJ-B:-jfSCGY+"HDDW9kI/d0%f:&G\rue]:u6T57qWd;3@BAK.-!X;.Nh
%>W@S@^_$GLT0!^uZ\e/@GE8L5klEPVDN!2$;/^Q9_@:cU=Xn&O(W4eoI4^n7n(^U$91]hfmF26VY$jNO+J18XQ^?oY)!9;nMIj(H
%!!k(CiU_B.iH#[CP-Sp%mO1SkaCjkOmqi)g4`(Bb*FEUjnA8<_>QG<o6bO^VYA-%;3a<^i)=[jQ;LRW(h2RdX.ph,&$20t4($&)G
%4'^gdS>Y0N],Rs$[bT$uXt4/[eLJ&>g<];p]C%Fc!LY^r!,S78K(MF+`8;!7QWT>J#%udC?AASkVU5h$4s5N/*4-;.F8(W","`5r
%]P\+"m%??GgnjrL;rS;e`hCG)4t1A2\(H)gG;"#TDUua"2I&!3=UFQMj_4m$S)gJ8.iS``-kmBM!WH2C[XDHu^?<IN[uL&,KE(#Z
%$RHB@nFX5AqGiLZGK\r$peIsALt*,L"7C94,$i]=rK*Ff7-"e]`>(^h#Rpd[`I>bD7[e.RD<@Z!E0uc\,_tU0=tX&hqpiKt?O]]=
%.>S/,D@MpH<K0sg'u7[r1J#7c!NbpcD\WlR)3QtT3Rhk6:8>gb+W"m?rIdRLRNVB7Wj`RW#ZEFCFg`aJI2M@aZ5KRlB?a`c4=k'1
%%23UcNa;e]\Lo79Z$3BRn1>!$.HrZ*K"'PJT\LR@e1Om=8Jj$WO&L.qH"/?1$>LA?g7nf\aX?Q-?5GHBrXXF)8Zp8IX3^U4-9:#W
%p[,1RlO.n$f`0&JPJ:.pCU<*mC,_)0fN\gL+s;&=hb(8:/hpt5#`,8N2\YS2$f&+hDSMTQ*tMj=_U@X>AZGL^9sbE`#.jNtYX&E;
%fZ9.6+qY[h.]WnLR:k.<"NMei%u'5D\urUkgrCZA_q1R84L#0.;QE#/!X7I/FmA^Z^m\HW:oA&cc"<OCPAa7IbEm>92e/V[<]/C+
%g0q<fV]M01Hr[(n-T2pnWeNQ7,A]QlWCJ38)X,]>_$2NA7d[]cr=KXo7Ah2b#\]u3^B#:T;`BNJp9!WSMnk?6odE3n1S&i*CaM2C
%9a!Z[q0s5tG1W]X0*7d@r;R?@=O=$_,4MGTrrZZ8QVRKf&bt/Es7_GeZ;+[c;Z5V<^Xh'(X&FLG"?ue[s32bWH_bs!D#P>CWp,D_
%Gsij\8Z*Jr@C,:07,S)J,+GAcrtRng`jW;@gPY9^=qLf$STsaD4H5$Qcla4"WAh)KpUir6?7rn/mr:7iF"u.'5)\)pFY'EHcRLh[
%ZoD#__hmjPS!ePg?8Cul8])c](Z,]e-S*MOHhQ<RK*LoIK#aJ4\>]r>Y3QlK4&.&>!s?qr*Un.`4YbE1B]067>6u.9`Xf/VeU.;u
%[c1bXOlH8+)pKs)0`'.%/,3lGR_nl.pH@I)T3j'eYLo=ZnE%f)Yk]bc]9"dNDe,=dBKUL2B?&PSR^Ek@ZYXS\ZaTGm>TjX#V9&-g
%>V3\GdQK321&$=jS`^G-`,<&[^ZuT'"`PRJ2UYKm[+s+H*_Yqsb3+TG?V3;7lS\(5KWTm-f5f"2C=Coe\"U:;>?ckpWOGdC6ouHa
%Q]YnHG+h2qT=,C+gheB9$$0RYkdLAPUO,Mt]JDOBNOd)-E5`*CL7-]1a_k#4/718k$YF[Ff4OW-=lX;)SpkPlTVHYSH2OS#kXD*o
%j?'iu+;<6@S&#]XfH9SY!B[rggNDj90P]M2oqt)!L'DJ2E5e4ac<Vr2a+Lp<"eTt&-/$NJ5a,;kOVMLji4c]M1OZ"@J[h=uTD/t'
%S=[:V,uY87018R$2"HMoJ)"QY(2LjI"NBe-XQ2'GGAt7VPp[3Eg%YO^&FMhHi%Ie*,o8^-E"(iM3q\hb6aUeU@UDPKUh^[CGAL^@
%h-b8[gc9?,pC!I$0sqf9E&>0(RnXgV%H\+?..DOM-qmfb)7bp[qEqn8r3"K+_Vr><$8hd[@3ertGb+-;\8bD?<op"TcJ>Q+/Hi-R
%$TN&i$Dh/@[CEiB6+Dn^=(6CP3RpGH1M_/@)WCkc'%t7,.qL04DZH3fD@,/$T-s2EK_D,b%]`"+`k&*Z'im,M-HBBdc;6m<b4]R!
%,HM*PT@fWGZ-;cq<#uYa-dLsP7Y%g;M5>0O1*rK>GS+gp+^ssO)8idf0LF'A<.X(]6R(0/2=R@W',e=1qs7g;X#E@[ilm+iTbKF5
%TR6Gqr[X"Xl_&TSdm9Y=dQJ=qY',C81Un%q?T\(9eX8##LO4CnM7o^()e9,(@Kf&*+QOZklSsVH"<%8*dPRa#X6ZAT5r+O03-:4V
%8=G4KHD^o2`%nXe'[I@:0*iP\F,lu/g]Vn[?mmi;7Ii"*..p=Wc3/7s<YTZF^L.Eo@K*b9nN['D?iJA9rq/MS^]4!Ls6Y=9lTbC?
%J$nJ[J7-1jLSZGIM\]nh49oTedmbJ$&<.)I+L!u1K+psTp^mie&5>D2L^""?GlSt]"%`PhkCA(O1T(Q#cp6M,W,kcL7mdX>?o`sN
%&0P8_M5I0TcERRl*VEG/";)Fg)"h9UUMJ]F%A!+%2pTpR]j\$L;]P'Z6d;$uQX?r=j'hhW0jL80,[Nloj]]:q2U5e33i-]Ya/:_O
%[9f\9'JBUUiHI*WqeNl)TBiMh+-]3:Q-Z8WI%Il*JdJIldOm'_H/V/rLrE5XNfGA-/!%P'49\hQpUA98qNEM)d3NW>Fp#^H"*@;.
%^':L?_5rau/9gCrDmfF+b<D&ac?V56%KAW(K5TV&`OBj!r7Wcag2G5-6C]>jFL%cf%d:FE"!%U`*Q_1^M("0jrNG4hkp)bd1REN>
%[nY9WE:j^Nc#%M>pg;EcF6M<:[crEA)"GdeS(L1$e`M30=\+J0fqVOGMA:mNB<+4.'JIa.K,rlAF1+?NSol!`AY88>$#@;k[9FCl
%_rjW->qKuTP8`U=9"O4M3tR%i`!'m^hS3YVRPAu5q%=@Or)c2*@aRl9H*3Tl#LfY;#27pJ=!Z;b;h1qR`el!*D&8D0?qP0EdnVWE
%2mNZpDQi==&ld^JoMC@.Lm2SACd'H,7n%I>m\qWJ*jf/cB&"1-ZFJ5J^jF>p,i0^MA(e1DBQCN="C4Oh8S]EkYC0T/:5/JVm:Qn`
%Q7i_)*>nQs'>XNT2C&_jbdX1/Cq0]-Bsq?R+3ds1I47\d*,jC\hFl=HdlA]$(*r'&"F?!qquG,.Paq1hg>9\f8>:N5m2UjoCQe;<
%!j/TYq'n9a9$[/Bbq/;e^A-"%&t?)(*Nb1,6#qELTF[`>5)mg9C?Nr3Rn1h#/"7''kBhH[G1e?*5<uTZDj@`Kjtgc8E(!onS7<+D
%mF7.#f^'eBhb#`-[`[<3o6I`b#bn:hcAr=>k%a'Pf^(4Nha'(E3QIe/[L1@TnRd!eq&uIQ8F:d;Rsii4@>Qn+S0JVZNRWtXfEC/Q
%"fDic"kQns/Fo^JFq^YD"V%e6J!V>3NS^TpW*f^dr0u#L8lnIL=[*O-htJ*J^-o5c^`=jCLUa:Q<DJ5.^,Rd"VC<iWFO0jt!I$j"
%ZV!-VM<NkM4UMUm?(B-geU.`?+pL]oZeaUQd9C#aK.KU>UuVaQQV`V^2hJb?]>HZ1]WBU,Tirfm_d-#?JN^!0q'_UG+FSmFGf:8$
%GN1h4=/h#!`[#ZpN!S/NH&F285JIO68"qm96@/=W_o'X\,=\?Q&2Fd8Y*H)FH@s_[/R#3P.W[uAjU=_?pTuMQ(@TS=XUlX>#310%
%i.%]_P5^>=[/0_h@")hChV3<)PC$t-Fpp+^d-bGNTai"]Wr&t'P<#&rBGcHmUj^T#Z5hjhbS\XOIC22hSo_U.RP21B$'4D4I;do/
%6J9(QHqN"o=^#QC*lPBoeGOE&E&il=c':_KlnG`YCM"P2-^MWKIE_Ndl7V_#ni1D]J9;5X6>C$=kFkM<&ET-IJ;f6J8d;@I[WO*"
%hsDS2=\?\R%]5W*nsgL`;.nB$?+e,%A?*h=5:gNSnaD?..E,`ro28@5J<nE%`56WoQ%<T!0Uau8G])q8jn(lCE)_^[G[-QjMY@0]
%X_0B4h2ZHFGmF?9>RJCRp0!"ae4`X/>/RjqWSS2_"e6LT+u`p(Zc+h(J1QZE`&b8\T_eHD>)`%0Sq?WD]YQV,Q!qZCdJ4KB)TijU
%=daE`cjuI9\T]bYdWKAp*<`uG++r.-2^^J9U0ffnA!a$^fG!T@\ZrZ9(2.'hID[e"],OcniWdb[jY2X5Sh"J5B9Jor:';tDLFc9<
%7]OD'C>L]2nhf5p9/dh8V-:8,@tE&k1Gli\W=X,LU<F,=a>\-.YhQ%kT5]k/eS6Q\hH7]doMG88#jIG'j(%)T@F9jEMdmC?&c@eF
%!sI7:6M@86#SR#$!0X'*lnG+i-.JA3JH,`Z!)EX2nPFCm=9H7jl#lUm]/h,"8BZlDMEioO`+&tF.5Crr!eqt5mO8PiTto#gi]7?:
%m)G^dTu3WCU:^1ITR!,l4`i*<-3TXr(^L7Ql?tLEU>g6i:'<l@(kuZ+MV#f0k_j[*NN:IY\>c=2dIAiI]cE$hT>@dgP9#N_9$i]j
%N%)r6Ii7,fOi*S$#oJB<%X(ViaGqQ[GNLJda'749-'tm&=l7#`SgOZ;Ju3W0f1rc<Nn+RL1VH1jCDSJYZ1gb%qVHf4e9s(:2'Sm8
%4+?uSqo-PQAYfI$oC3PsD&M'GENm1<*h=>QGVeRDl3no6Pt^?]JR3/[8%[YJJ4g&n=.%4gWIrTnJ&s>b';I"E]B32jKo"QBH@XGm
%!nutQTUk3If3-a0j)f/p)Kqu^:U778LZH\*nso22<as2u)>hNk4.2F.N:_+,f.[pR/5JlQdTJIfBFUB+?*h@!D]6%,#)?O5Cjqrb
%:/1tJL=qk%Nkq!m1(Ra6"t'X'SD`*bP5]>B)]ZM>:)dllG+mjuDbN!?(-keL-]d3ooqP1%Mq7FYB0Yn#&">BCc6aP>d5G=:Je@cr
%Nm-NNje<nU%uAIS2339$)H-0^Yh;T1Ip)t5;Y/O/i+pj?<LobTjq3EbYNjUMRpX_AX#b`tB\S:;<Lm<&o;ap[`9(-Dri46c-JGn:
%IT<;3f_haE/[>+OS\M2rLP`HVQs\CC,rWN<;bLqU<TgRNr*c=:)s14EC5L3=lI6H9?e+tQ3e*N1gP5N(SQ]LoX#dZ,k"hg7X"Tp.
%H.3V!;qGO8J(>(JKs(ZM*'15KRYks>=FdaQJ3*b#``M]]=<1fd[XR_br1)cXH#FT_NeR(f9m1IH]pSuA8bt"c=kPJ&eeK,Ub+UTG
%Y\bf54QUG_*X@Z<L1/]K;Xj?RlAF7+E@3ci@1l9l92ijuK,a^.nMXbHg4_eh)<oT,ccR;G!+%k'7RE)ZPe29:AAr)rlGIT*=ZW`*
%"CU;R'6Ra@5sHf=0$*@^!>U!i7@kGQ:Y:tXl:D+uhOM)(E^V'iQb=e;I"l8V$LUOlG1XK2aE$G.)uS6*-?!DBTu"o$RIQf$qTn-'
%oKG1m/@7#'=iZr@D<V9?^V>#)EP@iIkZ"Z!c<$hpY93</NX_>1LZda>nO.s*>M%E#h\u3tF62\hplY_0@4jN-@l_tK29_mP?lq=^
%\]@p#VdV1]+3rTpOI4mWD3D;n11^'(I>h6ZJQ+D/SV9[W&R`W#p[L)/719:H+138TZ7L@gDC(gTqV]@n)?h2DE#;Zh>TlAfn*_Z9
%b-0If*=`;EYa!m2<mD%N=4-dk'$0W8S@Fsro_Xsp"uHZ+S.u,1P[*kBc._`pl*qKI4RYFk*6NlOkN3)_..U]=0ah>K-`*t1:7h>9
%rJM,a$Xs_\;dk:d%@?2^[0Aiuo&RITL?2k/0+jZl1`/$?dq[7&*@B:-n>"*[Kakr8l35A26bCf'WmE:m*c@[fJ*S-Z?]>)=&MhiL
%+CB%XnaaDEP99q4>-qf&ke-7fb\'Y18"8tphNRR*Z6Q?kE2a8t@=(e,#+*FEB9ZLj5>ih(n,_%ZaW$bXpOVFqO(C@[*Y6ZFV&[Z+
%DX(1L`kA\25bN[_ThKbU7TKr[-HBCiDsZk*bsr;#N^"-`;O!]!)9qP26^\/;XM%td^Z?)^r/T/WJDg3VoU[U.'0Nr>NI`,J=dl!3
%`>9WnUp"r5XEWV@JtsiHi><sseATU]Ff<hcYIi"kk;X;n20)%/aZ?s9+NH8`%7uSP7S]%Y)B@[<L?*H<,3:)JZYA?k(llDA3?Xts
%oT.p\P#kZHTQqGPkf,I-@?uUK"c?dk7\(NWYnEMdhYe?6`tJ^L-#RH9#P0<J0RH=2!::t@p)-raDqJt:`aNj@%O*;2`$&8YNlQ\j
%^A/QOaFQ;na.]<qh'4%4$p,^\H0rV%S>@if_18'<epn`nI7Oj^J^rNhXoZu:@3W=K8d@>'hK]j>PLFrEYp:2jr<A^Sj\1!3oNcA2
%:8-b;'YHZ#<>>85S4Mg38XM'F84&>UT4Df!?CH7oI-G?OqZH4rmL':c&oFg&25EEp_62%IQ+pRUY=.G6>fiSJAedXMct4WbSUWm1
%SY>`(k'*ZYZ"Uo=qE9CT;]dCH$_J,41[dLBnnk>a"b.hI):0tqjRjRTp%2V\%g)P[.R2'moYI1ZSG'WZRqhQ3O'YWX*?PBJ+eGYu
%>^pJmEBCs1&65<j6MpiA#)I"i9d"lf:`Z:q;[UGR!NJIcInGIj0gIUPS"H.UHS[o%Lg-a]!TNY`CCmu6V%.M,M,f?R/-coGX&#f^
%r+J*l6W@2mM\&*X%VlX+f%'o@O-da67+J\&LUb6B=FmEb[Up(p=UrUd2ls,1`1<43'#[L[$UM^'=[bc^4gb]<gY,P,Om>dp6/9&[
%2F:YQ%WdH\f9Qh"AKa5;LjFBai3_r/;29S#IIcLq8tQSu^$GVQ"NfnZ:mWB2EgDT;dJ>h&m4;6t`nP[,C3LWb5<_i]eIfIdV!c&\
%_lTB)U1&4*:0lQMi8`>0+BsUpL5Q_^FmIo0$e=k7fTZ>!/-W0aVR(`LEtp+t>6/Nu/5+oBl0*1EZuES$N826j4%l1<?]_A^qWKHp
%aUsZD-O3g<1:>$I6Bj>+mU5?GN$KT+pJ3?d3iL2h-gIbfOma3S16]2olda4d/nLoMZEI7ae%1d3N6QC^YRM>j[ZiP2W_'_W&-u.m
%:sZ-Pj2[?I="e,S5#WrX,Znd7lmejUI*c<3+I@gcWFiS/.C70a)-`#sPh=8FEU:b&J<_=D-)I%p_7hdFmO8aiq2#`XTB/u8]+g(!
%![8Kg`d;MTp2Wfo7aYjN%?rotpsc5i91ck1Tp46Z&=U9MQV&^5D$QgM_8:nR,E)U/Hql"9OT?.qc?UNu$^AHuJDq[_eiP0W3jBqQ
%!6kQX0_k9q;U0ShL0O!9]$$Ue4rgDa)HN%(1lc3o$;r]T6"YFn7^5L3d82qmko`P2,Yl(jZ8;_eG!f^ZJYN3>&HGW9J@n.iM02@X
%+U##SSP0K_>,EE"RSXo(-drF1j#JUFPIHu%NrDTdc+XFYr6LmoEaLmMh.J/0qhAR?o[K5EZH8:k)F>]Pn1Sh1CGA32$[3(jJTGh'
%Z>RBig5>3JR46O`J([ZLD&N+UYcQUVR;Y`$2mc;*jJI:CcC7Nlm\Pk".Z'4:+'4MM)_Ua-a1WkDM)7(PmX==[k/Y1+#>q<Ug3VP$
%$SGl@s-;VN4Nt`rj>jb9:msA'S9:<>@;RW1(_*1@?XA+AS>sZ&ms9Tiom^Lq3#,9dlg`3b_U_Y:)0!8\_/uORVR$ETJ)5IK@oq,/
%n.3f9f(s<2C8pfbkGp,K5<O9oS]mtKZ:X4bft%T>#I^X+k*N3bCu+m903^@uoukon[]0B.AZHa=4kMgMV<kuuUTt:(BI`U*co:@9
%1`GM9A(!G@2=Pci`NVZ(DiIR\-ZT'`Z(kaf"02W$otSnSJVKTiM(]c*U1sM&l5o$E>29:)-\@(u/j4`O+t;AOo[W[$V>W<rAh/:N
%s6?JN^PMJ_HoMR1\ObMV+.[N]:W<1?B=Tf.cVfaI\J$F#7?d-<oVsIt?'T4WIr7rkDVsF^Yj!_t:Gt.Pp1jZ[;^`D74S8S3gFbK9
%VTt13OFIm/dVeF=B*DG`'oPd/53^>658?H`0ntEkh_2\3iD/6Yp%7OV;KHJj%6_\X0H6S%2=qU'7ZgEjiYm-#T.G5%qdD>2Uf8Gi
%i[G?sPm/=5Z<k+#$j.D:^oKf&?A./"d-bs-Pm0IAfI^2HAs9Rra.D:>ejZ2A3)3!E/lf#9+rjo.D"](#L=%MIS]r'jb)hG?LR:"a
%nNKa7XrAh<dN,bu54M[N6MA"m[$r^2V"BnPZ$bc;8m5/2T].DL%39)hlhrrb.DQQY!ru^PTGYc8(nN)t\j=b$U]F-IZX"Kr"A:O9
%G#+Ad-<L$hf))Zs754Y`'/lO>e4Q(Z?"UFL.>4*2QfFV4!Y5Ekjoe.]VoRnL"WTml'Mf#r8FZh:cb:jD5`Xe<O(ppF#Sq%4J:OP"
%N[7ef#!Bqf3X8AW%)W_[A4W:9!B'H\=+TO:"/ns-!TD5m$q%@Q2W!FsiH@?'O?L.TTeYV(\7#"fK?uhm#,.(,?iYHj8K'tDZBmOS
%&El?5AcFetibm2t5',Cc1m.:p@ls0ali>aXOWKY`bLLG7bJ=.0[Y++^GDkk($S.(0?`DM)9,XD-S2P$7kEWLt?>N5IcYGJ$_-A1m
%C[Hiim(pG<V7#,o2rLuT\+A;_G]/J_2f,PN@'AO@&*:"EDEu*I,K)_[Cu!&Y]4shlB:o\cs(O^:$eei\YX@Df?1k,Y-;O"9;o\bh
%BUDRZ3PV)(XqZ6X@5_E8"tJR9#9ROc2BJe=RDS-B*bNlt<2.*:QjoB\Q]Kg2qucJ$JbqYW!XI`aY1S,aqd1W&Y1u5QDcXFKr??2O
%mdG[c(>SpPdIuS6p:O8arqD8"#CE3fR/>XCd>[sp,23%Of9A4`\c46*0Nn08[,oZ+qth#nPMFcI2]m#=cm#]mp4#O7%`&$+Yk\Y#
%2'CU*gclp"emA41/cpgfrbgA9RJU>9g<SJ<$uaY)I,?@S#Nbr?fP&2$:D7S0mVC+;/K=]X&-9`G+5CmMbPf`um1\:,OuFG,Ra'_o
%^.$IL0#Lc:^8HUP*^Y/]FN0[CA=tNQQ\uUj.iD^M([%XAoRIcHpHKc1\-lcS<?7">Ai1/@gndNHLUjJ](+^kJ>Z;\I:?5*$'Ao+3
%h?l=]A4^eg,rZPQq"h^U[Nqu@Zk*\Q4j[4NC[T<\]5rZ2:cYr:cGT,-CfukdP4-4uEaHJNSlKV>Z@3k0mH4\nf[G3;ot=HbH@t`8
%N/dbMEk/K&hgKE;^/Z'fa3V$&W3s@]QesF%?p0^4V7u.?_clm5,+$!_2?J;c,K!*8]R%6ZT(=qq2Be)epq'b2^<C"E/7QNM^GW[>
%="jcq1_s-l,1NsS;n..n)?=lN`N]]u;Zu-<QU"LVbU'$IfB2\D/sni`gQA4q[`G'>fK&&@lL4?:&hW1=2j$p50EM"sbfEVVL;-1"
%:`+U7>b=]F*/R=O[b/TQ$1Z"Z52m[t$P'l[c(eqaV_&mIp0I?f#24iEGBo2N>aHBr51pj^hF:ZMeqEle.@48PTlM)PCOjro&DK/Q
%ig;d6Qfn,JB]4n2-pf"Y)29BV!B3QX_@NJnL\?;rMjQG!AO&Bp#t^,Fokn6MBc>m)6F6?`Gap&.eHj2TM@XOLES"S&A#=qY9N<N?
%LOT?tG69b^6-#Iu$*,$\BCmHHB84`t(2</@'rd;4gkAa[8qWGDID]WL$R_ZC,Xn$#cXt*dW>Mn/gLMSbC:UUQO9NW0_.;IDmrd7$
%A*n*ATNe!5+SJ'nH(MtEHOL>hQ5'Oo'Hho7/&r/U,U!FE!$i7<P%E6,-.Fu\!eD6n!Kn!fd\<iS\(^(hQT=I"Bu7%8YS/F>RsHF.
%,_RF;0g*EL4VJs[E?rR,#1,C:!'ue>Yf.&kWZ4g.q%F_qYS>3`]H!gV"e+@pQ4jh&=U_GO4I$ag<>(F%k)>segPKO@*KSssQWUA$
%7.-[i7IBDu6>G\@Ek$Wt.-D,23/CtO*qCuH+QDEFQU]?O^5d])7W>?M^Ul=S)#MDjih9iWMl%*1:h%$Jf-ZL8bJR4_.;/7EZ/`>q
%_[DJVp^2u(m9B4iIp0.,bBNPATB@O'bmrOdH)@jqV,VJPs7ZIAU6uN^YHM??#JIj6BP-TXIoq#F&t==6ofY]AK^393*&XPD_25V)
%(lsVhT;U9aYut(5a$[3edd'0NW%.\>+IX)<dN4n&0?9\3RV)3?'UoUk'0kdMU*[L[_If.Zf2"D_BML2iYh=<.q?&>bLS<>OYh<r9
%s1M/5#GftLZ2)>Yd.`ppnQGL8l1Gp155Xkp@%pALl_e+<RaLH:6sEiRa$d;<+&3dYRs!h8,Xg,F0Lonp2CSHp-^p?V?Q*C[mH+,<
%7+;(<:`F47ge@V[d4i8RT'tX_*gcbo@%[r^iaH[,qjSd-_1Quga\Fp2Qih\kamNTiInRaJ9Xa34j$qB3C3Nc-J<uO),ZO(TA[oo\
%aU_=V)UmK/Ym:fF/SS(*4_YL"1O=\lKcf2X4nbuSc<NNH-D0"ga6SE#q+;*;%g!>#\kWVc/g&1*`PO&;0;Dt:s5hG.F4$uJ#H"Pd
%-(HnroYOgKe?BG/hpqLUR:2[kChI@c1lT-4V.o"3.j\9#7Dh5$H<Z,P#H'^2#uT=*i"g^Z9TRK.9kHY20k/u7rou-.T(6or+kA6t
%#cWq<S;/S66Bkc<U6d2l7RQi_^7s2\:jog.ggqoP%p**B0mD_>08?4HW'S">M4_mH?O4]ei_gF<bY(*q5ZnGe-Vfu5h>/W(c`Ct?
%am/?*\HeDK$Yc:A6`e4ifYrc7P82=M.NlRR460p@;BRm%cPl;a!B$(i]\7OCIL&gMgJb?U&1p/JaBR47>QIqjNSE#&`aoGc6Q(P9
%kP?mA,$>c5M03Lg+F3CgZ)^.%fJ#u($hSID5?oi&hSlQef<MH'&F:`l$sH-WSCA+-IbBh`f42mY4g?'#G`C8&!ZeL9k>]MT4lFJo
%3KA)M.4W7MWuNL?EW.+`c,>KM3W%6tJrN`\b@KQl1PG9F\0Ssf*0[NfOk(-%JqWlu`V+%l$T!+?kkR]N8AX4[\B!QC2&2>RrCH1i
%EG^ANaMIC$n_(-NFTr1N"N(NIcS?K>lESc+SHOs<IgJ4[8XdW?]N+l'eiTk@[B'n:in!\jS9B&ij7`-eJeUdBL7nUBK2<[]ljQ9K
%MBt2A;[F.,d/nm1n/O*cgh&c*'l`JV@d4*EfM,$i`/_l2lq;`W10)_oFZJhpfN'd]0nm1Aa&3V7F-;<K!"hX3lYtNcZr8)-NWq>D
%_\FU;JH_.1!(8DZKb8ptBEhCl&kIZ_IZA"VIh9d0NlLlr=MXG`+pOrl&Eg-J"=\C)cl@rHKLA`a+\+5BL6Kcp[#W$Q\S*ZinKbaC
%X`^?U!qAk?)2^^9OjcSO9Q]Y\UK:bK\YA=[&u!Iioq"0p'K@pXQ=(Jd^o1^2+b:8,.P;rsic/OFKG.5mE#hhcQf/Pj7<WM6='"lQ
%,p:"KL2'+cE?Q%YkS_YQ,f/IZ,g.n^&(PZ&/Y9,bn23aO$s2ceB4AAcadoh7*.t%*Ba05GH;P`u&25)^J5)Sq)0K5n]'3%TJMf]-
%18*4_Lh2*G'Ye+Br.<Cp,Nh#)#R%g`[As.rij-j@MBUBL%iG*3(rsn_Fe)$t>qNbZP#GA>,^Osf;p(d/*#[qkoe4E12PIkd/PE*)
%;CdIZ<42Z3+B<!fhWL7PJ;"-$@f\sdlp<uo]JKU2W$UM+3uo9p"gf+d>$6_o8\)PS&=2q@G1G$0WaMY)M-N\iqXJM3k7<q!PTpe/
%BHD5VjQ&HAK-Zc[X$hDmr$6XPD8q2Q1e^dLj9Y#@Ee$CLje)jf"@E\t6SoLc5,fV&&TlmM&<o;qS_JCH@l_Rm[#3WXK&"]2a:Cq4
%'Ea!GZUF]+\NeU;qRU+)Q#4V,6J]V^2`6H=#i.B$EN?UWNa'u=emZ)26u-9*c2h1X>1KM2\5/!ji&&$4cVX)Pl*55LJ3u[`RifYj
%EX2u'ENb]hibH3lj,9&&PTcig?CmB6K"7^%]4%nfha5f_fu'S*YDs4haE:m1prBG[pK4giqitKj/J_<a3Ba/p#DQb-9tF,fg%Xed
%fOtppN[DBu)/H\s&suL:&k=bCjMagQTd?T5m/W1$21[%=1Pn'<=pN/NBS^>23l_6)jhQ:!b,$<qdfYJmTTTa&,@T#0>p+^[M2a*W
%f?:)5iRH\I''&S'_#YN`19EQE?Tc'#&h1_V24<%XJj%boK=5m,"nX&=hB?71NGA1-i@^`>VX6*[fUEsV4Lb2A60<O<P[?9qQH19p
%g:#1l+]YFdF<Y[AB_TJA,V&V%CkN=tGs!:T5t6o0"L*Ct&(.gjFr&FHa6"Ta4VA?/'$q^Jg.*oE,XgBNb[Ha7k1HU?kV7t1kEY7T
%A+PBjrAS3WJUef(#\]l!^B5E#TLVDWD3l7Ho]NL,;McG+)r]-6p=rl/rZ!hO:nlZRUFMp,.0?,BU>Luj(10_lJB_*q4XLd9\e=rW
%CkP$rgN,jc4U,`0;kf&cAjJ\CJS88!oOs'S_(Z*jU5-NR76lo4"?rkS^E4ChO.6]8c2EqrnAcgVA&e7/NOWI0!P;fF9-he<TtGW[
%$]^VN&rbRb@RJH&F(o+?V1WDo(d;^r^P_0uP*[1:P.-!nQm,WjY4pRrd8Uq#b5?jZ>qUf?QRrtSB^Eoc:\/We>V7feG's)u'=n$8
%1gE1jH28qe?hR1souB!Pe/i2_OK1=ejJk/o?2?!'AqQ5T:pUlXaZsja'_`kQ(+d*SgF[!BSel!M*="[UEQ"PE8Jo-%^L'aTNGG%K
%G,'\g?@R5h4MJA]O.jC21<$Wsm<C\FGJ?+BYF47,s)hl<5$oTlZ"BoVT&/0qbfV5O7PW-Y<Bns>?hr-QbfrkHdp)M8Gkfc\<3[Tr
%T;\feHBYJ\I9V)B4VJmg*=fXF8fX82O@-0aWFa0TSrFK*;sGih;c+X4')Y?>GT8G\Le@.eA`0g!*24)DXMIPtY4$?a`L`@Q#sD7?
%#,@$6g(ReuA.<PuL4Rk`:od!FTFK0a<G58h\6)^Z\I:SAArfRR,\^[W+j*c!-crTjOG-[Y=!5EWpH4C,_Cb)bY-ls^aD7Jt@P1B@
%4R",&C>\&o_khC+-WVq^+37nM)!B<gXooZ"Nl6mpN+]g:]H03gJ[AT,pkR&u\[jd@H\:-'GmXTWq_iEs!sO5l!2N_WPWebCL&eS#
%Y!K)[8?DMm+Em6`"IA.]I]@/cX`\sGAMuUT?h'FR"O?@hV5^;a*(GH8&8(UQ"eOmZ*XDhLK+q%A4HAGFGns;IJs=Uj8]]9BBiYd9
%-n%AR1aG%;<=\o-9oHoiJ5]%fX\PPn5<2Gq_eXqZnUt7tM:5WTl2L9+V0rHL^qZe_/(GX*CRn"ZT_O3lkf;hZ]+u)H;?R.=0Mo`'
%<V*0/@&u[mNPSHUFMtoHe)1A:^r].]V<5/!9#$oXrJJn`6ta*/6,TJPQmi$E9n)8>m$sW^?'J]'Q/:^7HA*Klo60[pqW&/qWehA`
%>q0/7`UI(`;>tojkeOos``0KOcOS.cfD>!tO63D=:N]t=mB&<"O6_5DUh^J+,GY\4\l#O&2gbip1jd#O$n!8IJ,Fcsl[>i~>
%AI9_PrivateDataEnd
