%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Simplified Chinese
%%Title: RAGA.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: keming yang
%%CreationDate: 8/8/2015
%%BoundingBox: 146 334 483 768
%%HiResBoundingBox: 0 0 594.7500 841.5000
%%CropBox: 0 0 594.7500 841.5000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 92 128 8%%BeginData: 4374 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFD7DFF7DA87DA87DA87D7E7DA87D7E
%7D847DFD4CFF53A87D2728532852272727527EA87E53A8FD4AFFA87EFFA8
%27272852FD042705A8A97D7DFD4BFF7D84AFA827F82727F80527272784A9
%52FD4BFFA852A87E7E5359537D537D5259598453A8FD4BFFA87E7D7E7D84
%7DA87D7E7DA87D7E7D84A9FDABFFA8FFA8FFA85AA8FFA8FFA8FD4FFFA853
%A87D847DA87D7E7D7E7D7E52FD4EFF7DA87DA87D7D7DA984A87E7E847DA8
%FD4DFFA87E27F82727527D2E2727F87D7DAFFD4DFF7D7E7D7D7DA87EA959
%7D537E7E59A8FD4EFF537E7D7E7D7D597E7D7E597E52FD50FFA8FFA8FFA8
%A9A8FFA8FFA8FD56FFA9FD54FFFD06A87E5AFD07A8FD4DFF7D7DA87EA87D
%A87D7E7D847E7E537DFD4DFF7D52F8525252272727525252287D59FD4CFF
%A87E5952287D27522E7D2E522728597EFD4CFFCF52A984A87EA87EA87E84
%7E847D7E52FD4DFFA87D7D7D7E7D7D597E7D7D7D7E7D84FDB0FFA9FD52FF
%A8FFA8CAA8FFA8FFA85AA8FFA8FFA8CFA8FFA8FD48FFA87D7D847DA87D84
%7D847D7E7D7E7D7E7D7E7D59CFFD47FFCF7DAF7EFD047DA87EA97D7D7D84
%7D7D7DA95384FD04FFAFFD42FFA87D27525252F8F8FD0427F8272727F827
%527E5AFFAFFFFFFFA9FFFFFFA9FFFFFFAFFD3AFF527E7D845953527D537D
%53535259527D597E52A8FD07FFA87DA87DA87D7D7DA87D7EFD057D7E7D7D
%A8FD2DFF7D7D7E7D7E7D847D7E7D847D7E7D847D7E7D7EFD08FFA8FD047D
%A97E7E537D59A97E7E597D597E52FD37FFAFFD11FFA8525227527D27F827
%F82752282827F8275253A8FD36FF53FD11FF7DA852272852FD052752F82E
%5205F87E7DAFFD33FFA87D527D537DA8FD0EFFA87D7D5252285228595252
%2E282E7D522E597DA8FD30FFA8A87D7E84FFFFAF7E7D7DA8A8FD0BFF7D7D
%7E847D7E7D7E7D847E7E59847D847D7E52FD2EFFA8A87D53527D7D847DA8
%A87D7E7E285353A8A8FD09FF84A8A8A87EA8A8A8537EA8A87EA884A87EA8
%FD2CFFA87D7D7DAF7D52275205272752275227277DA9597D7DA8FD08FFA8
%A8FD05FFAFAFFD34FF52527DA9A952F8F827F8F8272852F82727A8A98453
%5252FFA8FFA8FFA8FFFF5227FFA9FFA8FFA9FD36FFA884537E2728527E52
%52277D59532E847E7D5384A8FD4AFFA87D527D7EAFA9A984A97E7D527DA8
%FD50FFA87D527E7E7D527DA8FD56FF7D7D7DAFFDB4FFA852A8FD5AFF7DFD
%52FFA8FFA8FFA8FFA8FFA85AA8FFA8FFA8FFA8FFA8FD48FF52A87D7E7D7D
%7D7E7D7E7D847D7D597E7D7D597E52FD46FFA8A87D52FD04270052525227
%52532727532727527DA8FD45FFA87D7E52522E522852525352522E7E5253
%5252285959FD46FFA8597EA87EA87EA87EA87EA87E7E7EA87E847E847E53
%A8FD46FF7D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7D7E7D7D7DFDA9FFCFFF
%FFFF5AFD54FFA8FD047D847D7D597E7D7D537DA8FD4DFFA8A8A87DA87DA9
%A8AF7D7D7DA959A8FD4DFF7DA8535252272727522727277E7E84FD4DFFA8
%7DA97EA87EA87EA8597E7D8453A8FD4DFFA87D537D597D537D537D537D53
%59A8FDB0FFA9FD52FFA87DA87DA87DA87D7E53847D847DA87D7E7DA8FD49
%FF52A884A884A87EA884A87EA87E847E847E8452FD48FFCA7D5259272727
%52275227A9845252522852537EA8FD48FF597D525227522E2E27287E8428
%592752275253AFFD47FFA87DA8A87EA984A87EA884847EA884A97EA87E59
%A8FD48FF7D7D597D537D597D537D597D537D597D537D7DFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD2AFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2015-08-08T22:41:14+08:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:ModifyDate>2015-08-08T22:41:14+08:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>184</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYqgtb1ez0fSbvVLwkW1nE0rhRV24jZEH7TsfhUdyaYq8N/M59W0n8ub7zE128&#xA;XmMMlzeSm5m9KM3EwDQxIG4cIvUCJ8O4XxOXGFBrErLyH/lcWpSaUl2LmOJmvrm1Cs+oGRlSFWg4&#xA;hZG6yN8WxP4DI7JQifml5uhjS6e/hmhmS3Hou2oM6SSkleJV7ZD6gQihckb/ADxV71quiQ3Uljo9&#xA;jJeQ6hqsgQul5dc4bdKNcyikpoVX4EP87Jl84RA5NUZEl7XCjJCiMasqgE+4GYpchfgV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKfM/lu08w6athdTzQRpNFcJJbsFYSQNzjJqGBCuA1COo&#xA;B7YQaKCGOyflbFIvCTXtSdag8WaEioNRsY+xGWeKWHhhKL/8p/LWj2JuX1O7gt1aONykUBADuEA4&#xA;xwk/tbZPHIyNBjMACyi4/wAlNDimeeLUbuOaQcXlVbYMwJBoWEVSKiuQ8VlwJ95c8h2Oi6lJqP1u&#xA;4v7x4xCst0VYpGCWKpxChQxNW23oPAYJZCUiFMmytm7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq+efPFzqFlqUtzpXkmy81TXGraimqS3EEck0cUThYaSMCe+wNdloKdRbGO3JrJ3Qnl&#xA;2280X1xE2qflzoOnwPHJ6iOlunBwaIDIizt8S8iaQkdBXc0sjE9zEkd6UX+pa6T6Vh+Vdg1wXlA9&#xA;WGNFCqQY6sYVjqyV/wB2U/2R44aP81F+b1b8o7aK18w6okWnw6W9xpOlT3dlboiIk7S3gcfAACV+&#xA;zX2yGYUyxl6llDa7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqw/UfJn5fXl9Pdzsk&#xA;dzO5e49K7eINIT8TFFkAqe+2SEyGJiClOr+Ufy00+yN1I8jorxqwiu55WozhfsrIT3y3EZSNBhMC&#xA;ItG/4A/Lf/fv/T/L/wBVMh4hZcATfyz5b8paPd3EuispubpESc+uZ3ZIixQfEzmimRvvyJkSyEaZ&#xA;FkUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvmE6B+Zc2l6PdeWIvL50ttLsAkF9&#xA;bI07SmBDNJI/osTv/l/Rl4gejVxBfq3l7835dRlSxsvLcNkXkFvIbeMUTh+7aSsMrH4uvEA9Om+S&#xA;4JI4gh5tB/Nu29VU03y/fOkdtwY28KozpGfrNKJE37xyONQvT9nvLgl5I4gy78rrHWrXzTpD63ZW&#xA;1nqj/pJa2scMYa3rCYgxh2O3+1kcg23TA77Pdcxm52KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVjT/ln+XTsWbyxpfI7mlnAP1Lh4iikBrHkH8sdOsTd3HlvTkiSSJWZLFJD8cirTjGjN&#xA;vWnTLMYlI0GE6Aso7/lWH5cf9Sxpf/SJD/zTkOIs+EIvS/I/k3SbwXul6JZWN4qlBcW8EcUnFqVX&#xA;kgBoaDbBxFaTvAl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvL/AM4k/wBymmTxaFb+&#xA;Yr230vVJLLTLpYiryfWNPGxlBVSFJ3ycBbGReb6v/iq1tluIPy50Gbm8JFtFaRTSpG1t6k3M1iUl&#xA;J2WOq1/aIVqb28J7mHEO9C2mpeZHsbV5/wApdLN7JGPWhVYIh6iSqsm7xFI1aNuS8nPhvQ4QD3IJ&#xA;HegYb7zd9eu4J/yx0gxx/WDbMtoE5GOMtEpfjIhLNQVqAe29aIB7lsd6tor+a7y9iF5+V2lW9lLJ&#xA;bRs5W2ieNJP96JW5Biwj7LxBPvkgD/NYkjve2flGdQi8u3NrFawx6ZbX9/HYFX4fCL645pwVWCKh&#xA;oFA7fcK8sYDkd2eMy6s45Xn++o/+Rjf80ZVs2bpVq3mzSdIuEt9Tu7W1nkT1EikmIYpWnKnDpXGg&#xA;tlBf8rG8qf8AV0sv+Rzf9U8aC24fmT5QDqH1W0CsaFllJpsT0KLjwotV/wCVj+Rf+r3a/wDB/wBm&#xA;Cim1p/MryEoJbXbRVG5YyUAHuTjRW2S4EuxV2KuxV2KuxV2KuxV2KuxV2KpZrXlfy3rvonWtLtNS&#xA;Nty+rm6hjmMfqU58C4PHlwWtOtB4YQaWks/5Vh+XH/UsaX/0iQ/804eIopifmvT/AMotJjktrLQN&#xA;Iv8AWYnj9TTbazFzMicwHMkdrDPJGONftLv0yzEQTvy9zDJsNk50Xyr+TOuRu+k6Pot4Y6etHHbw&#xA;epEW3CyxlQ8bf5LgHK+Is6CZ/wDKsPy4/wCpY0v/AKRIf+aceIrwhPNM0rTNKs0stMtYrOzjJMdv&#xA;AojjXkaniq0Aqd8BNpARWBXkH5yHUk1C9uNOu7y1urPS7e6UaeC08whuZSYQoeOofofi/HLIDYsJ&#xA;F5JH5/8APlhpF1aLPrq6lqF2Jo7vUIoooYIL4KVHGZbmakB+Aem0acugNDWW6NmMp5p/N4yW+pGT&#xA;zLNbyXSXkyNbzbpDJwe39OMxoFcOp+HiCf2QKUfV5rsnv+MfzJ1fV73TFvdaVUf6rFe2+nxxxhoH&#xA;MgmlRN1WYJwHGQdeh2GSBJLGgo+WNT8+6pa+aYfMMmsWcMNlqF9FFexukLLLAqi2rMgJ9MNWgp4j&#xA;xwxve1NbU+xbX/eaH/UX9WY8ubaOSpgS7FXYq7FXYq7FXYq7FXYq0zBVLGtAKmgJO3gBvirz2H81&#xA;J9bup7Ly1YpFNbkrPLq7/VpY6NxD/o9eV1Q06Tejk4wJYmVPK/zZ/M7U9A1d9N1fUhqztpzXi2Yl&#xA;aytVnMgjWJra2ZJHideRpcTsMkYiKASUki/Pu70fUZdDtdF0yzs7COWVlhJt4+KojoFUEIvMll5A&#xA;sOh9jLjpjwr9d/Nprq4inv8Ay/afWZbSwu9NInkjuYPrgLEi+gBdfhFU9IBuuxphMr5hQGe/lt5x&#xA;/Mm68upqNxOvMzSoNL1RWlBiV/3Ziu14TrVdi0vqmvbsEYbFqclFnPlf81tM1nVzok9nLb6rGpMx&#xA;tSL+zVh1U3EArGfATxxk9hlRgQWYkCzP61F/LJ/yLk/5pwcKbYp540jy1Jb3XmTU5NQt/wBGWcjz&#xA;y2TTxMbeANMy8VoGI3p3wgkIIBSvRPKHlfWdJtdUtL/WxbXkYlhElxchuLdKgcv15Pjkx4QqXX5Z&#xA;2clxaLZ6nqaRerW79W4ud4+J2UkqFNe+TjkoG/huxMNxSO/5VZov/Vw1T/pNm/rlfiyZ+GFlx+Un&#xA;l65gkt7i91KWCZWjlia8mKsjCjKRXoQcHileAM0jQJGqDcKAAfkKZWSzXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FUr1zyt5c12NU1fToLwoaxSSIPURqU5RyCjofdSDhBKKed+YfyA0W91E6pazR3tx6YiNrrsZ&#xA;1GIxipCCVmScdagu8gB3pXJifegx7mPaz5F0e3klm8y+Q4kaZRHNf6ZAL6GTlsFItkS5r0FXhA6b&#xA;7ZdGUT0aiJBUX8s5PMCRJb+UbGxtIo4YorrV0WVxHajhAEtYm+JUSoAeZGHh1xlKPckRLN9N/KPS&#xA;vSRNcu5tVSMcUsiRBZKtKcBawiOJ0/yZQ/zyqWW2YgzSw0rTdPt47exto7eCEcYo41Cqo8FA2A9h&#xA;lZkSyARWBLTKrKVYBlYUZTuCD2OKtgACg2A6DFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FUh883GoW/lyabT7z6jdrLAI7n0frAHKZFIMfpyk1B2+HrTJwgZGhzYykALKeopVFUsXIABc0qa&#xA;dzQAfcMgybxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4T5z0HUr/VNbn0PTNHu&#xA;tTGqyC6m1S1jndoltYvTVWZSftUG52HyoboQsbNcpUWBr5F/OVAS9j5TkdozxUWFrxWT1Q2/+joa&#xA;en8O1fv3w+HJHGEdbeRvzPitozPp/lGe5a4V5AbKNUW34nklVt1Na06V+eSGOXkjjCyLyL+Yk+l3&#xA;cU9h5btdV+vR/VriOxtvQ+pIjiTiDBK3KR+B+IVH4YRjl5I4woy+RfzNW2iRNP8AK0k4E5ml+pRg&#xA;EmnoAD0R0NeXth8OXkvGPN6n+SumXGmaxqNtdW9rbX7aTpj6gljGsUDXHrXgd1VFQdqVpleUUyxl&#xA;61lDa7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkOo+QfJGpXst9qGgafdXkxBmuZraJ5H&#xA;IAUF2K1Y0AG+EGkUxe50z8j7a5mtpNE04zW7tFMI9MaQK67MvJIWWo774bKKCX6pH+S8NoZLPy5Y&#xA;3M4dKQrprRkrzHL4mgp9mtcsxizvsxnsNkSYfyGHXRdP/wC4VJ/1QyHqZbI/RPLv5Ma3PNb6Zoem&#xA;Tz26rJNG1gsTBHJCtSSNKglT0xJIUAMq0Xyt5b0NpW0bS7XTjOAJvqsSQ8+NePLgBWlTSuRJJTSa&#xA;YEuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4h5kubsy3mnw6neaJeWuvS6h6kdpdyp&#xA;PCszOIn9Ew84pajlR9xl8AK5tUubGZYfOEV9fz2H5hX1vbXt3cXK202iy3YhSd+UcMTXBfisNaLQ&#xA;Ae3TJAeaL8kJrdp5yvdUu7m0853ltDPbJDCq2F2qxyrKrmQQqvD4kUqaU64T70fB6j+XF0b3zfd3&#xA;CrKyJpkEUszwywoZRNISF9VVr45HMbZYw9PzHbXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYqkmveaV0m+s7BNOu9Sur2KeeOO0NsvGO2aJHZzczW6/auEoAThAtBKXP50uSav5T1Rj4l9LP&#xA;/Y7khEo4gl+recdVeyZdO8qXq3YZGQ3J00xUVwWr6d7y6DbLMcd/VdMJnbbmiT57p18p6p9+l/8A&#xA;ZbkeCTLii0PzDEZqvlbVVPiDpg/Ve4+FJeOLIvLuvWuvaVHqVtHJCjyTQvBNwEkclvK0MiN6bSJU&#xA;PGfssRlZFMgbTLAl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV5l+cWlxahd6ZDeRX502e&#xA;yv7ee406C4ndJGuLGaNT9XSVl5/V26ihocsx11YTeUaj+Wmg3t8102sebkBZOKCz1FyI0jWMJV7Z&#xA;q/YrUitetcs4B3sOI9yCm/KjTXndk1/zZHFJHFDIq2GoB2WGpQs/1fdgSd6dCfHHgHevEe5lfmTR&#xA;7DXruxuJ7rzHb/U7S4smW30+/j9RbmJomkalrT1F5VU069smeE9WItjsP5dwW86Swa75qbhcwXHG&#xA;ew1FxxgLnh8FvHTkZCdu9DTBQ7ymz3Pe/wArYZ4vKn76GSBpb/UJ1jmRopPTnvZZYyyOFdeSODRh&#xA;XKcnNshyZblbN2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2015-08-08T22:41:14+08:00</xmp:MetadataDate>
         <pdf:Keywords/>
         <pdf:Producer>Microsoft® Visio® 2013</pdf:Producer>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Lenovo User</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default"/>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>594.750000</stDim:w>
            <stDim:h>841.500000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 6.90</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>times.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91</stFnt:fontName>
                  <stFnt:fontFamily>#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 5.016;PS 5.006;hotconv 1.0.67;makeotf.lib2.5.33168</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>AdobeHeitiStd-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>默认色板组</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:0efefad3-d6ad-904b-b4d1-e11c74e80918</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0efefad3-d6ad-904b-b4d1-e11c74e80918</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:0efefad3-d6ad-904b-b4d1-e11c74e80918</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0efefad3-d6ad-904b-b4d1-e11c74e80918</stEvt:instanceID>
                  <stEvt:when>2015-08-08T22:41:14+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -841.5 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.5 li
594.75 841.5 li
594.75 0 li
cp
clp
gsave
0 841.5 mo
594.75 841.5 li
594.75 0 li
0 0 li
0 841.5 li
clp
295.5 117.75 mo
179.25 117.75 li
179.25 84.7501 li
295.5 84.7501 li
295.5 117.75 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[117.75 0 0 34.5 178.5 723 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 157 
/H 46 
/M[157 0 0 -46 0 46 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 157 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 157 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 157 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 157 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&q>^O'.#TYL/-.(,l2Uhg'WDl"(',*Tl2Uhe#KI"X"TSSI!.k1N-%dcG
/-$aV!!!\+(>T`+&*a,p"MY,T"TS\E!/^aV&,Ii0/-$4H!!!:m(??52#jVHj"1JHR"TSY=!0I6]-1`[G
/-%!l!:g*i'9X-t('#$5!!!/+"jR8O"L\;u!!!Pq/<VOa&+T_s!!!:^(@r:A#lXhl!!!+e"m6$h".]Ft
!!"=n/?CB&-0bI1'CZct('#$A!;-<l"HN`T"TS[j!4i.1&'?H0/-$4H!!!;g(6oX8#k%cl!!!+V"ni*"
"-*At!!"=_/A!G5-0bI1'B'^t('#$5!!39,"bHpW"TS[[!6G3@&%aC0/-$4H!!!;X(8M]G#jVHj"8;tR
"TSZ(!.k3t!!"=P/BTLD-0bI1'@IYt('#$5!!!/k"c``d"SMhI!8%8O&$.>0/-$4H!!!;I(:+bV#jVHj
"6]oR"TSYn!.k4>!:^$h-'KnG/-%!]!!!\;(<mTp'C#Pt"O@7T"TS\U!.k4H!!!Of/Fk=l&*j2q#cSTh
('"X+!!!,A"h"R7"3pmu!!*'GKIlsN!%$n1!#)(Bg_Kl'l2Uee^]hFU!!L:AM#[Mdq^d=M!"\Aq!!o#/
it_V#lMpne\-9hT!!Bt9O8o8,oIPkN!%%IAnGiP&P8<I"!#+Vt!!KP1bln(M[fDcq!"\EIOXpJCo)SRd
!!nJuneM32lMpneW<LcT!!BG*T)\j;jXcfN!%$q2!<<dd(A\dH'DDM!!!!.`"muNo"I9%u!!!PQ/@$f,
&*j2q#jE+h('"X0!;lfs",I-R"TSXc!5JR7-,_@G/-%!]!!!\l(7Z-?'C#Pu"9jA\r<30(LB,Bq!"Z^n
_(5QslMpnjg(pG!!!qlj!!E!"K`qM[!!%TNcN!qk[4KEN!%$n1!#*fsWtk[Kl2UeenHFmU!!N#rJcOC&
!"Z1_cn#/-lMpnjb8.B!!!qlj!!DHhPQ_$hn,S%?h>dO%VC^@N!%$n1!#*9d\eY8Zl2UeeiWYhU!!MKc
JcP6>p](:)N%FKM!"\Aq!!oS?dhVohlMpnea9AsT!!COIJcGiP!%!=Mq()Lll2UetUDDT"!#+Vt!!L+A
]`eB=`rLnq!"\uYJh-pR&*j2q#b)Uh('"X+!!!,3"iLQE"2Fnt!!"></;YnX-2R]3!!![s(?uY8'C#Pt
"L83T"TS\8!1*Zc&+(p0/-$4Q!;HNo#`KPh('"X+!!!,$"k*VT"0hit!!">-/=7sg-0tU5!!![d(AS^G
'C#Pt"JZ.T"TS\)!2]_r&)Jk0/-$4H!!!<&(4m;&('sF1qZ$TuM$<MT!!A;_^An6[`@SPN!%$n1!#+B.
Rhbu;l2UeeJd)&U!!J)X`rH)M]e$rM!"\Aq!!q<pU)!_7lMpneq#uET!<W=R!6tQE-+5AG/-%!]!!!\^
(9/,M'C#Pt"S)_T"TS]#!.k4%!!!P4/C,jI&*j2q#g='h('"X+!!!,d"d9)i"7ZAC!8RVT-)W<G/-%!]
!!!\O(:b1\'C#Pt"QKZT"TS\i!.k44!!!P%/D_oX&*j2q#e_"h('"X+!!!,U"el/#"6'<4!:Kpe!!"="
/GLar-0bI1';QDt('#$5!!!/="hY!="NURu!!!Q./:oDS/1_=t!!!:p(?$#/#jVHj"1eZR"TSY@!0.$Z
-2&mG/-%!o!:Kmf'9s?t('#$5!!!/."j7&L"M"N!!<3Mr/<;=^&+oqt!<3=a(@W(>#j_Qk!NQCP"TSY1
!1j2j&*GL1/-%!`!<3'!#_j,i('#$6!<3.s"kj+["KDHs!!!Je(nMQE"mH!g#Rq5p%0?tJ"R,md!M0GQ
"JPmr!!!J^(o8&L"mH!e#l"ja%0-P0!:Kmh!!!%R"Sr7X!6"qg~>

%%EndBinary
grestore
np
176.46 111.97 mo
274.25 111.97 li
289.13 82.2 li
191.34 82.2 li
176.46 111.97 li
cp
level3{
gsave
[159.35 0 0 42.092 176.46 82.2 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*=`/O*=`/O*Y/>Q*tJJS+:nYU+V4bV+qOkW,7t%Y,S:1[,n^@]-5$I^-PHX`-kcaa-kcdb.22sd.MN'e
.hr6g//AEi/J\Nj/f+`m/f+`m0,Ooo0Gk#p0c:2r1)U>t1E$N!1`?W"2&cf$2B)r&2]E&'2]N,(3#i5)
3?8D+3ZSM,4!"\.4<=e/4Wb"24Wb"24s11459L:55TpI75p6R866Zd;6Qum<6R)s=6mE'>73i6@7O/BB
7jSQD80nZE81"`F8L=iG8gb&J9.15L9IL>M9dpMO:+6VP:FZeR:aunS;(E(U;(E+V;Ci:X;_/CY<%SR[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[
<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[
<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[
<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[<%SR[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.71 ]
/Encode [0 1 0 1 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[159.35 0 0 42.092 176.46 82.2 ]ct
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~*#oq=*??1B*ZlIG+<VdM+X&$R+sS<W,U=Z^,pjrc-RU8h-RU;j-n-So.Olnu.k</%/M/P+/M/S-/h\k2
0JG180ekF=1,C^B1c.'I2)[?N2E!HP2`E]U3&ruZ3]];`4$5Vf4?P_h4Zttm5!M7r5X7S#5s[h(6:+"+
6UO706q'O57Rfj;7n6'>7n?0A8P)KG8kVfM9MA,S9heAX:/=Y]:f'tb:f("d;GpCk;c?Un;c?Un;c?Un
;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un;c?Un
~>
<~%1NaV%LrsY%M''\%hB0]%hB3_&.fBa&J5Te&J>]h&eYfi&eYik',)#m'GM5r'bqGu()@Z$()@]&(Ddl(
(`4),(`4,.)&X;0)B'M4)B'M4)]K_8)]Kb:*#oq<*??.@*?H7C*Zc@E+!2RH+!;[K+<VdM+X&!P+X/*S
+sJ6V,9nEX,U=W\,U=Z^,pai`-71&e-RU8h-n$Jl-n$Mn.4H\p.Olnt.Olr!.k<,$/1`>'/1`>'/1`>'
/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'
~>
<~!WiE)!WiH+!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i2"U,&5"U,&5"U,&5"U,&5"pP89"pP89"pP89
"pP8:#6tJ=#6tJ=#6tM?#RC\A#RC\A#RC\A#RC\A#RC\A#RLeD#mgnE#mgnE#mgnE#mgnF$47+I$47+I
$47+I$4@4L$O[=M$O[=M$O[=M$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OR%1NaU%1NaU%1NaU%1NaU%1NaU
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
2.16 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
176.46 111.97 mo
274.25 111.97 li
289.13 82.2 li
191.34 82.2 li
176.46 111.97 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H)
%%Title: (SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H Adobe GB1 5)
%%Version: 5.005
/CIDInit /ProcSet findresource begin
15 dict begin
/CIDFontName /SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (GB1) def
/Supplement 5 def
end def
/FontBBox {-163 -283 1087 967} def
/XUID [1 11 9273739] def
systemdict /languagelevel known {mark {systemdict
/version get exec cvi 3011 le {currentdict /XUID
undef } if} stopped cleartomark} if
/FontInfo 5 dict dup begin
/Notice (Copyright 2006, 2008 Adobe Systems Incorporated. All Rights Reserved.) def
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 30284 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 10 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-12 -0 767 779 552 564] def
/OtherBlues [-247 -231] def
/StdHW [92] def
/StdVW [113] def
/StemSnapH [80 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 1
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [79] def
/StdVW [83] def
/StemSnapH [62 79] def
/StemSnapV [62 83] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 2
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [50] def
/StdVW [50] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 3
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 10 dict dup begin
/BlueValues [-10 -0 767 777 552 561] def
/OtherBlues [-232 -222] def
/StdHW [85] def
/StdVW [101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 4
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 9 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [101] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 5
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [61] def
/StdVW [70] def
/StemSnapH [51 61 71] def
/StemSnapV [60 70 80] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 6
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 13 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [91] def
/StdVW [99] def
/StemSnapH [79 91] def
/StemSnapV [85 99] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 7
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-12 -0 766 777 551 563] def
/StdHW [91] def
/StdVW [116] def
/StemSnapH [77 91] def
/StemSnapV [83 116] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 8
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [116] def
/StdVW [91] def
/StemSnapH [83 116] def
/StemSnapV [77 91] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
dup 9
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 11 dict dup begin
/BlueValues [-250 -250 1100 1100] def
/StdHW [40] def
/StdVW [43] def
/LanguageGroup 1 def
/RndStemUp false def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}bind{}{}{}{}{}{}{
}{}{}{2{cvi{{pop 0 lt{exit}if}loop}repeat}repeat}bind]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 13 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
3039 <051C60D8A8C9B5EE31764D1907641C9340D8E7DB5E79F53593490F1CC7
845D33A934355A66DAEDD9FD416D42ECF540031CE1C04AA0AC97186C2E7C425C
418F949EDFDE60EB6D74AFA90F938F0FCC8E18A3815BF4BA90E6187CC89D86E2
C42509DCDCF21C32E3850C370D7EF4633F60E1E27614B07BC70FD5E5AFF3C45A
E48CB350CFF1A04A191F4F3D1472C786E5944D2C615CDA5130E4348CD29C0ED2
3D149CFE959C66E46FAEAFF900BC333FDCEC7734B3D1779CA3022D0106ABF8BC
829D0DC11BD5C95FB4B60CF88086C35A33971EE1E912DB58B738286AC7FE0ED5
383490D54B3FBB00224D4870863FCB93CB6040CEFE84D1DA5EA7A4BE78F99FF5
45EBB2037DA2FB71370B773659E49F97B16E2BA7F8DF4FEAF8E7296684933FB7
FB3EDD15742A90B93DDB071A7574AD31DB3FF69E51F6AE919057A6FD9994177E
1B0F8774F562AA7B> |
2126 <051C60D8A8C9B5EE31713EB88C67926D13F71D9128DDB12F9F62835E19
77CC64A8E40D6B32FE1FBDFD1B98A71FC8767730AF5608FCCA2CBB102FA0BAA3
7EE4B079424C4A6E7BC9A140E76F78B6283F54D600456CC27DF8F069E6748732
334A90875B673C3DC98A04D383D9B4A530F0334B5B829D4B2887E8237E46AC91
C24528B5AF8DB923821A0A98F1DF348C38852493D65B6DE9A8BF7BAACCBAF76A
FBB1463CBFDD2598F2563B1BC2D015C703B7AAEB584E23607D61C9D29283C5EE
70AEB774CBB55B963FD862F1644D5B302CAF7B9360D17FF56E229465D4C3DCFD
1A51A9B8031823CE9151249CC24F117CD7A2300630E3E35573F9B592081A9AC6
E40FD9123E892E3CD9B6C9B5D81E602C5B176117EBE1241032BD2B8756F78892
4FA770150918BDFA14583A1976910AA4C43103915A838C6BE28894983909EF3E
63B8C96847A1E3F3AB25> |
4535 <051C60D8A8C9B5EE317635DB23483369790CACBFA5DF9788F898CFE273
793F9D438074AA22710B60C41366BB23405149F38A21C29BDD0365F37621022C
F44F9D1DEC82F3CC4DAD7E0F3C5BB8B612C64AEA032A3C8078C976CF516E28FB
F0B47BABF0C1D3E8C37C17599B43D226B135187DEF800EFAEEBC8D5D4F16A825
86C6B7DA79FD5604250E640338B7AB5C44CF52CC4A8CBDF2696A147903F349BD
4A4BA5E5F895A0E8956431823BACEA0D95673F17737E13213A9EAF945FDD34E9
22189A89AFACFEF0CCA5E54B390ACDF95D580CC4F801278349B149356DE5128D
B18D3F74B7D5ABACD3CCBDC4BC46897EC489A3A82206521EEA83671FD6D22A4F
35BE42A8230E42AC69B47A1195211F5425A1FCBB6F39A71A5B8356CC8C38C8BA
FBA6EFA910A09925DF7C724237EDD1E3280F29C441671C5FED3A8237007E18E6
795C03410F307FF772CC4D504121864D66628B01FB51F82DBD7E889B47714639
D2DB086FA8E511A3EDB8BF1E37CBC2C1EBBF73193F9387C51696637241381FF4
5388D35D8FA2667EF53BADC9412662B50D35254D69625F28A9878368F96197E1
621C5A0BB8492081F012D66D201A7A59A823625C67D7BE4224FD08A09E3C64B5
0D0439B7D2DF78C053A53D0BF870> |
1107 <051C60D8A8C9B5EE317642D15A1EB5610D71A3BC3B3844085D168A7776
9DAF4A7A283C6E4DC52EB1CA7C070E5754E51972FCCDC4BCAD7257563FAE813D
53B18C73AEFB4B4E8DE8C88ED4BB6487DC36E9E87EEABDED0CA43C6E8D1F163B
7C59CBF3E2ADA60917FB892EE82AA2756F856C8387E7C7BF77AC6418B40880ED
20DA6F5DD56842BA6AD17E6649F8C1694189856544DFE6B054760ED6ACFDDBA5
639527BE8451E1B542140AA5B70F469912DC9EED2B245E0015814607B17B5106
033E044FB51BD5617F51F37AA82888C488EB74580817EFCB82DBAE3FE94DBE9E
1F42C2BC55B0021377899E7FB654BDF1363394C196014C5414B96F038CF8D100
D1E3BD5943786AB4F9D4E53966CEA79D3E78DDF5193EA9DA82C41FFEA54C4679
062DFFB5B3FB5B68A3DFFC14A48151956B3EE7A9C9B4FA30E6C0D36B8419E796
16C02756222B5B84F8E932384F331D3D7810C960C5E1CDCD94140763A9011071
BDF3AAE6477C84B66117F95398D57B499BF69EBA36E88FC7B404073C3879C2A2
2CB1C793> |
3218 <051C60D8A8C9B5EE313212D42B47934E295B82DAF8FBE786E335471B0C
8D85748BEC13E2C3CE3A4E81D0275BECCCECF13CCC735E92AF97507FBC4D6EDF
53FCBB98F88F4B03E76A7C70E4A22FC4138FAB2CEF158F19CC0CEBE4C8497C12
FECDB8EB55B768F2B28353DEB324E59EF12212B9DD1B576B06A9256BF5FC60A8
5FFD7B0230296B4ADBDFBC52FD8C9E0C3FE2BB2C8711E63A9114710B372EB424
5994E4A4F768BA1073908A41FD0CE1019E23993918FD95EC4C84B58806E0889B
7FBEF57FFBF05EE471A0A75A06219416CE5A88796EBD0F57134D9E100246BAC9
2E1D30D222AB60C83739A75C6DEAF133BA66B31D8E72C3616DBAB876BDE96787
99189483EB543709BFF4C36DEAA4E0398275A886502E5276A5371D23D6BAD22A
5FD0C4C7B14638E3A96BDE21D5C3543BD24F234CBCA415AEAC60F523F1604E6D
408B2A37C0635BFE4F773F4E387B4CDBC3DC5F5CEF8EDE568AE5E3D1965CF923
3E7AA71C6B0B084CE7EB0552DE54D4D933ED992ACC7F26B2C63E44FDE3E67AF5
DE73EE91116397A3187FDA5B7EE038A21DE8069AFC331A269BDF0C8B05F45DAE
33C14C56D4F6E42A7096392B2CAF2D64D601C1B04BF3384AE4DA254E89DA8930
455BE70E71B56741EDD6BCA59171> |
1511 <051C60D8A8C9B5EE31764DEBF73BF0E09CE22E0E6E513348F86F377A85
8D3AF5B1BF4ABECFBC0B708AC5532BD497D5789C1567A2BF6D16F3F48A155FB1
9A2D0D4607B76D5200DCAC65D4E3B2D32F6CD9BD00F020C63C8E362823E55765
F9B05EB3B5576BED32423DC6C20C2F3DD7B4AE6EB45939DD37A7E9B7EBDDBDFE
4AC20897305F6F702F13C573112DA4AEA304F588324C9288E8789CFA39863B1F
0BA2C963282434B42DD7C668FBBAEDD6054E0593E912EFFC5D3B8EA3CF9DBC90
13FDC4C68ABD734AD62577B6B4E8CA6F309291DC5B89D3803227A2422B428694
7194A778EEF37C7546090872579C31FDF0A0E230D5ED35A5A4D124998D90BE4C
A9E258353B525271FD04592BD6DE67A868E24E65F105F2FC0DCA6EE7961FE1C0
6FDE254A38DC1B3DEB2BCDE047103201C6043C2FCAD9C2BB4FAE34E17837752A
9DA290BFA3379659D3896178BB91A5AE89083E420D65F8999182C050B14B9A1F
AEB7455A8315FDED61394931FB2FE41498> |
2083 <051C60D8A8C9B5EE317642A49834096F5C47BA3BAE6CAB93C7E3D944A9
70084E2389241FC8861D2DF7133F9D4122D3B4EB08145016A773E987608BC945
32154E95F62F6B9FDC7E20824AE4E2924D5B8F01CC00E455A0AA7D7DCAE982E8
1588CC27844BFA4F4BCE07E641A37089CE409123DC4698A318A710E1B9AD3940
2D404DEBD4B82C19FC14C41AC419E9D308D609C592C42D935C6A3E259208B6A1
A18CEEB04399D345176CC852B5E9F342E23D9E90B1BD8A2C0365CFC580F634E1
A37276CFABAC9879CD8394588CD4DCA02F9F> |
3476 <051C60D8A8C9B5EE31764DF0E84FBF6C7E94C854BD6C99AB2933F98BB5
8F213B0370B53AD69B293C652DB232D73A28C13721290C58DFE6EFC9EBC1710C
9D415295369C5A05C0DE19DDA9E049512B8B347593853E5E5B21E62D0AFFD4A6
17420B82F911FBC56139237E51134CD57A8A30235F0A8B1CCAB1E0320CB8D80C
C8A3786BC98E7BD79217EA1E0786B2C6652E2EBBB743527C5FF5B60CB28B9B6C
C5BC367BE04A3B8A0AF65CB5A256A5DA0CCDD8C25473D04BA2C6C15DAEFB6DB1
2AFAAB145EDCB9B9CD240646F635F4A0D76C635803CA0F1EE878C821AB023E79
34836DD0C7B61464DAD3A6F6E0AF4A0D8317A211A8E752AD3F0CB7EA1575D8B3
AE81E20A08CD90C344F9E682F155719F77912BD80DDEB52496025F9841EFEF40
8BA6365D24D486C76BC073A79A2E30B971E41A1B450D9244F75577CA9DB4F86E
82A3388A1842129F4AEDE5BCCB545DF3573C074CCF11AE23515E6295B1A2E883
DEEF449AA4BA9DDF58614968369EB8642C5C882A378A8AB72C771969E0C6BC6F
16EF4D1CC9D16233A9116474C680B71EEFE2CA761F7B2A603B1D44D0D03ED796
11F5CDC9B40EBAE815FDB29E1E45011904090810CA5C74DD1BDF0A1800C9DA75
7FB6CE5F11656B3F779021C94FFA3EC2B155BF1F7A2148B4D9271AC6DAA23613
6D85EAE568A5763CCB3E2FED1AFB45CD5280E508773F82AC5A8231281F61B9DF
AA3D570242D49D9AA13991F12CC8BD74D31848FD4A1A3E05246714CB1B9DC03D
B8DFD78F22986404812C2F72235CA0B8DC54E2974B9E05AE3AD4FC992ABFA6A6
6FD1DCCF68813B9B704766EE3FB5C826F98C49A2C1FF787761F43D53EA410869
8F819F7BA37A3FADBD724EE3C03D8ECD5998BA2ECE2073D67A73DC578ECD99B0
EBFD3141C62149A2BB6BB43605593116906B9A13F4DEEB5A4F8D7FB623512450
8CB12A6A10CBD30A63CDE27E85> |
2316 <051C60D8A8C9B5EE313343F214AD014BC77CBDBE7FCAC42C668272BC71
ADFCAA40F0933032A123F2D655E1B298FA64A499017D3899D32BBD5F7B995E39
F3857622A9E3E9806F8437B39DB831FA3BE6D3A2DDB02DC78B20B8FBC805E9B7
D211F721D581D5C1AC8389774C30F9886DF2D2E0E24F66F960A96C6847F7DC65
C431A2B4B828C22F9CD4B8564EACA06F3D057B97B66020EDAFC2FFFE7F784C0A
3509EB3CF8C7B28328951CB602657933A5F4CACA42407355F11665B0ED0E8BCC
D95D31564080BB934C7C3AC218FA26BFA976D870B214CBAF4A5C2FBA50C46A9B
B3E1FB16C2C4F73219E8C4AEA36B771B5D2B7863D46C83F48090D0F3B9E3F26D
47AEF9CCF580E0DB925C2153984F9ABCADFA8102D5009A84A9E5ACF4A43B5B2E
00722BFF0756669268F7FB5457A48F8774D089EBEFE572442C09D8FF3C1BC88E
E9A0DE90115FB1C5E7ADC0A7101195DFEF1E76143C1822F7C5822E4FDA152581
144420E1C738347ED606355D5A097C1331A54A1D4C4D83AF7ED5A304FD6B82D1
C6F724A520978EF89FA99C9E918F2222378B0514693DBE3EB95BFAF2B1EF6757
E66CA65FDC34DE5AF60F91797C327FBD01A36470ED7542ED1FBB2BA5166F5A62
16072A160533D500A6736347BC5DC3E63A6D8947757267F946F54D6E9A963B0F
DE8736F7CBD86925093E299382E8758AB9A18B764E9A8C9E42B3F4032677B5D4
F963029AC8A34DF5CA9BCB0254C5A6EC1423E9A43288912C11DD7A2C154A4087
452700C01C176BA6983F02E11566546DD476D33F8A025EA5F22596442BB761DE
C0CA7AB20CCAAC216D1AE2DBB3B4743EA2B901CD4D39F2630DFC4C8B5DF09B22
B1254F7DA5AD0500> |
4327 <051C60D8A8C9B5EE3177713598839CC545276E16956BD252DC0511C81B
9476587FF696885D65613235D37C005C17DF83B0ABEB83B354ED54F8A2A8CC03
155EF7B5918BE81B087131212033CFE9450CB11820659EBBE94367D4C145542A
2203EDD7C75B5A913D43AF91ADBFBF0FECC1E426DB39F11657CEA85E991A1432
BFCC6821B5F5778F82B2997056A5B0B8F0CC387BCDF5C6BBD3AEE61A22F93CFB
F8121036C019C3089DC6968BC8CC80EECF61B4F1905F56D46EB05F467AF8D2DF
D77F445930386D7EDF1B50F08DF8C6C76B2C645F0284E3B17140C58FE2B65B01
B4F0994DAC7BBABA09E563D869B96F63AE40D7A68F601A070FAA112239734B3B
A9BD45099966E9465DCD8402151AC4EC2E3C0D778E83F87C34EE6AC6C54BCBE6
E0B5F02A56155EA9581FC889807E90978581EAB8A1C01F872A022DC3A4F16B0F
5CA3957581F49622D005DDCDC832179398F79FAD9B04CBCDC59C32D41BCFBB0E
17BE5D30725A5F6606B8F08047D41D598AFD3261FD1CD6E9A1C161DB41E7B59B
D2F6BBC9E74CB60246F13E3FE8214A77EC833C1F069411376DAA7A60E9B244EC
F1EC5EEA7EE4358FC323E816EE3C9BBE588B827E6AAAF93265B721168DED2229
03C0E1> |
1321 <051C60D8A8C9B5EE31A2DB7749344F2B3F33D9AC87B46FDA4747DEFC2F
3ECB3B30C2CACA205868550128D75B9AABEBC55094F9257EA2017B913FA8D645
2CB3000D70C1D70E9E05B00C63F1B9A86CE189F4793DBDABB5E0C83F4849AD73
92059028E9B714A7DE7DC3DA18477FF069D4385D98D59B536F433D24A837EFE8
29129E3A2FC3AA39C855C07FC7CC03767A870798CE82C9408695CB0E9A4A50C6
3A19C8265D55702037D88BB774FE7110434CC2AA1742C668A6A4065E92D6D5E1
BC4498B9570BAEE87A5DA7C3298E568CC008A42E1095CBE579827E7F4ACA1C8D
51165F5A39A4FD395A144B155D0A8198A0D50E45744E98BB4100E5040F4F3C70
CDC963741C7EA9410CEAD55F7AF7E5A2836A> |
2520 <051C60D8A8C9B5EE3130BF4C507E79EB6A1D61750C6FD226316148E44A
901E7DF1F201AEDEF2CC221B58643004A862744737089255EA3F9DE86489CFDE
1163D6404171FDE6960C213651E9F3B0AF922FD55168FA038CC8652AE6010C61
BADD463E96EBA6CFB9228A089C71CC539BF21D0AE1E4849FFA95A5222CFE72C3
FD10441A0607651A0C25CE70B3F97ED70A27473CE50F091E7751EBB08CC7DF20
1327037829E069B4443088AD6D4A3A2A83B0E5791A750C83175CD6248DED2B07
941E890A42DCF0378B8B6CBA3ED8BEB8EC5F7242577DD9072E172E190FD8E13D
55DD3E6916A7AB201D76F9645789D467ED5B56FB1CA705D380B7F4B727A5BE2A
A266ED81AA8041554B917BF09422E0D9C84447BC87D595295BB21A128B6D817A
28A759F1169E418E2C8C9B216012ED028909FDE17731B339DE1EB0236EAEAAEC
13201BBBA0ACD005DD9A15FA7794ED918EED01F39992AE8785EFC183A5A69AC4
834C3A4AB93BB484B64E5B074D5ED2CD657061F08DB67DB21BD1578A93D997AB
837AA4C1EEE3165EEA815FB2CEDF9486384F6043933CC17463CDC9B62C947B37
735B9D0FD4580B8578E4ECFD> |
0 <021C60D8A8C9B5EE31016ECB81E0C1366BAD401163892378F09CCEE0154E6
2994282057923F54B325CC9A5AE05541130069BD6350B359AFF79DCF15A13080
B576C0432E7718B13311A2748A284DCCD3104ED44BDC470FDD3EC6A57500D66E
6B543AA> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H /Identity-H 0 [/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.75 -1.19403e-015 -1.19403e-015 -9.75 0 0 ]msf
203.05 94.1694 mo
(\013\337)sh
212.8 94.1694 mo
(\010N)sh
223.33 94.1694 mo
(\021\267)sh
233.08 94.1694 mo
(\004S)sh
242.859 94.1694 mo
(\014\222)sh
253.37 94.1694 mo
(\005\347)sh
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.775 -1.19709e-015 -1.19709e-015 -9.775 0 0 ]msf
203.05 106.169 mo
(\010#)sh
212.825 106.169 mo
(\015\224)sh
223.343 106.169 mo
(\011\014\020\347)
[9.7749 0 ]xsh
242.893 106.169 mo
(\005\))sh
253.411 106.169 mo
(\011\330)sh
281.25 168 mo
192.75 168 li
192.75 135.75 li
281.25 135.75 li
281.25 168 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[90 0 0 33.75 192 672.75 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 120 
/H 45 
/M[120 0 0 -45 0 45 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcN:\!<jdo/B'.@-kcIY!<NqS(<dNp'FOa<!!L%?dffaW"0qpV!!!e=/Dr&Z+oMB@
%&k$*('"sF!!!+q"mlJZ!:Tsg(mHTL/-$mm!!!Ih(',!IrVup$Ns,Lfq#HBS!#YG]R4J=^r;Zg,n.qZ4
!"o/0!!MNiVZd&)h#ODS!#XHA[4D;%r;Zg,e/#\4!"o/0!!LOM_Z^#E_#VFS!#WI%d4>8Ar;Zg,\/*^4
!"o/0!!KP1hZWuaV#]HS!#VI^m485]r;Zg,S/1`4!YGD4!WW3'Ns,Lfp]-<S!#YD\ROeF_r;Zg,mhVT4
!"o/0!!MKhW!*/*g]4>S!#XE@[O_D&r;Zg,dh]V4!"o/0!!LLL`!$,F^];@S!#WF$dOYABr;Zg,[hdX4
!"o/0!!KM0hus)bU]BBS!#VF]mOS>^r;Zg,RhkZ4!"o/0!!JMiqum')L]IDS!#UbJ!$_@A!"JoCOqn$0
r;Zg#pB?rg!!_`hRfEF*kq&_`!$_@A!"Ip'Xqh!Lr;Zg#gBFtg!!^aL[f?CFbq-a`!$_@A!"Hp`aqash
r;Zg#^BN!g!!]b0df9@bYq4c`!$_@A!"GqDjq[q/r;Zg#UBU#g!!\binGiUj!#UbJ!$_@A!"JlBP84-1
r;Zg#p'$lg!!_]gS,`O+kU`Y`!$_@A!"Im&Y8.*Mr;Zg#g'+ng!!^^K\,ZLGbUg[`!$_@A!"Hm_b8('i
r;Zg#^'2pg!!]_/e,TIcYUn]`!$_@A!"GnCk8"%0r;Zg#U'9rg!!\_hn,NG*PUu_`!$_@A!"Fu)!>,>2
!!!._"TSc&!0$sY)##SL/-$mm!!!Jt(8)EC&cD\0"R-)f"TSb_!3#qu(u$UL/-$mm!!!JX(;(C_&cD\0
"O.+f"TSbC!6"p<(r%WL/-$mm!!!J<(>'B&&cD\0"L/-f"TSb'!9!nX(o&YL/-$mm!!!Iu(A&@D&HDe4
!!!._"TSc%!0.$Z)"oML/-$mm!!!Js(82KD&cD\0"R$#f"TSb^!3-#!(tpOL/-$mm!!!JW(;1I`&cD\0
"O%%f"TSbB!6,!=(qqQL/-$mm!!!J;(>0H'&cD\0"L&'f"TSb&!9*tY(nrSL/-$mm!!!It(A/FC&cD\0
"I')f"TSa_!<)ru(lp3J,5hKA%K7-+('"sF!!!/r"doMo#3u8Y!!!l#/>k$!,5hKA%H8/+('"sF!!!/V
"gnL6#1!:Y!!!k\/Aj"=,5hKA%E91+('"sF!!!/:"jmJR#."<Y!!!k@/DhuY,5hKA%B:3+('"sF!!!.s
"mlHn#+#>[!!3-#(lp3J,5hKA%K.'+('"sF!!!/q"e#Sp#3l2Y!!!l"/>t*",5hKA%H/)+('"sF!!!/U
"h"R7#0m4Y!!!k[/As(>,5hKA%E0++('"sF!!!/9"k!PS#-n6Y!!!k?/Dr&Z,5hKA%B1-+('"sF!!!.r
"muNo#*o8Y!!!k#/Gq%!,5hKA%?D8*&HMe1!!J>d!!`6!N;rqqpFM^`!$_@A!"JE5TG@M>r;Zg#klmsg
!!_6ZW;lo8gFT``!$_@A!"IEn]G:JZr;Zg#bltug!!^7>`;flP^F[b`!$;(=!"-4OfG4Gtr;Zg#Ym'"g
!!K+ui;`l[(o/AD+or_gr;Zj!%@n+(&H`OH!!!*$!!*4b"onf#!.k3&!.k3&!.k3&!.k3&!6>.j~>

%%EndBinary
grestore
np
190.63 161.57 mo
274.961 161.57 li
274.961 133.224 li
190.63 133.224 li
190.63 161.57 li
cp
level3{
gsave
[119.26 0 0 40.088 190.63 133.23 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[119.26 0 0 40.088 190.63 133.23 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
190.63 161.57 mo
274.961 161.57 li
274.961 133.224 li
190.63 133.224 li
190.63 161.57 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 3 GetGlyphDirectory
1858 <051C60D8A8C9B5EE31760940C9F3EAAD9B140852223CD96533E82C0659
778BE072B62425462F9E68297533960E0510C3BB6949969A48452435DF6111B4
BF620CB401EE5342663D1795D9041962EF7B452D970D318EF95C6FD5EB9CD97D
D5E6EED838E377AB4F0CBD647B09BD49641D4DB089A68E86EF83EEDE05620381
A8BDD77AB090313C0E9A9C61CE6E0F4B0121F5C745CEF25DA7394E89822BEEC1
A6A682BE6660240D46DEC4C1D4DC396AFCF2BA15A2F299497587756DDD466DD3
BA495258E7E81B6D3045A0AEF487599F5729F44D379DB57A261410CAF01F2B30
6719E1035C4FE87BA0EAE1FA3B186A2D3843556437A533788583E261F5B85640
3D3E7B6600B5934D92DC877ABA8271A791> |
4162 <051C60D8A8C9B5EE310DFA7F83D35FE6B3ED8A4E6A50C95A521420442D
3101DF23177BD4ED134E3EFADA27057205AD2926E9551A1C8D224B2FCCD11717
0A5A261DFD> |
1988 <051C60D8A8C9B5EE31713EB894F54A8BB8A4D7AC345FACAA20B64D9B70
4540E4A72E894CEB77C5D74DDA95C03445A6E2A4182443E1C5DDD13E20804CAF
5D846F6173EC1C77CB4549E431A802D6BFA169DD15AD4B12C8FBC21896A82DD0
8B8CFDB81A181D21C38CF496DA48D19F8B45B3E7691039BD2162970E03678800
150053A4111884B1B4DE911C1DF9BD074A45E148B33EEFFA8C7921EEBE316D7C
1A78EFE6EBB358243F4C52B877EB5B82477521F1A4C6811F6478BCFDF896FD88
AA30B58ADF44BEB8D7CE313CAE9FDD2E1B9C6EA277A939143A5113EF8487D5F6
07E2A7A7F87C311A089AE91D79408E1EDEFE2D71886DB6F44599AEB2AB60499A
4C22271FA90BEFD0733DFB5AC5F4F0807A> |
!
end
end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.75 -1.19403e-015 -1.19403e-015 -9.75 0 0 ]msf
198.05 150.549 mo
(\015\224)sh
207.8 150.549 mo
(\011\014)sh
218.311 150.549 mo
(\007B\020B)
[9.75 0 ]xsh
237.811 150.549 mo
(\007\304)sh
248.321 150.549 mo
(\005\)\011\330)
[9.75 0 ]xsh
285 218.25 mo
189 218.25 li
189 186.75 li
285 186.75 li
285 218.25 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[97.5 0 0 33 188.25 622.5 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 130 
/H 44 
/M[130 0 0 -44 0 44 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 130 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 130 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 130 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 130 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&k5YJgSJ^T.!"]#.!!Jr(jp_:rr;Zg!UBKT[!!Anph#IKX!\10#garI9rrK/9
fbXSnrrK8+ecl'UY5lrMrsc=dcn,26rs6(Lbng<grrK\7ap%eJ])]eMrscap`%:p*rs6LX_&!%[rrL+C
^'4N>`rNXMrsd1'\1IXsrs6pd[2/cOrrLOOZ3C72df?KMrsdU3X=XAgrs7?pW>>LCrrLs[V?Qu&JcPcM
rsa`7r@Iscrs4JtqA0)?rrJ)_pBCR"NWAVMrsb/CnLX\Wrs4o+mM>g3rrJMklNR:kRK2IMrsbSOjXgEK
rs5>7iYMP'rrJr"hZa#_V?#<Mrsc"[fe!.?rs5bCee\8prrKA.dfoaSZ2i/MrscFgbq/l3rs61Oaqk!d
rrKe:`s)JG^&Z"Mrscjs_(>U'rs6U[^)$_XrrL4F]*83;aoJjMrsd:*[4M=prs7$gZ53HLrrLXRY6Fq/
ec;]Mrsd^6W@\&drs7HsVAB1@rrIcV!X/]0K`LuMrsai:qCMX`rs4T"pD3c<rrJ2boEG6tOT=hMrsb8F
mO\ATrs5#.lPBL0rrJVnkQUthSH.[Mrsb\Ri[k*Hrs5G:h\Q5$rrK&%g]d]\W;tNMrsc+^eh$h<rs5kF
dh_rmrrKJ1cisFP[/eAMrscOjat3Q0rs6:R`tn[arrKn=`!-/D_#V4Mrsct!^+B:$rs6^^],(DUrrL=I
\-;m8blG'MrsdC-Z7Q"mrs7-jY87-IrrLaUX9JV,f`7oMrsdg9VC_`ars48n";VFU!<IrZr<<3(L]I2M
rsar=pFQ=]rs4]%oG7H9rrJ;enHJpqPQ:%MrsbAIlR`&Qrs5,1kSF1-rrJ_qjTYYeTE*mMrsbeUh^ndE
rs5P=g_To!rrK/(f`hBYX8p`Mrsc4adk(M9rs5tIckcWjrrKS4bm"+M\,aSMrscXma"76-rs6CU`"r@^
rrL"@_$0iA_uRFMrsd($].Et!rs6ga\/,)RrrLFL[0?R5ciC9MrsdL0Y:T\jrs76mX;:gFrrLjXW<N;)
g]4,MrsaW4"=tB,#RH2$r>,DBrrIu\q??m%MZEDMrsb&@oIU"Zrs4f(nJ;-6rrJDhmKNUnQN67MrsbJL
kUc`Nrs554jVIk*rrJhtiW]>bUB'*MrsbnXgarIBrs5Y@fbXSsrrK8+ecl'VY5lrMrsc=dcn,26rs6(L
bng<grrK\7ap%eJ])]eMrscap`%:p*rs6LX_&!%[rrL+C^'4N>`rNXMrsd1'\1IXsrs6pd[2/cOrrLOO
Z3C72df?KMrsdU3X=XAgrs7?pW>>LCrrLs[V?Qu&JcPcMrsa`7r@Iscrs4JtqA0)?rrJ)_pBCR"NWAVM
rsP#AnLX\Wrs"c)mM>g3rrSSllNR:kRK2CK!%=Kkjt$Zc$46b5'VcH'('FdE!!!8$"lBL`"/Z(M!3?X`
%0-S0!3Z[[#QOr(!3uXT!NuLH!4WK`%0-S0!4rN[#QOr(!58KT!P8?K!.Y~>

%%EndBinary
grestore
np
186.38 212.24 mo
279.215 212.24 li
279.215 184.602 li
186.38 184.602 li
186.38 212.24 li
cp
level3{
gsave
[131.29 0 0 39.086 186.38 184.61 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[131.29 0 0 39.086 186.38 184.61 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
186.38 212.24 mo
279.215 212.24 li
279.215 184.602 li
186.38 184.602 li
186.38 212.24 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 5 GetGlyphDirectory
3687 <051C60D8A8C9B5EE31764D853166F2644B9E85C9EA4B8CA841D1AB3E9B
EE15BFF89B496177E20B39FDA2F0561382A888496123B7348AF193B066A0AB47
35F2EC5BFC8D98AB7AFF5E414698F4E3669E28FE2FFE34ADBA1087666CFD6A53
49B2E7CE8B3EB2977AAF83E4291190385511B5962FA62A5703787D45EDAF7330
5043FC62B2D32013792D506C2EBFA3A1F184E006B893E3B64041418143ED98B8
557F86C487DD2BD1A9DA26C57A404970EB0C841308F3EA1B7765B3078F5F64DE
03DE678BCC5121948D5D371E12213D49362A889B5C3F1F2CBC6EEF88B6EC6CC3
604C266D83CB790C397BAB107DF5717E13A6B2877E3721A9B1AE6460D9D4C7E0
C6BE2830D7DB6194CDC8EFAE4F67E6B6929DC3FFB838875D0C982BE1AA2C7DBB
15939B1DB280E9D450E1AEB1732EA1C8A57BCC037560DD736012BB175A3A650A
5C00FD7C9888CEEAADD8C0F6735427851D99F828FD44FF90DE2CE73C72389F73
2A72153FC62AD435D8D87ECF0B8CEFC8B2F439E01EA191C34162C9230F4DED58
25FDF60AF37D1F8BE461BD9088689A3F62F19FB0B92809CDBCE7829E2FAB48B1
72C83507BB23BB6324F8DD747B127AB2AD> |
4245 <051C60D8A8C9B5EE31764D25BD5396B185306D60BC41CB82314AC39C9B
975A356DAB7676B3F0B6050FC4AEF4BFF242564E8CD146892BF6C3A456916FB7
0070334FFE0F3CD13F4025DF8732B1B71E25A4DE442DE0BEC120FDB71EEEFC13
81D0F21E64E55B59E0539E645A6A252C1538C0B49C4925966A19928E984F3041
7D6BFED27928A6B06903773BF670AB4B998D0A7A5ADD42A35F89C2BAFAC01A36
E2F4F037E352D38DF89802AFCF40378F7F11807AEE64ACCA480E3B36F8315843
9392ABBA9B474F1AEFAF20D3A4D284E8794ECEF61358A6F193A68B5F944D0343
8286621A62B477EDA79D03FE2F776509990E9E21496A446921DE135E891A92DF
8A7292C89CE0DCCE5FB7958EDA9126C257A66A195A3B0BC12959D351D7273825
830C5549B935C68C4CFC5CA04EDE01CA77EDA5ABD26F634865E6C00B47408C12
51C5099EF5CD297A6AC30F74A5F0F160208AE50116D309EAA864127EE4FF4910
C7748E8C176EB20F9095AF68E9C1CAECF47ECF24A3443B75019A88CDD4BE6FA1
E0DE32BAFE8F9BB9280D61CB2A33D9A0B849886F768887A3EBB39DCCB244FB52
36A038FE1EE7B8FAC5EBDD70C9512FD582346C79CA66A9A0A39ED239A4455296
8A756C74A83E0B947BF2DF88333AB66DB19E705184D81BF3AD8DF48F8EF85D8E
ED5A4380CCBE98E79006E7D3B634567C35F2C467A2B39757EB5C9752651B1D9E
596F48D7E2D87198F5705F62BCF2A564160EAEB9C15A9F51A8F4285B9FCBF7C6> |
1894 <051C60D8A8C9B5EE31713EB8C3CA9DCCF544327031799269974C5CB5E6
F845B63AA8F5EB5C5D7AE18CE5B383BC7E3E9553B6FD8B54C15C3078F53242A0
6711550A5243D47E6481B846309F5D1FD61030C83554A135166E7516AD310845
825B2F722693835BE6910A9F314DE8C7B4971292EFA73D91E4064D10F78B85ED
3FF45BF600AC27270D5CF51DFB49DA81F92585FA3C7E7DC6FAD28BA56F418553
6CE14B0DADA83EF2271704A914FCF509A67D8F49C443AA74220C9997EB0A7EFE
A7B999DDAE63D67C3CA5309E4E98A778ECDAC9F0CA04DC856500333EB81A5539
5DFDF09F6C9B89BBF4EF0E4244A13A119194B78C141CBB4AF696A22B0B7AFB1F
067CAE2ABD1688DCAC56A4DBF514F8CE93EF56547A533E550F4E86A7B3F1C704
8F0BF63A73351F192163AFEFD462D1CEFB3A14021910150122A6227CC3D77B5B
D28C47A903CED49C88037424D8914CEC11BDC940F932AE535CB40BB25E3E3E79
A03E> |
1810 <051C60D8A8C9B5EE3102D49B8FE8A5B37CE1D1AE73EBCAD18E5BB81637
4156C0694E679AF5860EFF58FF78DF9B4CAF4AF534204ADB7E2758A0853B7945
D34C65A00E670C9DF2487B30CF4AFA98696F8C9C25D3CB7CBF0DCDF58D887B03
612CA486382518F2C449E2361A0117731C9E8E03A7B0D76672F18F8EACF26E8B
1D32F9FC282568D4B36AAB3E62A171EE5AC2CEE57067A54152272A6A701FC714
22E2A7C79B123952613B2EFD27510D4BBDC4E159AA0117783328740BE95177B4
A2AB2C498258822D954ABCAC9A61ACE728FAC0AF75AB309B9561640A6B2C0006
8644C540C958ECFD27FBEDE4364E4CE9C34265E34240AA17BF7C000E3517D995
38616AC65C7CDCC13E473D2095877085B128E72C2E890D90538AC01603986D54
EDC91659D90A744ACF07E89C36C7801D1C91334089E35EE9FB2B3EA7A61FA70A
62C3A95E4BB1E6AE10CB891C157DA5E3642A50633A4C315850342C8199F59328
01A860116CD7A8A0D57FE19F0EA0DBC014BC14DD5D504EF711447F47D16BF1AB
BD66FE31> |
4399 <051C60D8A8C9B5EE31764D76012A1DAF2B1718DAB41874BBFA7EDFFF42
28D08B209E9AC9526F4738FF448D98C787C7A5CF54F2DD7DDAE63BC7BF0E1010
64DC6FFBFDE8D4782E84BE71CBBF86519B8219D3D0BBC262F7DE8F9522DCBF36
F733DE50AC7DB29347287B01DAE93BFA0535F87417DD632023B5F0A150724D08
D08573C71426DAB508554992507E464E18B54D0269F06B82B65AD882BFCF1159
F7FF892F33994252FFE29F417E46643967EA9F294168AC4CC9EAC1401E0F4211
BA7F59452F69B2A5A9369024FAA44F7519E49920035AE0829AC6FC4816E6F5FF
9BC6F6A11AFC16B5A02588E6949EAD5B7BD3379E01CE4F69AD80C342E387DD0C
C9FC2D6D092526F1E415D20A8B6B63BD497ABCBE7E43EB6CB96D1269069D25F2
2671FAE12BEC87FE3A7DFC8A51F7187E621C1C77376E918F9CC870DB823B12F0
5E7D9F1A8C5CF62B15F76619A819F91B0AA4B5651FC466646315C30F571DE568
8C5ABB96DF11B9F702A8D8B9F243AE58EB7499B16CE7939E0B4D0CAE9C33D97B
E05D5F49B3DBDFDEF6A126308E215155B245E94F3D68CC46360788C3B2BA6949
B31632D3C8335F6BAE9B86C74AF5333EEEC36D75DE80FEEFBC30369AD717C27D
DA33746E0693FFD8C5F29329DA3BFB46293207D9E735A610A2ADA15B19FCC220
EE68F635430F4262D0CDC244A653F7F255CEF0C7921A236DA52C01EC0DD9E457
A7DDF908A592A1F0B5CF6B2A2CB623D2F8DAC20A878A48C71A52D45361881AF1
78272814879E0BA6362949CD9A61DB8802AC> |
!
end
end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.775 -1.19709e-015 -1.19709e-015 -9.775 0 0 ]msf
193.05 201.6 mo
(\016g)sh
202.825 201.6 mo
(\020\225)sh
213.294 201.6 mo
(\021\267)sh
223.069 201.6 mo
(\004S)sh
232.795 201.6 mo
(\007f)sh
243.274 201.6 mo
(\015\224)sh
253.049 201.6 mo
(\007\022)sh
262.775 201.6 mo
(\021/)sh
299.25 271.5 mo
174.75 271.5 li
174.75 240 li
299.25 240 li
299.25 271.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[126 0 0 33 174 569.25 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 168 
/H 44 
/M[168 0 0 -44 0 44 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 168 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 168 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 168 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 168 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&[/^48*mc*o+ori"r;Zj&&,?fh&a'`+$N0r*!X,8&^BO]B"3(>(!!33'
..f'B/F"bh$OZt9'V6)V('FgG!<EGG"dfJn!pou>!:0^c"dpp\/H6@_"MtqE(B4aA!:'f?"nDis"-W`*
!<35:/>+Qo')r*t(4m=q(B4aA!0IH0"oe\7!29Jn"b\G\/H6@_"K`HE(B4aA!7h=0"oe]'!.k4+!<35%
/@@&/')r*_(5s%/$NC,'"bHp;"oe\"!4Mt."jSZ\/H6@_"SW[`(?QD4$NC+""hb*>"3:J*!<35o/:oG<
/H6@_"J$=E(B4aA!6,20"oe\l!.k4;!<34j/B'1?')r*O(7Z0?$NC+l"bHpK"oe[g!65*>"hlO\/H6@_
"QpPP(A8OD$NC*g"jI5N"1S?*!<34U/D;ZT')r*:(9nYT$NC+W"c*?^"8r4O!8ISS"fX&\/H6@_"O\'E
(B4aA!;cqO"l]^c"/>k*!<35J/<DF_')r+/(4m=a(B4aA!20S0"oe\G!0R?^"nO9s/F"ed')r**(;Udd
$NC+G"dfJn"76)?!:0^c"dpp\/H6@_"MtqE(B4aA!:'f?"nDis"-W`*!<35:/>+Qo')r*t(4m=q(B4aA
!0IH0"oe\7!29Jn"b\G\/H6@_"K`HE(B4aA!7h=0"oe]'!.k4+!<35%/@@&/')r*_(5s%/$NC,'"bHp;
"oe\"!4Mt."jSZ\/H6@_"SW[`(?QD4$NC+""hb*>"3:J*!<35o/:oG</H6@_"J$=E(B4aA!6,20"oe\l
!.k4;!<34j/B'1?')r*O(7Z0?$NC+l"bHpK"oe[g!65*>"hlO\/H6@_"QpPP(A8OD$NC*g"jI5N"1S?*
!<34U/D;ZT')r*:(9nYT$NC+W"c*?^"8r4O!8ISS"fX&\/H6@_"O\'E(B4aA!;cqO"l]^c"/>k*!<35J
/<DF_')r+/(4m=a(B4aA!20S0"oe\G!0R?^"nO9s/F"ed')r**(;Udd$NC+G"dfJn"76)?!:0^c"dpp\
/H6@_"MtqE(B4aA!:'f?"nDis"-W`*!<35:/>+Qo')r*t(4m=q(B4aA!0IH0"oe\7!29Jn"b\G\/H6@_
"K`HE(B4aA!7h=0"oe]'!.k4+!<35%/@@&/')r*_(5s%/$NC,'"bHp;"oe\"!4Mt."jSZ\/H6@_"SW[`
(?QD4$NC+""hb*>"3:J*!<35o/:oG</H6@_"J$=E(B4aA!6,20"oe\l!.k4;!<34j/B'1?')r*O(7Z0?
$NC+l"bHpK"oe[g!65*>"hlO\/H6@_"QpPP(A8OD$NC*g"jI5N"1S?*!<34U/D;ZT')r*:(9nYT$NC+W
"c*?^"8r4O!8ISS"fX&\/H6@_"O\'E(B4aA!;cqO"l]^c"/>k*!<35J/<DF_')r+/(4m=a(B4aA!20S0
"oe\G!0R?^"nO9s/F"ed')r**(;Udd$NC+G"dfJn"76)?!:0^c"dpp\/H6@_!l>_C(B4aA!:'f?"nDis
"-W`(!!"(T/>4Tu-isGM!"\9/Jen(r!#5A3!!JGgc347S!<K\1U&]cFJcLB&JcLB&JcLB&JcLB&JcN7[
J,~>

%%EndBinary
grestore
np
172.2 265.39 mo
293.38 265.39 li
293.38 237.752 li
172.2 237.752 li
172.2 265.39 li
cp
level3{
gsave
[171.38 0 0 39.086 172.2 237.76 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[171.38 0 0 39.086 172.2 237.76 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
172.2 265.39 mo
293.38 265.39 li
293.38 237.752 li
172.2 237.752 li
172.2 265.39 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 10 GetGlyphDirectory
2062 <051C60D8A8C9B5EE3176D48D26557C972477309D6C1B0C9B18EC1BCC4D
59ECB7F2F70ED879C4C648ABDA0CCA8A819FD22225C32D84135F5B2E960EACAD
10BBBEB0499D9EDDDEA3C50B8EC9B901A035F31049E785BF32430FB66AEFF3FC
2FEA0DD75AE166B59247E276EECEEDD8D06DEFDE3C8FE6E11C90C0813DA989FE
68AAA1F582A2CAC7E97A19751EA64D4A9A47ED46F758C2992EE933EDDDDC3964
E94EC406E03A8493426FDDD34C84C1C3ADE8A1800074217B78835686201DE471
5A0ACA782A066F6A0396222199F973BC109DEFAA2BCCC985E784E431769315F9
1E1881A3AB0325F381EF2429D7F9447F560BE352EF853137D4931F1F05EEA297
5F29425A7CC7BE4CDD4C3F782F2D933B9441BFCF494EFB800F45D28FBC3F1129
FDF46039CC3D405899A3747271EE2358C967F92D9DA996A45C8A80184DC54B12
2F9166A5295193CFDB9C8D1EA43C2A6F11A9824FACD8F000638B5145F0161A6E
CDB2CD803204562277991A1E31052F4CCFBA5DC5DB560F1C48420462DDA8F7AB
7B6269E916229DF1E3EF695B65DA39DF6B7956BCE412D3FC> |
4287 <051C60D8A8C9B5EE31764D9148904A5733C65FEBB76CD5C908EB809063
A68B190A0246E3C45639DDA629BA6D4AA675998448399F1AAF1F1427E967516D
95AF8BF58CF1E1EF0353A69A477264EA89CD1EFCB9E88557ACFCA41DE09D0D23
AB0ECAD7C61307D3DC123F00207518ACB8D5C6BC0319B3045D19018B358A5BB3
8C44F453E39197C8E18D54FE00E2209699435DBD853B05E526B2> |
3404 <051C60D8A8C9B5EE31764D06A93F85661245C74BD956B189795DE4BE3C
6B9C645C860A486173290E05D03836E3F059BFB35953AC692E9330A19240FA06
03B72D7E73B457B1BBA83B79698D923A06C7461CF44E4E5A4E0822277B99A190
CE990628B6E6EF937F9D9623AE9B0A9C7222AE96EED258713F541E981DE50C9C
C5555952CB420BB9A1FE5FEA2063B3EC9823CD4C4992262386DA06F4F70D2711
A8BA5F8CD3E38897D5F2ED7ED6BC7F07D88F67E22960C5999622B2EF398A3AB2
BA4822B41D7FB3B94D7BB3F076250BC8F947A9B75F11F8CE077C0FF98671F41B
F8F2B8557146BF796DF916601324FE407AF29D686D826DBE90C0DAE16237CFB8
5F4D213F44CE32F8B1015C68986014612AB6BAA00208F1AA074B8A> |
1445 <051C60D8A8C9B5EE3176728E8E8BA6536376576E9FDC5C7A65C4BB1B10
70BE6B6B3933E234485D7C1E70A40AD13FDD8F0B923CD7A7A680AC143623D990
971A424ACD5889B5BBACE790D8F147DE2F8FE768537647AA9602019DAF43DA55
339ECBB5F424EA42FA63528F0FF91A32214B68E4501240B5305DE7EB458ABA86
3C09DFE34434A14527828A02FA0E0A3BEA96402AE5458F0B136C0642BAFE4597
93E025AA2E2AAFA325145894EDEA3FF475931738DAD42208FAB9A16C531634A6
072549209C1E8F453F2CBD77D276AF19216C05081A815581CE7E9C5E416442F2
8972016F794F2FE6A4D139F5240C6C959600C4B127450188FC405D8D9EA88CBF
C1E9E6245C77FAF2651243ADE495BE44DEE9907856B6EDBB475B559F0FA23FE1
D94EE03A1E01145B5937F2376DF17B3BA398449AB77A9FA4C32829F2FEC7440D
F14AA4DCAB5BF7525481A3CAC20F51C01CF79A3A036745BEAB77EA2154CB95FC
60E47BADCA0EE1BCC33656EB88B187AB2239411E292C42D3A21BBC779B7AF9DB
E27A460C81AD7E22DBE368D07A1103C8EED094ACE12B9263C4ABAC5E05FB71FE
431E0AE4470ACF43277CF34F5B083BE78D7B536AA102A43EE64D3D1977EB64D3
44D58EF2A41E> |
2118 <051C60D8A8C9B5EE317668E3030EB8A7130D47D50F0C4E9CD6438A4168
C095E81354DDFE45C41F266C89EC6E43770559B6CD4FA0F5A8B25B4687E93F85
9A6D5545F34B424681B96E9BBBDD58D5AF896B0D5FD61D592EA83464E60D03BC
E43400639FA7BC7BBFF18D9F62E4FE206704F51A259AD9280FCE8C89C4A162F8
E71958A353D21C6C8DE297537CCE2176818A804C7EB40AA6B85FB4E17C71C6E7
6A231F3A9E5957CBE119488320D1C2B33BD3587032F3DA5FC5540BF03BD30D83
9C4F79D57B4A508312A7AA545CB52AEA938CAE9FD34DAA30DC61C3A598779AEB
4B33F7368EF48ED58F4F967BA32481B84AF3244EDB624FC42A30CAB193B8A351
EEDDEC2EDDDCDA72A3631D68CA66EFFCCCCD8E61846E59CCC3A7FE3C8605BBBA
C334238790583872A845D167DE65E405DBA28B8E4AB514070B59D46B6E1B6F70
BA76812AD8CD0F0E0B1BFEB57BAB0682EE2D58D9F2270C987B147214727F> |
3534 <051C60D8A8C9B5EE31764D95066F1D5CD086CDCEA44A26CE98B1D48B7B
B1E6D572F0522DAFFA4A919F046C48FAE3FB8FEFC75E4286ABE127423CE741D1
551390101F27F6EF9B10D2454E50C3DD7C53D9931092532F2FC44D493325A291
581502182F9D8280D0095D9A17EB6E96158D4DF6653A013846B8BF99CE36A1F1
90D2D2CB8C0D7644BE60EC2934EE118B7B2CADA775A766D7B95DA296E12963B7
570C068E3ECB8397E8793F1CE760D14D468D9631B91E33A9A540DD60F788999A
9551A8F452854B9A11EF82705CA5804AE4844F688D3741FFF567384965436872
8DF47D63F9A16CF776F1E367CE0726FB1B81BCD612B2A63DB2286B6B92CC59C8
D8C19B6147ADB0C6683245093B58D94DCF31FB05575E4720F98AAC8AC41D8766
BE34E4280597B752241836CF41CC2CB3B68600B299DE034B473774ECF017670B
ECCA03186093D869FBDDC195FE073F933657925CA5E4ABF12B3DB8E9FA7EC302
AB874409C77C818FDAF78DCCAFC547176D043FC7F4513D2F4FBE3962E22160DC
B2149B133142CF4076F4E77026B4D703273EF75C965A42201B0CEE274850E5AE
4AE45B793B5341B024813B7245F28B82719E9755AC05788D4AB9220696C27DF8
DF5E18BBBFEFED93F4F42616> |
4172 <051C60D8A8C9B5EE313E51193883DE63AC0B13A2DF6E4F4EA620524ED7
527BAA75820CA714721C46E9D572202470C1524E9670EFA09D72F5C7E90CD038
7644ADEA1005658F6EF3194C4206E67CA2FD87BB03B8BC721236A9FDDDBAD26E
1FB11A3057AD0412B0641C68551BB1F3E5D449B0D7A4303B64C5FF9F8CD5CC53
8DE9831214EF7A1EC0D7B8C1C78504EAC0D3693CEE0BADD24C6E1EC00D8F4955
166BBB93201532DAE6D8ADB3AB7EEA6711ABE9ECDFBEE4727378AF01D72656CA
029106D3AE75867D37431C9A650D0836B82605AF7F3C880078410D1CF593C5E8
90BDA0F0B314D3631E00699EE0489C5A466757594E6D2212A475BFC17848D452
A9327E1A5A1C62B27393482DAAD9041B976BE9EE5F395353A7250ADFD2690749
714B35B89294DD35F26037EAFD41DF827A040D03458D9E922F10E84AA5FA8EFA
95991F19AAD1BAD39D75DD81FFCAFFE36E61516225CB17CECCC18A50E649BEE6
80F1279A0160F7AC631DEC0456FA8982F12E7ACDAF2BBF67CCAA0C61139713AD
0E7D6003547636413EBAEDC9D9269A86C0C4965006965B5CAE9B3759543E1246
B9DF49A9892EE3E464D915DC2C14E87A80FE1617305C132D5455E8ADDE8B33A8
750A4839486434B741603586089A572ED5D6366E16163555740F7397F53FBAA3
83885D127A580AC9FAD8E2AF701424E0D4EF327BFACC1C9000F1BEF6B934032A
70576EA6C2EB30ECFB97B2C584D6ADE0AEEBDC898010009E0775A65D531899E8
AEFD2EFB7A5749828A7E1D39357B53ECA32B04BEFDF2F84DE7C714382A6AF8A9
9F8A17A0705D19F8185526BA6175162B1243CC778F83FC2DB79902F3> |
1326 <051C60D8A8C9B5EE31764DFEBB1405A978A91ED439041E0510386A2636
D486E0DD7A0C043C6DC6D7FF44555C144AC460EC71EDFFCC45780CFEE664F294
214CE53D92FDF933A460C044C6359D8CF2A9F4EE67F26D5E2BD15D8154B8B9ED
067C0297A2FCBEB8D1E12C95BFEB186C84E601C134B6EC825133792856C72FD0
3971C3632FF84834B4DD359545D282BE402F3DE84AF6C96E869A48F558DB0077
D2220FF32961F12E6F5319B4D00AC841ABED5E96F3D577C884F8AFAAA2A53584
95E349F746493A65CD0FF5DEDAA9D0D32F8FE5C327E2037F14D46D882B4ED2CC
6BA0F26BF7806BE9286BB01457F4F7C5B60910E4343649A3E675D05D04D31E39
B36F416730D78661CECD0ED1AB72DF6087FDF1ECDD8A2E6BE8A4890C0E337006
53C81511FD4F77822545315EB29E65BD166ED09A88B9926E3BD8C5D3170F68F0
3D> |
3544 <051C60D8A8C9B5EE313BE68BBDDD213AC6292E81B09C9589B8D3FFD76F
93A93F02AD175916F4597DE10A13F89D70186201F6B0F3F6F942C7E77A1CEB13
5529D664AC74850C2513D333D6910A7F397EDD1B8A65829797D8B863FBB5522F
1E414F0883D27573229160F1072E4983D5DBCD712C597CF9C922974A5E3D174E
312939614B9CCB874BB188EFF72E59B8C7A1B009D5C8DEB1D1B211294124CAFC
1B1C3E7B9C69EA506EF7A7CBF2C033F32D7C31B22126E17B2A5A2473900003FE
9A8CBDEE5986388E714FC28B06F0071B116086567AFA86D01613A7174203CA99
B025EB27F4E6D72AB4C5212164441E914BFEB44AF54B7589F6EA2A24530CF3E4
1BC1A063EB759829F080D6567A563BB4F20DDEEFD3FFBEE4892C034FD501B6A7
0F706B66451BEFB168CE5B3ABA89B62C0483DBB732F5EB22CB7E8742B0C4E24E
7E9ADF5F4678D35195E3776AD2D7E744F944D9AD433DBBEB8DD57B723A16351E
DE6B2BA88765802CD5A4AB3A6E216126B3526993C99A501A47AC650EECB0CF07
D33FB28FAB1BDE12DD35C0D3670EB71DE051755BBC56E834985C760656FFB001
5145532167402DF609044B5A42E6E8713A3E13DBA911EFF5F1F56509DCE6ADC5
C1E88EB7C133C57BF6F345B943CC47B3D5F39558964A3BFEC6E88B7AF0C86173
383372CC974AF1EBC6BCD9BAC3A132FEAA2E0C11A59E5D4D5F77DD4002924587
DC09656646B05946DEBCC4A8E1FAC6821C17B407CC18982D1EA9C62F7B34CB09
D1E97E1684BC7C714B5D> |
1605 <051C60D8A8C9B5EE31764D9CA0081CE6DAE51BCF076BDBD3C4BF32C144
ECF00D4E9A066C2A4DA81882EE4F47222BEC70F01A6C4AA441F67BD65A25F1CB
F55C3F70E5F75B8523FAC93D81BCD5A8354BC14ED4290BE7FEE53D88DDA1B5D2
FB2B676267F671EC213D1B98E205FAF375650FD166B2E90D892D5F7AD2D9E61C
232E203BA60F0F564DB95E15467DC1ED6497036D302D36CC2505186876E5C574
7DC0D1FFCC7C842A6996FE439F99F8084B087C73FAB397B28FDB7F8CAE848DD4
E94EA3971FD1CCEB25D429ED1FBA3FC298BAEF055C6F89BB03E37E39D6113C06
D09FAD0C12098A565F65190EEE442952686AD3851269A65F401D3F78087138AE
61BC563DCD471EF219B915D01C702F8887C44FEB509C832623E91E7D08306B45
9C34825347B630F6F3928AAFA46A7AF32EAEA9127FF8FEE16CA6F99727> |
!
end
end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.775 -1.19709e-015 -1.19709e-015 -9.775 0 0 ]msf
178.02 254.799 mo
(\010\016)sh
187.795 254.799 mo
(\020\277)sh
198.274 254.799 mo
(\015L)sh
208.049 254.799 mo
(\015\224)sh
217.775 254.799 mo
(\005\245)sh
228.293 254.799 mo
(\010F)sh
238.068 254.799 mo
(\015\316)sh
247.794 254.799 mo
(\020L)sh
258.312 254.799 mo
(\005.)sh
268.087 254.799 mo
(\015\330)sh
277.813 254.799 mo
(\006E)sh
313.5 343.5 mo
160.5 343.5 li
160.5 285.75 li
313.5 285.75 li
313.5 343.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[154.5 0 0 59.25 159.75 497.25 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 206 
/H 79 
/M[206 0 0 -79 0 79 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 206 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 206 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 206 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 206 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcMDC!sKGW%HmeD!7(WI":P_F\,_*\rW!!%"9F;YJcLB&irB,^
'I<W.![nomWW84_!=BJ<('50Z"Si%L!5nj<!<i<(!XAi0aT-nmJcM_L!WiuWpFH@m'F!e&JcOF'!W`W?
pD*fE$3Ig>M#[SX!sJQ+q?6j$T`BZEJcO:#!Y$2#ngjhc&d#uOK`D/[%i4^O!YGb?PQ8)k!<E>m"T\]+
irFZ2JcM2=!XTeom48;g*Y3r)aT)AF%M\7F!=oIc!.k4H!!33)#ODTp"9YG"JcLB&h#IK['IMuo![nup
`W2#!!Wi]Cp_N?7!Yc(IQ2nSu!!D?e!XAi1jT'l4JcMMF!WiuXj=L9]![\`fL]Gg&!=BFt('50Z"P3X+
!!!$""5a7^"Ju0N!.k44!!3ZP.blQV,SU=%!1!Tc#S6A>m1o^8$EjH5!!*0)g'%Q]!<<+O!.k37!!3NI
..]"N/-6k*!ho\4!!3?6'\4$$%gi@-!.k4B!!33)#M'%["9S\@!.k3&!7q2P"W/Z8/-7:B%H7AD!!394
'`Jls('+pOZ2h?6!<`YS"T\`,JcLB&S,`To'I;rpi[b-Z)%!)=bQ%\G$51Mt!Yc(Ho)O@BqZ$U!aoqhO
"9QI@JcLB&huEf[&g5.E![\TbjT(DC!W`W?obPpj!YbtC[/e#C!W`B+`<?8G",$Z+!2KSr%3@"Y/Dhu[
+VFjj!5/@5#S4ulp_EoC$3?.em/R.f"MP$?!s.3XJcLB&d/X4S)^r<L!\,6%rW%NM!X&uI\eY;W#gNFU
!!33)#Liq?"T\`.ScF?BQ2gsi'IN<#`[h0>)[a@\`W-&A$5C8kp(d]D%0_gno`+soZipL9"9[N]JcLB&
g&M0U&gFM1![nlhM?!Ya&c3?O('50Z"OR4]!!30'#0R23"T\i2TE'QDScAg&*\-A)_^kj7'EZ/Pc2[kN
&%<>G(',$TOoYI]!<WJ'"T\`,iW+Q1R/kD1!Xfqq].E4u![&*WS,iEd!X9)JU_X"D$3BGmX8i;'":*Wa
b67qM!s-"6JcLl4!X0Dhp+33p!\,6#g]5+i!X&rH`YR5C!=oI;!:Kmg":(M%!<`H#!.k3&!7UuM"V`5f
/EeVd-lWJd!!33/&t'L:'Fk95!42_+"OI=o"Teo3!keSc!1<fg!YQXC/>k$#-56X@!6G3B!=BFP(=s<'
'FFoF!;QTr!<WIf"TSZ'!.k3&!8IPU%3@"!/EJDa+VFjX!!*?9p_K/2!>,\-!5/@5!<gII`<?8E!S7='
!/^aX#ob;j/<27_.NT,q!4i.3":c-i(;1Ia%g^5Vl2Uke":(G#m0*Ln".0(?!6tQG"V`;n/BfXH-lWN)
!<)s"":>j!(AnpL'Fb5S!!!,P"g%q0#6Y.^!.k37!!337,4d@D/-74:"oA;:!!*E=_\Tj"!Yc(Hb5h,6
!W`B-P6L7U!=&ar!.k4%!!3ZP.^1JG/-7(2!l=p<#S6nMJen.t!>5aU!!*0)c3:0N!<`GY!.k3?!!3NI
.dJXA/-6q,!r`2C!!*95\e_dk!YGb?jT+?A!<NCt"jmJT"9S\4!.k3l!!3<@.)%7:/-7:B%FtOS!!394
'TNsd('+pObQ%YH#MfQF"T\`,o`0RDN;s"`'IEQ+Jh6=@![nuodf9FN$5:MsT,%JB%Ktqpli@%gR0Cn?
!XAi0[fD![d/X4L&g4S5XXjN#'F!.i!W`W?KbiJ[!YbtCf`2'S!sI*WN<K:apAfdFPlLjq*\-\2Jh64=
![86Yh>dQ]&&8sN(',!SklCAV!<NCc"j@,O"p4n;!.k4(!!3HG.'5&$/-7:B&+T_k!!395'U0BN('+pO
irB,^":*rjJd(`L!<`Lf!/COW"V`:7/:oG$/-74=$g@Wm":>jh(5!A&'EJXIkPtSbScuG(!XAi0df=t"
b5_SF&gFq=OXpP^(^9R4q>^O'&W7F@('50Z"Rc<l!<WP["bHpJ"T\i2PQ6aE!Y6>%pFLnIcR],C'F"+/
!=04U(4m;)()@Mi!qZHn!sFnnY6=n/eGt1$df9FW)_/0FN[t5S&d%n0!<s!b(;:Oc&IJR8!!*-(d05+*
mKEXp!s+bhR/d<h!"UK4/@I)1.N/0b!=0Ci(4m=`('"gB!!*0,V$3.g!!M]iJcNUe!%>`9Jh6RG":>J9
!#1V4VA9:<"TSN-iWXo;ecl'UY5j1T!#pM@\1@e1!Wi?%%FGrC(?cM;'EJ47!!Ju!Qj*Kjm/V_<_Z0`I
)_/`VJh6dM![&*Wqu?a'%?_L.('5'T!W2ou!<h?bJd'p5!X&T+WW7VN!>6H,/ANe<,npOV!!*E;dh[NN
n.l'=$3Ko$!<WJ""ec,""T&1N!3-##!Ycj6/:oG?/-74;$1Ioq$5'?TSe_AA%0Z2$!W`E.qZVQTc347S
"9Q(5JcP!7!X0>dSh./u!\,,slMpth$l&(EJem;\!=]7u!!!,6"d0#i"9S/pJcM\K!X]kph^j@1odg+b
''0)p"Uu0L(8_iJ%gqCu!WrQ1rWRlWecc'W"0V]V!9F1^%N[*n/@mA6+qat8!!*<8mhUKjl4sC4$Jtga
!X-7ARfrit!s.]fJcMVI!WiuXi@KR3r[\*t('WFm!W`W?YnjMY!Yc%GmJuYT!<E:h"igcH"2+\d!6bEE
"V`8o/?CB(-lWNI!;lfu!X]Tu(>KZ,'Fk;r!<32T"cWZe#6Y/)!.k3/!!3HE./PQI/FY1l.NT)G!!394
'[%8b('+pNjT+TH!WiK0Rg%.B!<`J3!.k3m!!3TK._RC?/-6q,!n%)E!!*?7N#(Ii!YGb?aoDGC"PX*F
"Tef/!V$/A!/LUU&g%!&Jh6[J![SNa_uKfF&'Ylh('5-V!o3k?!!*0)SH[[MrrfD'JcNgk!Wj&[^F[&L
![nllhuMX7!=BF9(=j6&'Fb2[!!30(#5&.T"U#&5!WW4P!.k4=!!3<>-C?@L/-7:?$b66=":Q"-(7H!>
%0l+uc2[hH[KXeW!<`J9!.k3Q!!3KH.+p/T/-7:B'%[->!!3<5'WDl)('+pQZN(%/":+]*Ns,Oe"82_H
!.k4:!!3WO.[r![/-7".!j2M(#7p&7UD<kB$K;'0!!*-(\HUFc!X8`-ZN,RWWrN2&&g5p[[k%S-('W"a
gAh9U$5'<Sk8"+5$j<O0!W`B+q?<2h!!DTgJcM2=dJs=P'IC+;j=C?\)[W8>!!30.':0I9'Fk99!3uV)
"OdOn"Teo3!l4kg!0I6_#oP/a/?(0%.NT)U!5SX:":Z'a(>'B'%gT3:nGiUl":(G#!<`K%!.k3&!7(WH
$QCS)/F4nh+;+aE!!<3$"q@7A!YGb?kl@pf!<NDS"jI2P"9S\8!.k32!!*]RpFNR#![SNaeH!;`!=B@X
(?$#1'++f;!:Bgf!sGM*rrhonJcLB&bl@eH&gFk;odg.m(^Z<)qu?a)&ZlfM'Fb3'!3Q;'!<WPY"kEhY
#6Y+K!.k3&!;$6m"VrGk/-7:?$f_5`!!393']BhU('+jKZN/JT!!BJ0!!E9'K)gK'ZN(%6)^s/dk:?Za
*Y4kCirB,a%MZDg!=oJ(!0dHb!sAl""igcI"9Z@<JcLB&nGiV#*\+lT![86YgAmrJ!='.q(>BT*&IPN<
dJs:L"MFs?"p4o&!.k3&!3lM*!YQX+/FP+k-56WM!9!nZ!=BFV('50W"Qf]I!!30'"S;lD"TSY4!.k3&
!:Kmh"V`9)/-74=$.8gH!!33/'BU(k('50["M"NB!<32H"oST+#6Y*b!.k3;!!3HE..8_G/-7:B%]'0G
!!394'[@Hp%gV_,JcPNF!WiK0c344O!lP(j!.k4$!!3NI.b$!N+;+b7!/:IU"q;=`eJ82u$3@C3[K$=0
"OdMV"9SZ)JcLB&PQ1at*\-_3kpul^'Et$-_uKfF&(q^"'++g-!.k4C!!*0)f`hBY])[E_JcO7"!WiuY
h^egW(^8OlK)blY!"n*(!Yc(HVuX1)!W`B-hZX#c"SMhI!.k36!!3<>-M/k[/-7:?$`a9.!!393']^#1
%0lY/JcOL)!!D6b!<`JH!.k3&!4`(2#ob;Y/-7:B&*<kD!9jIb":c.2('+pO[K)`r!WiK0lidIp"U"p^
!.k3&!;?Hp%N[+h/-7".!i#ao!!*<8mhPp9$Ln+J!8%8P!X.rq!X8`-_>o/fJcN7[!WiuWodg.k'F!=n
JcOs6!W`W?obITC$3[L3QiI0g!sJ6"!!E-!JcLB&JcPHD!X08aq^_ds)[Vr5V>pZ!$5<:P!Yc+Ikl?;8
eH#UPqZR$+"9Q+6JcM2=SH&g"(apjT%dX1I!6kKI":Z%\%gT`IJcP`L"Tef3"U"mc!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!6,"h~>

%%EndBinary
grestore
np
158.03 310.39 mo
232.8 283.46 li
307.56 310.39 li
232.8 337.32 li
158.03 310.39 li
cp
level3{
gsave
[211.46 0 0 76.167 158.03 283.46 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[211.46 0 0 76.167 158.03 283.46 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
158.03 310.39 mo
232.8 283.46 li
307.56 310.39 li
232.8 337.32 li
158.03 310.39 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 11 GetGlyphDirectory
3422 <051C60D8A8C9B5EE31764D54A8ED33A3DA786D90FDF50651EA6FEA0D01
3AE245F6966B923081065E0DABFC6DFD884C7CCEF3AFAF41CDC1904C6DBC1216
0F3A7F81920ED1CCACB1811FBAABD7706E905BFA7694247B0A1E763F5F3D0AAE
A521F7E8C1E19E33F7D95BA855F5A837D3656A83D3CB5D674716F90D4CB78D3F
945C03E5AC151E79B61476B3E2C68D342085B65304604E1F6F69D1AF04E8D797
8643E93B8EEA399B25C41D3F7B9A06B5F27B59663AAB0D4DE9A0A198FBA10D6B
901C26269A327D45811FA52186CAB379E26261193731E8A76DDAF39354241BD0
B3CA9C42655E9A62C6AA4E06D21E1A4C5C565678725FF84E5B2168B776345CB7
49F5E9A8093173C6514D3B1DD23F69B23FCA9AFCE871EDFCB69B5073086FBC96
738B69B1C9C4998923D2CE2656171DF620C91772E1803EAE3B677CE90358E91E
9BE38E5C5B> |
1678 <051C60D8A8C9B5EE31762D515C6163D6B0DAC61A7956CB1ABA3621239F
0A74BB93FE1B9AA26C1E7AEC30BD784A7E8E2E97A4ABD1567A4F2635B75005A8
2CBFDF57346EF84D23C6D5947D776618ED247E0E7F85FF492E54F32EEE8A942E
F2E31F083DFCEB3B4EC2643618C9F9DCBC695CFAD432DE0A220578BFF84E344E
F253743E90E7E16B717A6718C8D99992285846559A6599CD83C7DF87885C9CF0
EDF9E7C19FADDA0BB4690F4B1AFD30CBB95B571C609BEA39613675F9F8C53C0C
FB0485DF5FDFFBAE8BD1A1C7C8F36DDCAD7B36DFDCC47CB81D777CB802B4397A
B0BA3F762B8A463598FFC39A617F8AB08AAB3D42> |
1394 <051C60D8A8C9B5EE3176E1204171460F778147EBE0A31B34A84139C27C
36C072DB1CE63E49DA4F557C64B6DEFE295B5F1243B2EC5A9E3D7079946C3413
8FF073A5E9B509977345E2191ED77A44464508A36B908FE7E5C9633916755059
8076D132BC55FC63AED02F41FF7C4FDB84A84013484EC5A63782712D14B16B5F
4B58761DD2272CC5522D267A2A0A8A465AA45A62BE56CC4CAACA96963A8D97CE
E603004FF5C7FE582CCEA965A1CD0445F1849E6E7B43A75AC715B310F7DF3360
E9C944A941930D21EC7DB846F8332667811D6ADB2D7C6DB4CB3F61566B14DF47
420886A1B071CC1CE4B0F03100F41BD163CA43787FEB3F174907DA0365E7AAA3
2633E9CC4DE4D70C24D11B057F82E5749B27215162A91ED8731A3459C25DCFEC
F5EDECCDFE88BEBFE6380FC4623CD00DEBC4B92A30DCF82A6C8A8BEB0F6469A3
1731FA92E2AE6E12B5ADCA7106A74D84D19CEF32801D3D2F73C33B4ACF1A7A62
A9CB899B1BBF21FDA6B0857D0FCEFD7DF0CD3E9634BA1C2BAD> |
1438 <051C60D8A8C9B5EE31764D191ED005951C7610CEEBA380C48D5E8CA1E5
F820D6C592169EA04982D0B228B7DBF2281B415C3F122443C5A324BEB086D817
31C92C5D0F7A8801928F5A572054B2A6F8F00287BEA65F20A69D658952C0462C
727E80823BD768AB1276161C0247904E035DA81CC7880B48C12508A43E39A509
9A1A113D98A784C2030ACCD3247432A05376CEEDF2CB27B256B9602E96E8678B
122BB0F14088EB4FDC914C9861FDFD2F54EA4B874A30133A7937A408C3865301
2E881E11D364B4BE5D0A1FE39AD71880BD4F3C073429A4E2E4DD141058687583
E69EAED5EF9180D70495B4CA77D0C6CB2202970C95E87383EF504D8EAC403EF1
51660AC113620934A3CF70D7EBB535236F294876C9D908B77F67885C8157A657
3D35E9A8C241E176039490E5C8A33212F4133D0F63CDFED4197B521F06C2F1DD
8D2325BA7892895B5D2067C736B9DC507DB1053724D9886A26BE1C9A32B5CF2A
12241632C940BB79F1C3A5A599003FD55C0F4C6A7CD4DF462C7EF4E86A18AB1C
C2AFB26D> |
1361 <051C60D8A8C9B5EE3102E77059DE2D89FA6FE12DBF6878FFD75F4226A9
8A3E5D1D6F49B566A2F146E2E94D5D898610FFE6574BAB0D881403EBE6D2FD5A
E5A4C6582E2522533BFCB6E3D170021934B5B7CF69EAD75AAE42C18CC6BCDC7D
1EFEB29B8217D9E70311775BE65B02E62C2354A9362BCCAD7A001C5ACE161843
FCDD68E4BE79D07BBC1FA94BC31D29EE31C6F7A590ED8EEA0CB81F10EAADED41
43DD9189E289B01714556DAEDCBACAB68930C0C4993A2A5CB208D21E9D2EB93E
787AF6C47D21FEB2CBC972311282B3640697552B4CC35985D5CE34DDBEA6116E
7043CECA075007DC8C959657DCE3A4795706CF513D9501> |
2055 <051C60D8A8C9B5EE31764DEBEE7DEA4DFFE119D9FA9461409C274F1B57
402A11E4E0AE831EE3A5B3112BF5B5ED0C610EDB7129C67538EB02C1E3B46609
5956C2E7A50F3F21B5CCB265243731C6CE8EAC7D8D9AEB37D93F7DC1DE898FC8
88EF80E79EE5AA5D821EC3C660AE8B58398CA8D0A8C22B4220CF2428C4D7968E
D9917CE03E69D011FBB6D274304F9E2DE405D77AC7A5B627154EF558F7140C2A
0BA549CB4D58ECE060F37222918B78FB38C47F9D2BC4CACC9A833763162FF11F
CCE63650D6CD2035D5D747C36C86B78E51F90601121AE51DC41A883A95CEC42F
1D7829C916379631CC1327EF6F78D31C1A6B4752ABD8B9B1C343DB10E414E79C
9F6F2708B3CD05CD429CA07FA91469F289346E7094B2E29CC37C5577B9F8F878
22C5DA590CF0A6805CE1F3029F0A44F7B71CE0DA8DFD4105988BDD43A8D4DC2C
EB30C524F886E33D70B212017725D84DAC4E2A7CF23C1486B6F98C77338C16FD
32B3BC1E176C5F22D3137CDC64D70ECB15D4D08F53BD038B9DBB139A0B445E2B
656ADADD4F6F6177817E33401A750433BF5EA3938D2A876555DBE26FCBA6512A
F1FA6925546D29D59E77F386C26A8EAAEB39F6DED7E2488F44A43A0CA13C3ECF
47B0AFEBDF93B9FA1CE648078516554D0E0600AD2252E18D767BEDBC91DFD8A5
87C45C92917658> |
2721 <051C60D8A8C9B5EE31764DB40F7C941493375B8F4AD04D2005A519B376
5645DCCD72C972623869B03D6ADD2D9954FC9E2A6804540DDE7BC356FA56B296
C67CA3DCEFA5634273C7BE02C71D39D737B18577CA3D3ECEBC5FDDB2C74984CC
D4CB20929B150AF635B40BA6FD8E6A47309EF944E16E45D82991A50F1E4D4143
2E2E60221BF6FA92CA3709306421F9087051E30BBDC1F22B302D1AA8D4F93A53
C78E08A7D0EE03AEF8D2829B409437ECF8C83656BBF954D1EB35D482933EF26B
397F328A1372B65FBCAD720DF7F10058E05D237670550CD96F17B9414C23ADF1
B3B338CEFC793ACF96C40EC7FE7D3AFE1CC373086EC0F63771A7E69045920A77
5D1FF7DA169D66EAAF0BFB378F8FD4CC31971A26FF49A0770F489D24329F05D9
A661DAF3265D6DC23F52DD1F49A7EB9CCBDD4DFF3BD5CA46907249F08703798B
9135F56EF903085A69F83D99B895FD108229BD4594B7EB2DAA318E0C0E75510E
010FD0DBC52A07A6A01A17276AB613C8DA3A1BEA4C53C85342212689A54CDF32
173D0C06B6DE404CE35AF9A43F5563742BDDBF2B0875E7C14BB36169EE28166C
75E7D2BF396B1BCB1C432D2F4BA7A8F767062476A68203386AB87722EB69BE01
F50D42B73D981EA65E3415309FD832E9FAB51107BDA999471D0064AFD5554894
6A9A7E137E6341A6206CDCB0895740CB122353BFB7E3AA00843ED2B4CC0A4240
12B654880FF5924750CC5B2A7CB4AB0328E7BD2A446013EF1804D820C2D2FAD6
A51DB682AE4193A1F1F0123F25D3F07F447DB1852AEDAD38248476FF631AFEE3
B112> |
4672 <051C60D8A8C9B5EE31764DE875DD4297D21E97DF8310CDB68C0B2F25F8
5919176EBB6057C99FE8D22E701AB70115D1342C2148B9347AB47B16900A0466
BA5B4FCF3B3C849228BD6FF0EC4647837591FB4E929ECABD56C4440A2DB72BE0
C28AA38C4712150EF56A6940DE4CC55FD7242B0F70ACF9113B22C91A79652D5C
2290795F8DFD810614A100BC18783F6B40A5409C6FD54E0A54A66136F30966CB
C7435542986BBDF0A2E19D90D3287622118006DAE65F0F364368A30CDCFF7AB5
E9B323485A08FA79B8CF6D9A959A160A58D13F224319EBE249A4DE2420CC8F7B
CF9930BA7AF0E0F4AFFCD51EE660110ED27755810C18F4B4980AEE55D9> |
3065 <051C60D8A8C9B5EE313F8BFF4A00880BF7B9CB0F4D185EE1C2AA49E277
7CE209B6E43DC488815E23E67631733D7ABF804AF55EC1009FDEAF71FD5FABE2
0A0BDDE41927151F83325B59ECE3B4F96EE4F2307EBE4B8547A6D185DA4FFA8D
D54E429A6F764B643680073405D4CB33A62ABB82C4F00F2140D23113AACD4402
CD57D0548DA9E21ECDE5A68853629D3B8913DFCE1EF51CE8678D072EDCF6FC35
AEC72962BB00F217A5E45F7DB92E44ABBA0FA9E2CFAFAAC6AED6133CBD6EF7B1
2F6CE6F7EDDDECF19F4BFA39340EC41433DC57F4FFEC30441E6E57308CBC1A06
0AE00019BEB9794F7DF068456829E78FBEBCD3611FDC0F31869B2ED18F7F07C8
CC1C31DE08A0439BC1DCE3BAFF9DD8D66638B9A60D0B11BE1025C748C2257C8E
07DC29B16BCCA9C3AC3C0FC040A7C45407F148A9B3D3733A35A87E627B139ECC
D7571C0C681C36536EC09D4299D0A25B5EFBB837577FF65BF961B585090475F7
485A0FC59D69F12FFCEA47479000D7CCBF82EDA1A1FDF45EFEFA4405636CFC9D
EF6246B6A795559B90E332F20EC2BB699705D6359A9A08E40AA6A327F4C6249E
C9F1D5B442BED5E2CE35CBAD80D32FFCBD50C4857F3F9D077AEF77462C189D76
16896369EE1BE103CA1AF9FD0BF880D52D522D9F0AD27B07B43220250F9BC26A
9C9213E9C73A431857BEB69ED7C97085F76202CEFEFB07FAB9> |
2850 <051C60D8A8C9B5EE31761D66046A32D4082BC16BE01307CD4F14944EBF
04CB77D00227777886E97438616387E9F516D243CD425C616EC69FC3CCE557D5
BEF1CF160C0BFB424D543606771F4F81489BC6F1D9DC5B45900D991A6C04B109
EF6EFF0102DFB19CC744321A848F9A9EB65A1997AB7DCA45E555368854995F42
F3E867A5F31DC11847D5225AB54C90B30962FA22242A544B1318F3333792A6AF
EAAFACE3BF7F44E6> |
292 <011C60D8A8C9B5EE3103BDB91C700D8590DD29E88CE8F41C7A6E964CD37
22C4FA6CCF56FBDC6FE7C86D832AF41E7A6D1CB7E2CA3DFF3EC594F454006D59
AD7BECB8B2AC24C7DAE86CD5508DE6AD1DE4121F923FB63397404A5ECD928DFB
92F40114F106A63824FE0BC35C6729EFBFF03B8EA3A8491AA630B25B2944F562
80A022BD803F102513B01F4C2F18121770B84> |
!
end
end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.75 -1.19403e-015 -1.19403e-015 -9.75 0 0 ]msf
193.05 307.669 mo
(\015^)sh
202.8 307.669 mo
(\006\216)sh
213.291 307.669 mo
(\005r\005\236)
[9.75 0 ]xsh
232.791 307.669 mo
(\010F)sh
243.282 307.669 mo
(\015\316\005Q\015\224)
[9.75 9.75 0 ]xsh
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.775 -1.19709e-015 -1.19709e-015 -9.775 0 0 ]msf
193.05 319.669 mo
(\010\007)sh
202.825 319.669 mo
(\012\241)sh
213.294 319.669 mo
(\022@)sh
223.069 319.669 mo
(\020\347)sh
232.795 319.669 mo
(\013\371)sh
243.274 319.669 mo
(\013"\004S)
[9.7749 0 ]xsh
263.13 319.669 mo
(\001$)sh
477 301.5 mo
357 301.5 li
357 262.5 li
477 262.5 li
477 301.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[121.5 0 0 40.5 356.25 539.25 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 162 
/H 54 
/M[162 0 0 -54 0 54 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 162 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 162 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 162 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 162 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&jT#<#.\J?5/-R1#"TSN4_A8p_"VCe;!!!/`"bHpX"bZm0!<3A+/@d>3
(B4N_(7#a9%0$D!"bHpK"oe[g!6kND%Cdsj/H6Re#hp,O(B4jD!WE7S"m#pf"J>b1!<3MI/>"Kn)#jm*
(4m>!(B4jD!K737"oe_-!4)\*%FQej/H6Re#_WuO(B4jD!N-+7"oe_H!13cd%IG]u/G:Xp)#jl((=O'!
%K?I9"gA11"P!L1!<3N)/:oG;/H6Re#bDgO(B4jD!Pnr7"oe_b!.k4L!<3La/DMfV)#jlB(:b4\%K?IS
"dT>l"Rc>B!:U!g%@&Kj/H6Re#e1YO(B4jD!S[d7"oe`'!.k42!<3M&/A`t<)#jl\(7uBB%K?Im"bHpT
"oe^_!7h/M%Bh=j/H6Re#gsKO(B4jD!JCX7"oe_%!4r72%E^5j/H6Re#jiCZ(A8OD%K?Hk"k*YT"L8$1
!<3M[/<)4\)#jm<(4m=d(B4jD!M0J7"oe_?!20Dm%HK'l/H7:$)#jkt(>K]*%K?I0"h=g:"O$k1!<3Mu
/:oGD/H6Re#aH1O(B4jD!Or<7"oe_Y!/CRS%K7o1/EJG_)#jl9(;^je%K?IJ"ePtu"Qf]9!;QWp%?)jj
/H6Re#d5#O(B4jD!R_.7"oe^W!8[_U%Atbj/H6Re#g*pO(B4jD!UU&B"ni-""HNQ1!<3M8/?g]*)#jln
(6'+0%K?J*"bHpB"oe^q!5nm;%DaTj/H6Re#ilbQ(B50M%K?Hb"l':]"K;C1!<3MR/=%je)#jm3(4m=m
(B4jD!L3i7"oe_6!3-&!%GNFj/H6Re#lYTk(?H>3%K?I'"i:HC"N(51!<3Ml/:oGM/H6Re#`KPO(B4jD
!Nu[7"oe_P!0@3\%>6:j/H6Re#cAHO(B4jD!QkS7"oe_k!.k4C!<3Lj/CQ0M)#jlK(9eSS%K?I\"cW]c
"S_tK!9X@^%A#,j/H6Re#f.:O(B4jD!TXE9"oec+"GQp1!<3M//@d>3)#jle(7#a9%K?J!"bHpK"oe^h
!6kND%Cdsj/H6Re#hp,O(B4jD!WE7S"m#pf"J>b1!<3MI/>"Kn)#jm*(4m>!(B4jD!K737"oe_-!4)\*
%FQej/H6Re#_WuO(B4jD!N-+7"oe_H!13cd%IG]u/G:Xp)#jl((=O'!%K?I9"gA11"P!L1!<3N)/:oG;
/H6Re#bDgO(B4jD!Pnr7"oe_b!.k4L!<3La/DMfV)#jlB(:b4\%K?IS"dT>l"Rc>B!:U!g%@&Kj/H6Re
#e1YO(B4jD!S[d7"oe`'!.k42!<3M&/A`t<)#jl\(7uBB%K?Im"bHpT"oe^_!7h/M%Bh=j/H6Re#gsKO
(B4jD!JCX7"oe_%!4r72%E^5j/H6Re#jiCZ(A8OD%K?Hk"k*YT"L8$1!<3M[/<)4\)#jm<(4m=d(B4jD
!M0J7"oe_?!20Dm%HK'l/H7:$)#jkt(>K]*%K?I0"h=g:"O$k1!<3Mu/:oGD/H6Re#aH1O(B4jD!Or<7
"oe_Y!/CRS%K7o1/EJG_)#jl9(;^je%K?IJ"ePtu"Qf]9!;QWp%?)jj/H6Re#d5#O(B4jD!R_.7"oe^W
!8[_U%Atbj/H6Re#g*pO(B4jD!UU&B"ni-""HNQ1!<3M8/?g]*)#jln(6'+0%K?J*"bHpB"oe^q!5nm;
%DaTj/H6Re#ilbQ(B50M%K?Hb"l':]"K;C1!<3MR/=%je)#jm3(4m=m(B4jD!L3i7"oe_6!3-&!%GNFj
/H6Re#lYTk(?H>3%K?I'"i:HC"N(51!<3Ml/:oGM/H6Re#`KPO(B4jD!Nu[7"oe_P!0@3\%>6:j/H6Re
#cAHO(B4jD!QkS7"oe_k!.k4C!!33'.$?.1/-HCk!<EnB(9ePW#RCG3#M93>"oeVu!.k44!!!(m%EAnX
"oSE$!Q#,<#QOr)!9=04!<<.Q!8%8O!iujB%0-S1!!!&G#aYes!rW,h!J1@D!K[<+!.Y~>

%%EndBinary
grestore
np
354.33 295.51 mo
471.26 295.51 li
471.26 260.077 li
354.33 260.077 li
354.33 295.51 li
cp
level3{
gsave
[165.36 0 0 50.11 354.33 260.08 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[165.36 0 0 50.11 354.33 260.08 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
354.33 295.51 mo
471.26 295.51 li
471.26 260.077 li
354.33 260.077 li
354.33 295.51 li
cp
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 16 GetGlyphDirectory
4187 <051C60D8A8C9B5EE31713EB8EB8F0192D296AFBA0B2EC7FC64446D6076
2B167F2399BB4F547D259D59430DA61A73D3DFACE807947AB117FFEFB90CD6BC
1EDD87BC6B6C0D4B968E8A6377F84AE26981D0E01F84A07E99EAAE92CBC91979
5E2BCF9F1F7DA013363BB9BDA79C22CAF5E5427718AB4234CC2186B3432880B0
CEC616E8D37A7AF43C7E169691DCA6656D140B97DB9F0B7EF8FAD0E22015D6E3
35F3015CFB92B0DA7F139F40EC790A9AC77B7A74ADAA96460F06561BE6DCD8FA
B914507A33564B5C7CF9BA818389EA8D3E66AFB9E1FA87B4C7642D805DBCA445
7798A3185B65F98F> |
1467 <051C60D8A8C9B5EE310D203A60B28646EA2CBAF71767CF34B1F19FD413
275B92F1D0F05AB3D0C90B6C2DA6B48F7AD5C93EEE5066DD8F2B4E2982BDE3B8
96E67AF1306E63955D15279E3A351701879F385CEFF1401E0CD6749F9401FDB1
4422F8AB09823F5F8090EB1E97D417F49A3A0829D48F8A76EE67B2C40BBB43F4
27542E72539BA15AC5621BA8C966EA1E4664EF569F9F3F870ED360357AE8C1AF
D2636CB1B34EBFD7B5DB4F95F24FA451436C3508F0A816857D09FD27D551E8A1
4B89B75DC88BFBB3F103562934B19740595EC160CCBD72C8A4181622B48B8A07
0DA6DD47E22A0047A5779E0F7B36FAAA64A729FE7FC00E88E722BEEB8CF89303
8AF34C624441973EDA275F134DB0918F1F05BC0027163F208B36297943BFDF89
35234078B60EEB7CB0CFB6E664B4723E9EB8F7BD81AD2DA45DC9848CFC98AFB5
4E45C41FEFE28FF9D219C70EE000840EB05B2194C8DBF18997208C99579AF27F
7110A7614BFF34B281748429205226484265A4A86292C3D35B5272304CC7FB48
B29D99500D2F24772945831F1B98E60EEC1EBF961ED68E5D6866E953C1475423
A151579BEAE63AA9B0AD741F1EF12D8DE0166FEC0F8FF4864F1D5AE84A045639
2D32BF2DAE0658356C2EDCC040B6DA3E7278D2A924B95F2AE02AA248AA5F84AD
E4C268CD37D90DA8D7C42C12C60FEB5722A8A698731E9B7C6AF195A55F022215
6D946458D46E> |
1924 <051C60D8A8C9B5EE31764D4867A63FB274EA4FF425A534351C4E5210C4
14207E085E5C114198409A7EA29AF8B70FA72758E3E86C405364D4425168AF9B
2D50163F8849D96FD1FFF85CCB43F90F3B7B156FED8A37CEEC5C469B1024DF0F
0B60D7FCA4D4B9A21F6B135CE5685D4E762F2FA8D15C0E042C2C063C26718FA7
CEC559B818251559150A5027F6D32BA0AF0824304BD3D88B0BBF2F36CB45FE8A
6D255BDB2A156CF734C76BE0BF8730E2500B6AC63B0E48520ABC9561675FCFF9
517E9958D7F6E9A20B2C5D2D5FD03101A881856E2C1D51D283CADEC4EB31B3D1
953764289A26F96A20258315591C85333DDF26EF50DA51DBFA86C897D0A58C08
54E01A8D24B3E37C1B8B29C52582D17458C39CEB6ABB92C99A42745BAD318595
DDC343E933F5629AAE3DD0121C15E80E01EE4101E466E0EE07AFB7CC348509BA
D33319> |
1597 <051C60D8A8C9B5EE3176793B3C8246286DA9AD987D05C85960C1939B1B
64567625808A111CE167881BF20421A454D8A20562D95DF9CBF956C92E1B71C7
AD71C310E8A06B24D616B569FBC690F6195F3C532D3ADA6F38E23BAD2FAC6D17
E9F3AACD6C76EDDD9B305DE7782CF88746585A73EFE84F1C0A9C> |
4266 <051C60D8A8C9B5EE3176DD512B33229DF3939BADC306933CE3939B4AEB
364090925AA45B4C5C4E85463756BE56EEF66FA3539C7548A7F02970EEBB9741
9E4CF07D1AED4BDD6CBF08CF630E9AAD36D29F1239EFB910C8C46822B6FEF8EA
4385031C32FFE72EF4B643F3D993451F0FD6A8A12F90297BC7FE88EDC691B529
85400BEA0D21F69CABF9F2D5E9B84C480979B1F5FB94051D56B2063DD2662F03
7265DBEB3C74D23D3AC8EEEACCB8A5D8127FE4FFC74EEC0AD20C1EA313A3109B
DD97C5CDE49837696ECA75211FCD93D7FCBBB85E9E196CC3B6287D57A856B9B4
F68E0A09D04267F6154EB2CB3F78B79606C43D593A44BA8BF707916EEAA19ADE
4E46E2EEC2862F6BE0C37724353DC992BFDDAC79FFEEE0CE2C4E2F9AD0BA3E2E
BBEB58467271229FF6885A7EAE78999C71976F945279395CCA58B0A7B50B4B93
15EA4464> |
4014 <051C60D8A8C9B5EE31764DF4AAD459AEAB1EA409D1B4D9310A32B66A9F
0CC50452B63267FA9457E6CB78A273A2B12E236A07CC62DBBAD164169670DA21
29191CAFC8DD6F3173940DC56DA84F4072E56B291C9755FBFB7D218893D97BF1
00A532B0C6ADDEA28C045CEB394C3190F024552AC8165757238792AC0AD3303B
F49A97FD2F04EE807D27594A966FFEE4A584E81024F8150C7FDDD02CBB98757C
FC6CDB6F674F560ED4877C5B0D75DE6CD190128042BA2AF4F304CB5DBFE7763D
98C6FD0DC8F7B456F38B436C47E0A25BE8E0FFF7D8566DE6165A7357D4CE6A90
4A038B19B9CBDE5C8B76EC17E4B7BF423B3C47C63EE60B121636F0B0A0A0EED9
F1106A63BF7E9B4CFBEFEE0B83275B6325D83DD2953C7DA550B7B7741B4B4BE5
D008D987E68233410C93788C9A99B4CE44132AC6A175D02AA059509C56204741
14B1CD7C9CC6437231745DB5ABEC2ECCCDFC61A8B3A59444C47E841035FF9667
46E81A7D81E7267D1DE936254EE639338020059B3EF253C2EDFC04BC0AFCFFE7
EDEBA9E40E8C9F14C92846CFB55E4CF4E7D99D583F35F823899D58AF9DE93819
38> |
1777 <051C60D8A8C9B5EE31C32B46D897F5B1B2F9F6DB722A9A2CFA4965671D
5EC7F6748E085F1265DE364F580765C255F886869EEA5BF093AA9938F32E5D59
0283DC03C03AACEF430312FB61A3784AFBE814CD4956AAA0E28EEC8212044AB9
DEE5A62EB76D1DD96AB6BFFB4744FCCEBE3353D5738550EC0B505AA5A77D2252
137E1F7D0D0BD14EF46AA056615C55861FE2F215F3BE35E0E3F4FE197A5D3D9C
63A06D26381F3BFA9AA2B2787E944836C9C2EBA5DBFE6CB4A7C20BD2F8B50E6D
BC93BF> |
3640 <051C60D8A8C9B5EE31764D63B7D1645339C20802396A4B2B4643C4891F
40C434F5D536475CD6C07B8F510E1214C681B268130D749F6364245DCA15BFA7
2308F3F1C007E483BACE3B605494B622BDE07CF194AC49826A14CE2263B0D7D4
38600FD5CB47A892EFC9E2F8C33150C0D442075CD18976798B306DF6464ED84B
B93EB0E3EE503E451DC0B5CC05D63424F8D538DA50BDDACAC27B8167FCD5B1B1
AD200E300F3BE8E6079B50C8495AB5FA63AE26F5F606F5B5077AFDD9CF2ADF83
88F59BE4262B2186A455857BCAEA6E310F8E5115FB14A3ECF8CB75958EDD31D1
3FCAFC33AE7E05A2FCD9BC42C9B647DBAC056AD08FDE416B1CF892705FF353F7
0BEE44DA5640DCBC02AC745F599370B08B1ECDED7EF8B4C391889F35F305350D
8AA9291D15E625CEA1856B3FE126D7F6E4572B0F273F16408BBD78AE00DCAB6F
125472F059A0A0A045DA715056463DE6EDC86B4FA905> |
1619 <051C60D8A8C9B5EE3176E744A726436B37660550C4CF07000C4BD880D3
A089CAF87BBBA0849096C05F5648043BDFFD80957A97626FE239ADBFFE153CFE
79C68C7A0721BC6BDBDF8BFF7FF6341A745DA44B9F1B7DBDB243F41A1817DBD8
CA2A7AD75A79BAD6FDC6F2CF84CECE4134E3B398D5EA8962FEDBC012AB5DA967
9F7E708E43DC719F45A674AC8CFD81E977F1AD9BE7F98B2EE0658842A0564382
6CB70EFC4126EEB86D0E63E829F7ABB4E42FE46625C80AAD65D65D3CA0548F1E
8FC7AB793F3E8B84B92BA8B54DCB0AE2E9BBEFBD2BB08593320C21B98D28FC73
EF2EBA030C1818CB8AADD11DB9C8B35959ED615D461D8ED04ECD49B84B42BAA7
AAF277E243BA0713329A8BC7A51B2D2D8B11AF97ED5110B4C0215E29DF27A865
09628F2496F2BDFBD4675DC6E7D8E070A64B1D4AFCF2AAAF40CA92221926645E
7823B2D1388CB6DD1823E3100E54B2E0529E916DFE81AE309B0E8377436AAA51
A958947AE035AD3BD660E867FD41FE6D0686E0AA> |
3766 <051C60D8A8C9B5EE31763AC8DC9EB7A8C92C3C2526A94B170F58F7BD9C
2D5AC6B290798147EB3BE5CDE452415DE851371EC53AD6F0E08A8E9CA1E5F642
05549A468BB7867415FFAFAA06B9989E387A77B4828C03EF061C45EDEDAB5415
B9B7C484996B0871139F3ADB31DED806CD6D1016C02EFEB6223885D725AD0F41
F06B2CA416E51C580A9751E144E755B3D746E82C866882E16DA1EDB05C714D21
715525B3A85DD30CBDA58053FD0C69609BC5C0C446F033B1415477AA8E7B34C8
8171CA00C0FB290ED68A299E5F71E56C992068788EEF5EE29149594B7D65157F
D71347F851CB914A6B9C918F4CBB7E0309918D1200BE0244E03BA538FFAEC48F
FA721AF84A6FEC0048A3D66F5F4E9EC6296FEEB3C4EB0524703087F1434EC5D0
A67A731FB59E4FDCD699B3BEBFB1920537B968771A06CF09694EC7ADE884B3E7
30AD8E8BE9F814401A09C21117ABCF514FCB9F36> |
4009 <051C60D8A8C9B5EE31713EB8E5AAE884E135E0CE8CA9C6E0E2F400B987
816B77380635380C850AE65A4509291B08C2DB00795FDE6299B70A15B764FADC
04C19CA2352EBC958EC738C0D34622153862BF57D5BAC1BA0F2D467CBE453219
E492B0565D9FEB2946979FA4C1AE1224D935B5E35CA58F436B2C7B4BD640B858
A995E2373BFCB9EADAAABD46A078822A2664EDB956AE27FF54E980F272DB93D4
FA5D5663F5142B77147551EA65BAA3C7126E8A37C80555A50C8CB71008B6BB67
2D8A91ED674B6BBE17EB23AED61C699F4966A158EE6F4D373B924A797039BA1E
D9A7AD168AD39CE7AED29C831FD076F7B192DA3E57F204B00139649D37BFAF51
7317C4D8604B812982172A3FD421828CECFFC8042193DD2EB54502CB3D561B3B
F23FDAD826A46B18F9333C45E1CADADC4A021EA8FA38FF36A0D2D31376A7B2B2
CB4E5E5E9003E128DB494000AF9E68C0BD3DC17E94CBCE993A1A3C170DE1817A
1DB342CEE9D4BF1EF55D88200222B225AED8D339C98DDF7F72D10E7325F3DA14
7A84F29E5D9F4E9533B9BB8E6FEDD4A8D6EE624C9B4CF5D7D1F8ABE96237B818
05077897AD71EEE16F5245EE94B0D364822F1B654F80E680CC7196C0EEE7C133
2F3EBFDCC65A5F842AC1D0908158E5EF7F579E24687DC4B6B87BCD75AFF2CE78
CE8FE15CCA> |
1727 <051C60D8A8C9B5EE317642AAC0554BD83B61C391970A9F2C69232C3208
09488213E1E0149ACAE2F2DBF5F99472CDFAC0BAAC559D8EDB9E8BF4C7DC2F8A
1189CAFEEEC709C708F90EC862BD709B8D3D4D2C61588E2BF70560FAA8814D4A
9F39246EE14968DA7AED3768A857377C5CE63E5A5A22E5DE4D46AB82FD7789D8
BFB83918784DDFE89B9F140DB8380947F3C17F9EB4A8FEA145337D198AB36770
30AEA58C70002364D271067ED267EE88ECF9C8467F8218E6BFD9809FF536E596
FD9C7791F912420AFCED48F6E239AB6B4038FBC73493315EBF18169AFE78F50F
88CC5E81F79DF87E228ACBCF7CEED392B70BDE63FB69DAD82D18B1B20C348492
0700544FB9252DB1AB6FBA39001867F6F22A07347D84ADF7140A649C8E89F403
42509B0EA90CA58452550492FC67BA839F75066CA0D7710DFE1376A967F6D537
258148B39D58C366E2D0A7204ACE8A178A6E44B44BE831AF0474212B9D507892
2EC5224B9D5DD2B9C845FC0A10CB7FF029B37358F18367FA551BC3> |
4336 <051C60D8A8C9B5EE31764DED0B59FBCD8C2CBEF893715BD3C2946B3FC3
8F813CBAFB7A161DDFDC91E9F23F90D68990DF3A3434FEF5039916869A83A1ED
01F20C9ECEC26126E77CC40EBA093914A12D696DF7A6C53D40C98D816C6DFA00
421AF357665429F349937B6E021D9A393335031C21CEE735EB6CB57B3C00616E
CD1E9A6E4A67D286DCD565897C7E057444D93DBD9E2F448CC00904559763E403
803C634D88B4742C71AE2D9E1079C250F852237E0663CE45A56FBCF16286366E
DD66079FFE0BC6BA9CE8806FB48070194A71CC73FADE519EACC116F944D71177
426D467F331A9AC810E856F8D48E5C4F39A0F36615F72223A93BB1996DD54BFD
491E4FBD7653381C87071F6789355960953C086EAC583331919262F4F3589E8E
08C3F58C4C7CA2785D2AC997917016932A5D7C22F10CBB3B8213B1FE0DF66E8D
C1E72502E234DE2484C15DD90C4708EA0C29AD6074C5C386193B5C73FBCCAED9
4BAAD251CA2B1ED371D709A939B9F55C3E1C96BAD42B71DA43FB8AC5CF6B47DF
FDD6D976DB9E10EE644BF10185F2FB242D257AF0E6642724FF> |
3411 <051C60D8A8C9B5EE31761C3A29C7009DB4BE2A18496336172D0DA6074E
F1DEFD9CAAE92A0E0C60665066FCBBE172730CDC0928D6306885663C38D910BE
726118D775A0D5285EAFC2A42E6C4178455E39E79BEC7867317C15B694E0D206
A465C102F861EDF4FF2A9EF773E24D60E64A40B716A96A56B5677696C687412F
195A84F92593AD04B1DB4D5EF7304F94428C421D72B05F3654C95D02B3265E4F
552B6A7C620C735CC44AB134A9F7991B3AA5ED67BF88792A882850BDB454BAE4
135464D83F401A2C1408ADDC210756D3025A6475CC5BE996E27FEA2767D9BA76
0A6FDF52B4AD747D1C87BEB8066EC60AD8285F664BFB1F1DEC9F970DE1754DC4
EFF692E34F7303ACA941271C91C6355E4A5E32DE20AD9784D34EC49163264E31
7029C37A2F0D111D98C9B6A9760D5F2B59F25FE4D99F191DCB4DCCA07074AF02
D43779279B2D221ACC8EE05BB56A10FE9C07EDF5BBAF3B393E0AA0E45BBEBE40
B7CFD0C5FD70059A23B7662F660C057C5100EAA022A790F37BA5> |
3189 <051C60D8A8C9B5EE3176C0FE2DF5E4A7E0787DE46BEAB1D7F90A3C7B95
3DDEBC1EA53115C09EB7AE295495F45BC514846F1F37D632DC275D4CC9AA0167
1874A0ADE3D73DA71C260CA6A9049CCA5C64AEE7CD3E960CCC747CA3B1454946
23A6A3699A326DFA62229D35510254948A26484F2AC9F14E75D44D8D0A6FA468
1B1181B30784E62BBE878FA6F16045D557B2391BFAAB9B3E988991CC56751B77
C25848CC1285A2E375F0577604C64D9329206DB74E71E6F4D5DF69AEBA774363
315F0D0F6E0971FD31D5B3BB982F3D852E> |
2135 <051C60D8A8C9B5EE31764D6B20CD88117834371E60AF4E1A24E50CED03
9F3F1E94F2F8935B1BFA2A2CFB12865151FC9471EF3E5C8CD318364E85A059A4
F571611D8C8E47B72D7A096F0549C4F6A6F72AAE4A9DE4AAE1F87E846F682AEA
6E96A8DDF692244A27DA2C134E06315F28079B572E0DD1CC330DD325AF70EB8B
B23A2EF55A4AEC4DA42F6315E064CED6BA5C2A73E8D3BD5A136231214381C4D1
66E451956795BAEC5387ED84731AEA2DDAEEF6EEFA8190A86029442BC03B33AB
275226AB02CDC508656D00FAE3190A3FADAB4C6087003A27FF1755524F6DD3CF
73CEC7182C99C7A8878F33641C27D1632479A0A9305B7DBF69240ABE197B1FEA
BCD40F0B48C0598FE9A0352261353D8D9C12AD303C916FB7B94D6FD30D5CA963
707C22C97F6EB27F31453A8A023C0F275DB0D6A61C7925> |
!
end
end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.75 -1.19403e-015 -1.19403e-015 -9.75 0 0 ]msf
358.25 275.049 mo
(\020[)sh
368 275.049 mo
(\005\273)sh
378.53 275.049 mo
(\020B)sh
388.28 275.049 mo
(\005Q)sh
398.069 275.049 mo
(\007\204)sh
408.579 275.049 mo
(\005\273)sh
418.329 275.049 mo
(\006=)sh
428.108 275.049 mo
(\005Q)sh
438.619 275.049 mo
(\020\252)sh
448.369 275.049 mo
(\017\256)sh
458.148 275.049 mo
(\006\361)sh
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.775 -1.19709e-015 -1.19709e-015 -9.775 0 0 ]msf
363.25 287.049 mo
(\0168)sh
373.025 287.049 mo
(\005\245)sh
383.543 287.049 mo
(\006S\016\266)
[9.77539 0 ]xsh
403.093 287.049 mo
(\017\251)sh
413.61 287.049 mo
(\006\277\020\360)
[9.77539 0 ]xsh
433.161 287.049 mo
(\015S)sh
443.679 287.049 mo
(\014u\010W)
[9.77539 0 ]xsh
gsave
306.75 402 mo
167.25 402 li
167.25 372 li
306.75 372 li
306.75 402 li
clp
167.25 372 mo
306.75 372 li
306.75 402 li
167.25 402 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[141 0 0 31.5 166.5 438.75 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 188 
/H 42 
/M[188 0 0 -42 0 42 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 188 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 188 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 188 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 188 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
rVup%L(235!"/T'!!L1FM[0:dq>^KrJcX*s!!B\1M#[MZq[J,ddL?0`qZ$U!\HnH+!!W3!p&TaGf)YjR
XT4Rc!"89IJh5Y-!#tk:!!]SASe_;9r;Zg!lNMkDhus)`U]?td!#XiLJh6"7!$_@A!"G_>W"o@Fr;Zg#
i<=f:l3..lRK08d!#XKBJh6@A!$_@A!"GA4Z5*EPr;Zg#f*-a0oE>4!O8uQd!#X-8Jh6^K![7UE!WW30
Kbh]E!"o/0!!L.BM?Ntaq>c*I`rH)V]e#3q!$_@A!"Jc?Jel`L!"o/0!!Ke8PQ_$kn,S%?d/X.`ZRhLq
!$_@A!"JE5Jem)V!"o/0!!KG.Sco)ujoBu5gAh3jW@Xeq!$_@A!"J'+JemG`!"o/0!!K)$W!*/*g]2p+
jT#8tT.I)q!$_@A!"I^!Jemej!"o/0!!J_oZ3:44dK"k!mf3>)Pq9Bq!$_@A!"I?lJen.t!YGD4!WW3'
Ka#L#!!^+:K`D/k/1cB(bU``<r;Zg,]bZYE!"o/0!!N-%Jd'O*!!]b0NrT.sodk\GegpeFr;Zg,ZPJrE
!"o/0!!McpJd'm4!!]D&R/d4(lR[W=i%+jPr;Zg,W>;6E!"o/0!!MEfJd(6>!!]%qUAt92i@KR3l7;oZ
r;Zg,T,+OE!"o/0!!M'\Jd(TH!!\\gXT/><f.;M)oIKtdr;Zg,PnphE!"o/0!!L^RJd(rR!X8W)JcNXf
!#WR(MC\`Or;Zm.()DK;bSC0jr;Zg#]`jH#!!`)rJcO!p!#W3sPUleYr;Zg,obN,peeS5tr;Zg#ZNZa#
!!_`hJcO@%!#VjiSh'jcr;Zg,lP>'fi"c;)r;Zg#W<K%#!!_B^JcO^/!#VL_W%7omr;Zg,i>."\l4s@3
r;Zg#T*;>#!!_$TJcP'9!#V.UZ7Gu"r;Zg,f+rrRoG.E=r;Zg#Pm+W#!!^[JJcPKE!WW3;Ke17q!$_@A
!"Hd\MA?1(r;Zm%"U0J]bQRtN\,_Bd!#YP`Jh5;#!$_@A!"HFRPSO62r;Zg#o`]pNecc$XXoO[d!#Y2V
Jh5Y-!$_@A!"H(HSe_;<r;Zg#lNMkDhus)bU]?td!#XiLJh6"7!$_@A!"G_>W"o@Fr;Zg#i<=f:l3..l
RK08d!#XKBJh6@A!$_@A!"GA4Z5*EPr;Zg#f*-a0oE>4!O8uQd!#X-8Jh6^K![7UE!WW30Kbh]E!"o/0
!!L.BM?Ntaq>c*I`rH)V]e#3q!$_@A!"Jc?Jel`L!"o/0!!Ke8PQ_$kn,S%?d/X.`ZRhLq!$_@A!"JE5
Jem)V!"o/0!!KG.Sco)ujoBu5gAh3jW@Xeq!$_@A!"J'+JemG`!"o/0!!K)$W!*/*g]2p+jT#8tT.I)q
!$_@A!"I^!Jemej!"o/0!!J_oZ3:44dK"k!mf3>)Pq9Bq!$_@A!"I?lJen.t!YGD4!WW3'Ka#L#!!^+:
K`D/k/1cB(bU``<r;Zg,]bZYE!"o/0!!N-%Jd'O*!!]b0NrT.sodk\GegpeFr;Zg,ZPJrE!"o/0!!Mcp
Jd'm4!!]D&R/d4(lR[W=i%+jPr;Zg,W>;6E!"o/0!!MEfJd(6>!!]%qUAt92i@KR3l7;oZr;Zg,T,+OE
!"o/0!!M'\Jd(TH!!\\gXT/><f.;M)oIKtdr;Zg,PnphE!"o/0!!L^RJd(rR!X8W)JcNXf!#WR(MC\`O
r;Zm.()DK;bSC0jr;Zg#]`jH#!!`)rJcO!p!#W3sPUleYr;Zg,obN,peeS5tr;Zg#ZNZa#!!_`hJcO@%
!"Z4`Sh'j\r;Zg'lP>'fi"c;&r;Zg"W<K%#!!M6\JcO[.!"GbAW>GXK!rN#u#iZ;F%I4H($3C&)!!/_q
Xonb-!S7='!9jI`%@\3@(]b6Nqu?^&fF<EAoaLp/!W2ot!L<ku"9AT*blE=qp&KU~>

%%EndBinary
grestore
np
grestore
165.12 396.14 mo
300.47 396.14 li
300.47 369.211 li
165.12 369.211 li
165.12 396.14 li
cp
level3{
gsave
[191.42 0 0 38.084 165.12 369.21 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[191.42 0 0 38.084 165.12 369.21 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
165.12 396.14 mo
300.47 396.14 li
300.47 369.211 li
165.12 369.211 li
165.12 396.14 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 6 GetGlyphDirectory
2105 <051C60D8A8C9B5EE31713EB88C58A92B10BF0E17E10243D747382A3DF9
12FC894296604C6A70611355F8D85046C7FF839431301EFA0D0A30389AFB4097
A8A3733D76E435AD1DE19C03A1F27813336D48EF95CE020A091DBD039B2C0DA0
CC6F3DD386D4B0EFFF109E9D35CE1FC9E8D16EF3144BF0A92E4C603278BD3292
7A411DAE6A7C54CB29F8EE5BA351DD98A1904A367950E969CF9F17F8F4886D55
37D67A0627132DE95527A8D8A3D733F3E7F0DF9279D2D329B38DA183CE9D8AB5
241ABAFA8E67681FDFF535C95FD3DE8B230840E56F54267B870CC3466414BA37
C89ADC6886DED977EAF3CD3E51DAAC59ECBD9F270062350F528F9DB370E58732
F2CC9302> |
4683 <051C60D8A8C9B5EE31764D5823E1CCC117F5D931005BDE8022D3DA4404
5C0A5C828FD8045303188FE82D51E3CF1D8C1E3175F60ACCFE88B6DBDF8972D6
A0B0DD60B0B2A60DF27590569AD912FFF963F85477C76E2E811EC420ABD32988
388DF3743C47A5E54794AE6E811C763FB9EE3312648F8963012943C1CC1FC332
85EBF56622A84F6672D4E32653A7347FC693DBBB372EA17DCC3911D07903CC89
554BCD0CC69CCB2B861F921BECFD2A24167D3703865BF81677C75520B790195A
30BF0F6FCF1EE66685623EDAEC45C18B702945C2E35EE874EF986EBBF7167E22
39B79C9CE9AE3AC86C5B32F9C8E704677A0CD5EA5EE812A54AFCDA2C398E191C
F8223EEA23A9D08E5C81E9BCEDD53FD3DC974144F1AFE6A2BB79175463412684
5526B5B15C300B6CB59046DEE82E2A3B337ED4F878DAB6B18C1A0B78F89BAFF7
37CF2FCD535769FB3E3F74BA7B9A3B7F6DE6C75CB33524660290FF4602BE1C69
7FD94727F52EE9E420769C0E516ABA402D382B0524FC2204DC8613436EFF5510
101816E741BE2237EC7F5A72102D10FA408665C894D3AB52873FC4027FF21C37
16B62B23D104F65A35C88639E25E48180CE7C9794C93669206F52E78F6EF6B0C
CA7C2A9FE784718D05681E35BA24479CBFD86E5F0F550409E1615018C0B83F58
F2D7DA24D7F887CA03BCE513DC8FDC74D7AD9483AD9D65B415ACF4581C071A4A
0A735484AD0483> |
2116 <051C60D8A8C9B5EE3176CD70DC1805C903AA93E7FAF3DFE6FDA01ED2B7
319DD546DC8B0029095E622BCE15E4022858E660DF55DD2B65CF8F0F73F24E09
93C1ACD196E1BD16A2C41147CF3724428C9F89FB8B04F1D60E39D35E2185B431
5D70CD0F02210B0CC0F2AED66D059509875438E8557391957A21060B96C168A8
B633243F817EB12E41F1C3D88288886898FDA11E5CC468FEC00729C5A988878F
371A17F9702AB8A8D3DCE7564A2111CCFA08085D8B4CF0F58256652BEEA8598B
5E33C523AA20F30ED501740C258716EF2CEEB6B0A7F850CD04E5C8F648217E47
F9793EDC7204A208698ED163003F65F329C6B74B438E4BC413CC715903E8CE6C
AB9A4F20BFA97314331B07D321979ECDFCF916DF99ADA229299EAAA921182851
69D3D118DC042F2EF98D6C6DF53F63284419DDEAA80FFB0E1CAC356BA5568401
6F7598CAD15A41AD48F6AEB33F9C4C311B4F959882CF89D5F84D433497> |
3935 <051C60D8A8C9B5EE31764D487915EA732B883BAC16EF5ACD781967EE10
1F589078FEB23DB9561FA35B9F7B9C83A34A6B68A2C034EB238879CB27C8337E
1059024B2E2F33181D14818ACAF5CD00A3BA09D917498E8E7A90C3B6867B591C
B122DE8A19F84FD0DDD0B2C73FE973A284F9D6375CF1D5D807BBD7716284519C
F8EFEBAA2AB92E95DD86A73CCE1648A894892A84D130D9C363AA48E1F0EB48DD
E8843F4260531CE7787FA4B6A61E83DDC7FA55397D5F90054800FA7A8F89433B
6C5A3A92370A2E0B4371A7D2A183DDB79FE8DD68BEF5BF064C5B6CBDEE77B4AE
069E3BD5E90303C2FA40D8B53EA97CA8CFB730A6F9941B3E7990065E4FD0CD07
E06F4F7F6F6DF0A5F7173B7388EDCB1A9F15C989A92F9D2B21C3F542DDA27BEA> |
2568 <051C60D8A8C9B5EE314FF435697BAC9E7D3677D2B6CC6265F50A0EAC1B
17E751BDF687550A271F7826D474C7D3DC5E3C3F1D0A54DEC70865048D9C5B7F
FE4E341B7111011A524BD0B01C46408B5D3B129F34263F8950473C2474DDDE9C
26C6ACB7EF76E79D1FF343B8F78B0981D90BA1CB4683484A322B5FEBC75C114A
B48219C6D89AC3BEAEF5A543AC04F0E74C26CAACE2AF23916C8E75F6B766B5F0
62062010F6E4721E0B5DFD96BE15038BE4274D40A4E732DA08CEA526941AA817
066705CBAC483952A170602EDEA6DE3360D45F40E3F543E7806A011C1EEDB184
A87D25AA9AAC82A56775B0EB419C4723836849D543B4DE03EC6061BA1F9EB810
1E885121EB6EA54169F94C3CA8614BA05E5E1E82EB8372E3AEF326DBA1ECFE34
405B7ED3F2F8B436AC91B190F99281B2A4EFAA0072B0B4ECBCDDC42C02D58BE1
483878E155E460922645E4AE0E621BEFC6DF44534AD971B68D5DE9F453358838
64957947FAE6638DE298250A2D3326380841D2A7E96EF5C9463CCDC0B217169C
45BAFAAD763BB941BA99996A0B19BA3E1F6CB2A69E34B7DAECBA3D985531AA95
AB177D339FF7B776050E27B8EA43CFFC14A6BC96E01EA2ECB0E53ABE04104E77
7609D02B9664B5E6391DFF85C9FF11D6443E33698800D0D4DB0568CECB31C5AD
89CFA219C27D75CBA34B3E14790DE5B7FAB5C0F9E2E79AB6907033A8B3CFD4AC
1491B1DACBE3A28502AE261E178F42C532CD899E144B1E800AAFBD9185FC5577
185171F6824BC3E36BF8D156> |
4532 <051C60D8A8C9B5EE3176D77F96EE7BE0C190A3FB6A35C498B39D97BC7D
826B8E4C3A236F342ADD4B70BE043F7AB6FE1EAEE2FDB728C5530FA58869851E
BF3ED2E906345E91FF12EB5D400BD8DA6BA6A373D1CE45DDDFB9F136C336028E
66941865F516462A136BF0B9715B57D226FA9D62435E05469394A563B455DD7F
13167759A067C4318F0C86324519A24EEDAF6867192C2A3E09034D2E983DA268
3500E8963D54CFCDF1983360B1522DB3FEDC6C38E984CCF8C6DBE432E167743F
F343527C979DEC2CEEAFA07042EBE80376456159BC48C445A48B8CFE53BECE99
B3621B7AFDFCA618D1795FF665CD6BC3F8066D460953A15710F6501A8D8BA224
E632305E137EA84A6EB0E115A48FCC6AFF67F262B73C62E498551DCE5F9439F2
00EA7BDEE61A83928AD3D48647922A552F4A76B0F8C7A471D439875EE7E429D0
ACF0BB0B03F5A39B8EA2C2C22FE6D9FD3B50156C3FD9F8FD3764BAB217D164F9
73A4A9974A6E2827EBD27F9B21957179C43767F5496E468FBB9C171E7C661514
F48BFAD3D70C1154AB27410E161526363B3CA865B1218243835790B3F762> |
!
end
end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.775 -1.19709e-015 -1.19709e-015 -9.775 0 0 ]msf
173.03 386.02 mo
(\0109)sh
182.805 386.02 mo
(\015\330)sh
193.274 386.02 mo
(\022K)sh
203.049 386.02 mo
(\010D)sh
212.775 386.02 mo
(\016g)sh
223.254 386.02 mo
(\020\225)sh
233.029 386.02 mo
(\017_)sh
242.755 386.02 mo
(\012\010)sh
253.233 386.02 mo
(\007\204)sh
263.009 386.02 mo
(\016g)sh
272.735 386.02 mo
(\020\225)sh
283.213 386.02 mo
(\021\264)sh
299.25 500.25 mo
174.75 500.25 li
174.75 468 li
299.25 468 li
299.25 500.25 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[126 0 0 33.75 174 340.5 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 168 
/H 45 
/M[168 0 0 -45 0 45 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 168 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 168 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 168 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 168 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&[/^1>cQ\Jq!#tk:!"/K5Je@/X!"Sr-!!Ar"^'4Q?`W2/%!WiEQoIPSF
l7DrFrrAT*_&!%UrrL+CQj*Kkm/V_<li@%hR4Q<.rt>>7_A8XWrsJc+lNMkDncf$qP5rW'rrp+fTIg*U
rrhL#Jen%qrsJc+OTiu5rr]b2U&b2sKIkh.rt>>7XVS/WrsJc+ecgj5rr`3"JcOR+rroAQ[4M=jrrgac
N#)F#rrDp"Jd(-;rr]"r[fHF3c7G&.rt>>7pD/>rjqdt(rrA_r]`nE<a8hA'rrr!FJh61<rt>>7SJK$W
rsJc+`W__5rr_WgJcP-;rrnfA`@V$%rrg1SS/2,3rrD?gJd(]Krr\Gb`rQ,C^+>p.rt>>7k8&Xbp(mZ8
rrA/bbm"+L\,`6'rrn',g+<7:rrfG>Ynm?HrrCURL^!e\r;_ELg]7?XW@YG.rt>>7dM@cWrsJc+qZVQT
iW]>aUB%b'rrp\!O=^DErri'3JemJarsJc+T`r+5rr^=BOoYLco.5JEl7DrJrrel._&!%XrrC%BQj*Kl
m/V_<li@%hR4Q<.rt>>7_A8XWrsJc+lNMkDncf$qP5rW'rrp+fTIg*UrrhL#Jen%qrsJc+OTiu5rr]b2
U&b2sKIkh.rt>>7XVS/WrsJc+ecgj5rr`3"JcOR+rroAQ[4M=jrrgacN#)F#rrDp"Jd(-;rr]"r[fHF3
c7G&.rt>>7pD/>rjqdt(rrA_r]`nE<a8hA'rrr!FJh61<rt>>7SJK$WrsJc+`W__5rr_WgJcP-;rrnfA
`@V$%rrg1SS/2,3rrD?gJd(]Krr\Gb`rQ,C^+>p.rt>>7k8&Xbp(mZ8rrA/bbm"+L\,`6'rrn',g+<7:
rrfG>Ynm?HrrCURL^!e\r;_ELg]7?XW@YG.rt>>7dM@cWrsJc+qZVQTiW]>aUB%b'rrp\!O=^DErri'3
JemJarsJc+T`r+5rr^=BOoYLco.5JEl7DrJrrel._&!%XrrC%BQj*Klm/V_<li@%hR4Q<.rt>>7_A8XW
rsJc+lNMkDncf$qP5rW'rrp+fTIg*UrrhL#Jen%qrsJc+OTiu5rr]b2U&b2sKIkh.rt>>7XVS/WrsJc+
ecgj5rr`3"JcOR+rroAQ[4M=jrrgacN#)F#rrDp"Jd(-;rr]"r[fHF3c7G&.rt>>7pD/>rjqdt(rrA_r
]`nE<a8hA'rrr!FJh61<rt>>7SJK$WrsJc+`W__5rr_WgJcP-;rrnfA`@V$%rrg1SS/2,3rrD?gJd(]K
rr\Gb`rQ,C^+>p.rt>>7k8&Xbp(mZ8rrA/bbm"+L\,`6'rrn',g+<7:rrfG>Ynm?HrrCURL^!e\r;_EL
g]7?XW@YG.rt>>7dM@cWrsJc+qZVQTiW]>aUB%b'rrp\!O=^DErri'3JemJarsJc+T`r+5rr^=BOoYLc
o.5JEl7DrJrrel._&!%XrrC%BQj*Klm/V_<li@%hR4Q<.rt>>7_A8XWrsJc+lNMkDncf$qP5rW'!WiEQ
^FZ$/rso&/k8&Xbp(mZ5rrJ5cbm"+K\,`6'!WW37Kd,7q"Wd^H!!!A/&[DuP%fl\2!!LmXM$="a!<N-!
JcLB&JcLB&JcLB&JcLB&JcLB&JcLr6J,~>

%%EndBinary
grestore
np
172.2 493.94 mo
293.38 493.94 li
293.38 465.594 li
172.2 465.594 li
172.2 493.94 li
cp
level3{
gsave
[171.38 0 0 40.088 172.2 465.59 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[171.38 0 0 40.088 172.2 465.59 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
172.2 493.94 mo
293.38 493.94 li
293.38 465.594 li
172.2 465.594 li
172.2 493.94 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 8 GetGlyphDirectory
1651 <051C60D8A8C9B5EE310DF9113445E08F1026BE8B834A885A9B3551DA0D
24A502000A5B455C51EF807A58D7A7F8D3C5A04A91055ED71820BF0691A33B6F
2AAE7D79323D09FC446BF4898185B26661BFAD8A3539A83DF8E35B89683A3450
7276DF38ADA0E684922EA9523E60F56CBE46D3AD8BB03749BA3B005313D30D42
91FD4A48C66745FB47C26AE89D631961B06E2ECD9B9ABC9EF569548AF21ED725
33507275D8A8B5456E26254FF78D5B88B906D4427744478E7772CB86F5CCAB64
1E3B0A2483DF870703D0B1D08B17537D84C654DDABFC6200B52826D0A6B6A059
5D35C8> |
3845 <051C60D8A8C9B5EE31713EB8B9D6F8FEE1855E2B071AA7076B83E2B05C
DC6EA1574AFB2BE363FF4C7870BEAA3447CBC6486F6E10349C60C01CC30D243B
7CD7D5F72B3BF99507F4499F9D08F66BBA8CA07B6FDCD4F7E9557E8BAE04386B
26F3D5C3A2130D36C06542E37121AA813614BC65A30011AD262BA1435824B4DC
E4341F42D87A6CD644000D3A88F9A1B4A3336DDC6979FEB96B54354E58F32F50
872075142B84411B6D4CE3EA328B6F711C8E87045DC3DA9905A0E1D1AAE404DA
9BFBEE6D7156C591DA7E21D3DE64F0DDAC096DF12D26C70676E889129BD80D5A
2B12807CF14FB3684414B75F04D8607E25E5971DAA80DEDDCD20F649ED099D04
F850199E545E64A2596308A436B8AF5E2884D9FB0C2766EA8F5A3938E3C52701
AAC803204701B4BB6A157170B34C32CF09F5BA5079F469AB2D264AA9D85903D6
DFEF71D54E865379402CB7A808D3CAC96E9D53D1A23DF4> |
4508 <051C60D8A8C9B5EE31AE8BFC5B0776B2ECECA4115BB5D66E89876C4535
689C1458502F5338A068C59C31B40A1DD629AE70BDED776956B51D3D02F88EAE
2657BB919FC699D1DA3664B192CE68F2C935ED09BC41AD411CAEB227DC3173DC
21F8E71ADFFE92454B16318D15C83AD566AE8457CF28DBA5911C4C2CACA24E92
9DAB686E827B92E7E5A1638FD798223DE94CC96802CC6C93F5A89F2C89069481
C18B463F8A84ADC60AC4518312E47A6ED1B7475CEA9BB4EC3A801D2729714481
DBCB2CDFB793F9AD86796C9BB5C381286F9479876323996A8DADA8BCC8D64C33
3F63B2BBCA9DE7BAEE002AC445FB6B96C86BE242495C123CBDF5719357EFB6FF
6F03677F8293C89610527EEFCEE716614F9B0BF3738CB7106D46CA40AF572C15
C3E4C8379C853BA79BEC372E58AC0C414647622ED605E13E395EEA66162237F5
B9868AD7E001BFCC4E568DB8B23AAE026232818BC0B6BB2D4A6F656FF89431BC
C4B47B6ABAF2D8E1E2E62B9564BA2D2910716419157393DEAF089FC82C88F408
21199FBB009B78B8E05F5A15B9A1986C7A541D1A8DCCF2A0407C37047E929669
8821D11D3E6AA6EA8F2AF8B217A2B664977DDCE17CE3B131CA3D9426F8213436
CC2ACEF189B702A41EF6E7AD887CA8AC3FF34F750501279FC816CD3620A470D4
3951A06028996281DD4BADFEF5B31C17C5E38F746F9E0718664B1D60E9B5A935
12E6AB420D7FB1DAA48B5077D6D9D86E47B79C6657713E5F6D43B40ED017C8BE
D3A4B95A29CE144B7BC6E5CB0BBE88CACC233EB07851214744606FCE5B4D5DEC
B35EAA0C05C0C94BC51EE608CBA51F0D8354BF56A0FB8049F7A50E077827DFFF
077D4D8F787F19E4146A7EEA93339FB24D561B78DB48845403E8D4C638B4B09E
2048297FAE77A77B06047665DCF35D35057BECD097B76032EAFE03D785093434
364550> |
273 <011C60D8A8C9B5EE31D6D4A278CCF08E1162FB6CC3E907538E34D9D1543
EA874D295085ED586D37CF6> |
1444 <051C60D8A8C9B5EE31764D0B4C1FDEC1162E1B67E5CE131B0972B80E3A
DCA9002F6E600E345F9C9379356ACAA68DB2C6DF058DEE670C10E6E786E0C216
B4B1D09F404A0C6900003B99C550E53D5BD75D6A275573CBCB3A586DBEDFDB8C
F737046D9EE453E0BAEDB4A30089AC58B061D1D20217F5568D66E3F9F727DEB2
84DA2DF4D888FD98CBE16B378DBCA2E45BEF51B1D6CE1EEC6848547948601623
A9C849BA19974E17911911A200E489E63AB2361A1C438C688A22B49B98560E69
2678C2E9FF70164C3ABAE99A3271D1F3FB7BB3E0FE5098E2CA314090D79D4417
33D815E1B857650B663E16AE7981C51F026FEBE9836F721688870A17A9C05800
39AB10872F5FBEA00F81F4971C9363C7DF6EE19B370EA4BA5D114819A5B014FD
105F37E168D0E2444C6C55EBD3110BCEA9A5CB20E446D4BD7B6FDA9A89790516
71F794B3C060B5F508FA562CAE7D2F171F966ECF63C7EAF03CCE15E1132C3311
D3539180FB392D242DCFFBBD540FCDB4EA9BFA821446579331058D145C41C98C
399E287B24A5304DFD9DD722F9556FC89A1A5F9A76904C2C7F305372C6E9407E
24A6BD72FD91310C28FFE8F1A5702140E62738D84F69939DAF> |
1307 <051C60D8A8C9B5EE31713FEAA85370F4F891270EC4500F8F5D7FC5C42B
9CC98C4A9A83718CECCE2EB672D3267E5CCF7152B9EE58F5F759B852F58A4B5B
19FDD8908FEC8019B38C2B467F86BB2FF62ADB41BD3476EA874520A48123537C
22E8FE6C612C95AA8145B56B4897C4D393660A1C67CD608868D81CBF8144E320
ABA222D43DD38C98F7BF1E7CB2B37862CEAFB384F270201F0ECA38B3BC53980B
2B6E017AD924C04B4FC131FA282D25538284C5D35E661D792D856F7CB8F5ABE2
928146C5D096DDB970C8585552EB132AEF68E654933F443D52159163DFF16644
D37C3CA5E4B17AAC9611711AC0BA73AD6A0FF4F48A1EAECF663E0BB005B6644C
6BC9808936D0E4DDA1AEC610774456277C1FCB0F5208E187CE472B589636D9B6
08FF66E1A3363909F7DE0741075E77B0E5960C8B702BCEAA20AFA88022C61EBC
D033E5B1C2A007C89593B826EDB90AAD6EC543A240C6A938> |
2226 <051C60D8A8C9B5EE3176226FCE8AF51BE273BA2E92C79BEA570BA5AF54
FE4436574B15F6A87C450F5CA5368CB25E155D6E114CE88F7DCEAB413A97822B
9F9BA8D17F0389B6199471F88387F5727DC9E8486E45239ABD37E29D36B2F596
CB85A39DCCF496DB7169791CE327EC24684EFDDFB51A3A2E3DAA3CE84380CBCA
B052C41309D6AA6040BE2C6917BD036461C23EF8508106C8136A2580F31DB4F7
9FD22C3D1A77B776DECA73373AC78330686D0AEBA88BEC78D87559C680221190
D7859974DA4B9DE2A27A3E78F4762A45DE95F574B4CFE5789425D5C50A1FE03E
1DB3258BC56CF0B074C689C45564AB5112CFCEEEADE58D90B9A1AC754CAD8A4C
712F41E95E6AB4B15E8547666E587BCFA66B04923D8E5F74FA8946428D042FDF
A5ABC056DDB1A3E5CAB92BFB423424A4E3FFEC6404C5B78F9C9C9A528916179E
14FC3DF971EF80FC9BFE5680B25496BD0D254F773A3E2E80069EBC8BC62BF34E
BA65F8842E0DB6A1BC65C5B97C8349CC75E92999423704A77E703DB9BAA0989C
7C876738B432BF6ED00257812BDAA57068ADEA7B432CA5E4A358CAABDE27A98A
5797F50982C8A175CE3C936FED3800BF514E39F9257CFB3CFECFB56A1B162773
722716DE79932258325AF047553EEE9682585D6C3F2A866A3FA11BBAA38A904A
A10909CAE957C4BC28E724908F8207A508DE6493> |
2690 <051C60D8A8C9B5EE31713EB8F721755E2B5793FBA35AFD01DCA71CC47C
F86551A870F6F5BD722FC4A9000BF86914FEF8C3F5339EEB52F767DE447AEAAC
DD66B7C4D6B1A1E1875CA2D8E05F532C50AFEECEB83569F0038F0DC7BA7D9CC7
EA77D2F5BA79AAFED523580B811A720B54DC08E9DA512146B8785AD22DC20B8B
6F23D80087027B3A2B6FDD5C08C723EEC14D97C68E89CBCDD72FFDCBECCCFFEE
C290FE5EF204E089BE5A0FAC15609888723220EDBFC61D9C83C86FBEBF43E68B
B56489EF6B03F9F57817DB71339744062A614D8DB79D395FD5ED92FEAE22ECDE
F9D3860DBB170ABCAEB1A48617729362F14FCCC863C14AE4E64EE8EBD3654D33
F220E00109BBC7279F9AE994BB0D8583F3EED6D047457F2C3B1997C1C5E16CAE
C71D2B149AFDF5068EEAF0A707668C01F96B06F608E238888E56B8C81C0279FF
1D2806A8B8D7D8E2> |
!
end
end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.775 -1.19709e-015 -1.19709e-015 -9.775 0 0 ]msf
178.02 483.199 mo
(\006s)sh
187.795 483.199 mo
(\017\005)sh
198.274 483.199 mo
(\021\234)sh
208.049 483.199 mo
(\011\330)sh
217.775 483.199 mo
(\015\224)sh
228.293 483.199 mo
(\011\014)sh
238.1 483.199 mo
(\001\021)sh
248.13 483.199 mo
(\005\244)sh
257.905 483.199 mo
(\005\033)sh
268.374 483.199 mo
(\010\262\012\202)
[9.7749 0 ]xsh
1.2 lw
232.8 212.24 mo
232.8 231.25 li
.763302 .517082 .0459602 0 cmyk
@
236.52 230.32 mo
232.8 237.76 li
229.08 230.32 li
236.52 230.32 li
cp
ef
232.8 265.39 mo
232.8 276.95 li
@
236.52 276.02 mo
232.8 283.46 li
229.08 276.02 li
236.52 276.02 li
cp
ef
232.8 337.32 mo
232.8 362.7 li
@
236.52 361.77 mo
232.8 369.21 li
229.08 361.77 li
236.52 361.77 li
cp
ef
228.46 360.47 mo
237.126 360.47 li
237.126 346.07 li
228.46 346.07 li
228.46 360.47 li
cp
0 0 0 0 cmyk
ef
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 89 /Y put
def
/FontBBox {-568 -307 2046 1040} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/Y <1C60D8A8C9B6079F6DFB7BF0F52906B46CE3CAA0E8323C912C9C50CE04CB
EE3BFA6D3DADAB51F1D2B8A33B1B6A50365D1DF565AD1D4D0481E5884AA6753A
385214AEBD7F48442617E767905360131875D06221ACC33FEB7E156BD0E01C3D
31B41D10C6403AD5736AC0D2C01267D72B9EB39A3AC141912D5F9AB1D3FC1041
71790634A884F1C7CC0406B7A6D00B5C3177700460D6FEB100FD62497BF422CF
B493271031B0098EFDDA7C3DFB256C9CCEBEF393DA5E207B273184B7E0> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SDYSMC+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/SDYSMC+TimesNewRomanPSMT*1 
[89{/.notdef}rp /Y 166{/.notdef}rp]
SDYSMC+TimesNewRomanPSMT nf
SDYSMC+TimesNewRomanPSMT*1 [12 -1.46958e-015 -1.46958e-015 -12 0 0 ]msf
228.75 357.2 mo
(Y)sh
307.56 310.39 mo
412.8 310.39 li
412.8 302.02 li
.763302 .517082 .0459602 0 cmyk
@
409.08 302.95 mo
412.8 295.51 li
416.52 302.95 li
409.08 302.95 li
cp
ef
363.29 317.59 mo
371.956 317.59 li
371.956 303.19 li
363.29 303.19 li
363.29 317.59 li
cp
0 0 0 0 cmyk
ef
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
SDYSMC+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B6079FEBDAFCF29D322161AC3F52EDD22433113CAA67ECAF0B
056592AA81FE2842CB172B65A1B8C599C7080F0FEEDF52AD2A1E3DD4CF5B5A3A
BC5E3E3936B6025ECB4BBB9A6B9E506B790F934302A34C91233D5C7DD4480C8E
57FB7AE58D5F049C8795FEC67FB4BCA555E2CC51B9B80AEAE5214780F4B92D63
E63AE746DB94B9539BA648935E38> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SDYSMC+TimesNewRomanPSMT /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/SDYSMC+TimesNewRomanPSMT*1 
[78{/.notdef}rp /N 10{/.notdef}rp /Y 166{/.notdef}rp]
SDYSMC+TimesNewRomanPSMT nf
SDYSMC+TimesNewRomanPSMT*1 [12.025 -1.47264e-015 -1.47264e-015 -12.025 0 0 ]msf
363.75 314.28 mo
(N)sh
412.8 260.08 mo
412.8 251.57 li
299.9 251.57 li
.763302 .517082 .0459602 0 cmyk
@
300.83 255.29 mo
293.39 251.57 li
300.83 247.85 li
300.83 255.29 li
cp
ef
232.8 111.97 mo
232.8 126.72 li
@
236.52 125.79 mo
232.8 133.23 li
229.08 125.79 li
236.52 125.79 li
cp
ef
232.8 161.57 mo
232.8 178.1 li
@
236.52 177.17 mo
232.8 184.61 li
229.08 177.17 li
236.52 177.17 li
cp
ef
281.25 450 mo
192.75 450 li
192.75 419.25 li
281.25 419.25 li
281.25 450 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.5 ]ct
[90 0 0 32.25 192 390.75 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 120 
/H 43 
/M[120 0 0 -43 0 43 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 120 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcN:\!>I$./As(C+T_]F!"-[\b8(6n!<E0#"24rd"oeV1!7UuK.^1J]/H6+X!2p[q
(B4U=!20S`"oeXk!:TuP/Gh!u%K?Ef('"UA#QOja"oeW#!0%!P/=8!g%K?Fs(7uBB#lang"f;J'!T*mV
!89!2/H61Z!7M^q(B4[?!6bV`"oeV@!6"rP/C5sJ%K?F;(=s?%#lan/"l9F_!N,qV!2;%2/H61Z!1Obq
(B4[?!0%0^!VueV!;.n2/H61Z!:CVq(B4[?!9XN`"oeV[!3-%P/@@&/%K?FV(;(F_#lanJ"iCND!Q"iV
!50r2/H61Z!4EZq(B4[?!3ZR`"oeV#!9+!P/F>"g%K?Es(A&CB#lamg"oAK'!K$mV!0&Q0%K?G,(6KC4
#lanu"dfJn!UTlV!9bu2/H61Z!9"]q(B4[?!87U`"oeVN!4MsP/A`t<%K?FI(<I?l#lan="jdGQ!OVpV
!3e$2/H61Z!3$aq(B4[?!29Y`"oeUk!:^'h!0&Q0%K?G+(6TI5#lant"doPo!UKfV!9Yo2/H61Z!8nWq
(B4[?!8.O`"oeVM!4W$P/Aj%=%K?FH(<REm#lan<"jmMR!OMjV!3[s2/H61Z!2p[q(B4[?!20S`"oeUj
!:TuP/Gh!u%K?Ef('"UA#QOja"oeW#!0%!P/=8!g%K?Fs(7uBB#lang"f;J'!T*mV!89!2/H61Z!7M^q
(B4[?!6bV`"oeV@!6"rP/C5sJ%K?F;(=s?%#lan/"l9F_!N,qV!2;%2/H61Z!1Obq(B4[?!0%0^!VueV
!;.n2/H61Z!:CVq(B4[?!9XN`"oeV[!3-%P/@@&/%K?FV(;(F_#lanJ"iCND!Q"iV!50r2/H61Z!4EZq
(B4[?!3ZR`"oeV#!9+!P/F>"g%K?Es(A&CB#lamg"oAK'!K$mV!0&Q0%K?G,(6KC4#lanu"dfJn!UTlV
!9bu2/H61Z!9"]q(B4[?!87U`"oeVN!4MsP/A`t<%K?FI(<I?l#lan="jdGQ!OVpV!3e$2/H61Z!3$aq
(B4[?!29Y`"oeUk!:^'h!0&Q0%K?G+(6TI5#lant"doPo!UKfV!9Yo2/H61Z!8nWq(B4[?!8.O`"oeVM
!4W$P/Aj%=%K?FH(<REm#lan<"jmMR!OMjV!3[s2/H61Z!2p[q(B4[?!20S`"oeUj!:TuP/Gh!u%K?Ef
('"UA#QOja"oeW#!0$sY./,9[/-H:e!!!`&(7u?F"U+l+#O)Dh"oe\^!3#r!%3aLN[3>Sdr;Zg'e.K>*
!"Af+!<EAL#/^WF"2Oth!.k3&!.k3&!.k4@!.k34!.Y~>

%%EndBinary
grestore
np
190.28 443.62 mo
275.319 443.62 li
275.319 416.691 li
190.28 416.691 li
190.28 443.62 li
cp
level3{
gsave
[120.26 0 0 38.084 190.28 416.69 ]ct
<<
/PatternType 2
/Shading
/0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[120.26 0 0 38.084 190.28 416.69 ]ct
<<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
2.16 lw
190.28 443.62 mo
275.319 443.62 li
275.319 416.691 li
190.28 416.691 li
190.28 443.62 li
cp
0 0 0 1 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
ct_GlyphDirProcs begin/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H 9 GetGlyphDirectory
44 <071C60D8A8C9B7C12A0AC806EFEFB6A21E0C132230AA4F70384BF621835A
6AADD27F7AD9EBC8368DFEB93FF60E0F1EF2C76DED489C290A3A72C3058498EF
66BC1648538289B2D7E1FD7EEB> |
14 <071C60D8A8C9B8151C299A67C5CC11D6B75990296E902F53BE84990F9DBB
A7> |
46 <071C60D8A8C9B69A173543128C8D077D69C2B6760C4B44A8A3855FD9FFD0
FA79F379DE55250E13EAD4C85E74A79E4F1BFBCC81C6AB9FDCF1A6BD8A245F2F
8EC77F11B9487B81DEF43D033224216F64C32E6C06CD63E6C5221DBC41E7A772
3E03100C2056D03A3C0368D3EB6C6E3DB1DD46EA06A47E6EF7E9E3B804> |
70 <071C60D8A8C9B79C5F9637C0DBEB0DAB33762D696FF7BC023BF753C1D368
7E2177346F16DFC90399E289CF9B793A4C86CD89B53A50AB0B6EAA93D21486E3
6FF171A72A080BDFAAFA54D4E2F407B44DE36BA285531791D0487DC33F76C2FC
089250A1CB6A81623E69B63C465CE37615> |
66 <071C60D8A8C9B7876E03BBA86E4A2BC6DBB6F83C53EC83745E1B4A3C57CE
690A9B02DCA50F99909AC1FFE57927FA5208C9B74F42AA0E0825761CE39779AF
1D8DEDE21BD5E690721F898D797FEF119F3816E22A28AA57266D0F77BDF354A1
6A9008229C2AD17A740D23C7714080CF6525BA03FDCAD428257BDA59ADAD5A1D
BFEBC81A787BAAC8CABBABD714F838FEBE7358E84C3B6CD7A2681E3854C9E7DE
BCEE9BC04AFC> |
79 <071C60D8A8C9B7C2FB6C662DD67221B2C072A62D5FF03BC3D7BEA69C6E12
4420F8CCF909DDB6CB03A7034D967FDFC16192B3656B384AA1089D0829000D6C
70B2A42BDDBF30D974B54DD9406A7280F67ADF30C721AE0F3154DA27C5828BCB
A57233AE7A214EB0435255937992018E0F1FF8F52D57EF29704B> |
84 <071C60D8A8C9B76A0D4E9270537364BFDF186AF99888615F859196141139
776C0A3AB30B796CE5CE3F9A944F63A934914395CD70A426376DFC2D862CC982
D9C84F1C024E7E47A3EACFFA0484357192BBE6EC94AD6811AB0D588AF4A87756
6D02F792C65BCB1FF0BC1DE1C17B9BDBC6CBA6> |
2314 <051C60D8A8C9B5EE317642F3482D3A2E7AC63D429DB268A620FDD16207
2FB18F96E8CE1D632D77662C7AD8FFBDB45781EA025343A88D9C63FE4C1B4ACD
145C1495D88F68F5CCE775A6E7A2CBFD6D3A61919E4F491BBDFBAB16A4AE3517
FDE79FB7BDD832F0A05EA40E47D0A03E3A197AC4AF7F04849B3D4A4A24C08DDE
A8E65191B5B6D2720CC635FCBCF9B564F5298A438E79B81FA626203CE15AB35B
56DBAD3799FC0D9CF1DEF13B3D54F46FDE366804835F1AF3B96ED2BAB82052F0
514CAF1C282F1AEAF08837349DFFB9DB67B576BFE53C38E76C7E4F3D924DBEB2
6A22CEA36D6B5879CF8980C0D463A5E3372F91B706454BD5D0C431746223C193
26CB643890430FB0475CFDF663A6540161B1EC3D6C0B34B0634A18ED064C1F2E
049EF22EE0FE4F77CBD44A46CE692FB7C0A6D5C3635F1E00A7A34CB39E0B52CA
3E6D19F062AF524F18426EE29F7797143076B5F44F59724087D442A8805BB820
701C9E54B79BD0CEF9CDA078557E975D25C3A8883E2DA1303902A93A9FB28BAC
689CF171B1BB960FAE55A3CBF88A3DDE4542A8966D971EFB8982B6BAC4956D2B
2B7830455A64EE5162525474D2AF123A3B51933F54ED893E7C394A36D124D5C3
DE5150D90AEA90B5E1D9A62436BF60243BCC8119AC6D2DF8910182EFA16C9441
864611401F3D769009B865A4F004838FB2FDC78922CD8EEAEB33479ED9BEDA52
4E259F6E9AD10A6F8201DBF431527178424685D8FC814788CCF75EC5A5C6D5EE
FFE58779E9954E74AED2D418C8FA50F06EA988DC487CEA5635AD12DEE45519F7
D8FBF26E9633D0817C13F16AF9C5C7381FABC52EC49F7AC64F28A28D13A04FA7
25D93F33951D399F249FF77D36063B7C542515456FBECD33E99529EA2CFA2119
8B6280EC670405242E6BA63B894F0E1F6CF2EEDA0C3BD0C1E3BCBB6F798889C7
2ACDD6F20826164AFCD96CC461705E> |
2507 <051C60D8A8C9B5EE31764D3D18C34B1DB7A9633D3D9A69498D67BD7758
8B1B2B4EC7BBC3B26B29CD9E5112B8330F058C68A22A12BF38F098B779172CA2
C3EF46A7F492045BE2EEBF488B208FBA020AA222246BA4A8AEFE7E8042F11546
B063B4CA383926C864B9EFE7233A51A3C29FE7E03FF2B0EB5D5B92BEC5AF8610
E034C73009F897E29F842D81C3AFB47D1269A089D2F4609081F45C66D2877D74
F67FA947697CC847AC0DA033C4C739F3215A3005367F5DB37177484A935858FE
33906CEADF5C933CD6D117CBE1B984B3D1EBE83E16EE17B3A44B2F4B512A3733
29295236D633FA2E80AE2D48264029FF15A81485E613D0081B2A1BF8EBD797D7
8285ED50E0E11C99011C41C05D024D9FAB3C70ED5216B0C953340F12A4A3DB96
4803BE1B594AD7C83B59312ADBAB361D9DB10B9937AFF53C49F4272DDEDBC4E1
BA0F9B13B631EB7F28644D408124872F852DA0FD154F924B281F596559E46D75
C2F01431CC565724CE689DBBA06A62922356F3909D33C72FC83265A6EC668350
FBA760C342D759C4230D790A559E89A8621C3D138571AFAD0DE8C7F99BCC01B7
A1B8BF19265F96B998B69A1EB96B2E77A89E149AAC1B8C9C049BB8811DBC81CE
511816> |
!
end
end end
%ADOEndSubsetFont
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H findfont [9.775 -1.19709e-015 -1.19709e-015 -9.775 0 0 ]msf
201.83 433.549 mo
(\000,)sh
208.2 433.549 mo
(\000\016)sh
212.53 433.549 mo
(\000.)sh
221.22 433.549 mo
(\000F)sh
226.967 433.549 mo
(\000B)sh
232.021 433.549 mo
(\000O\000T)
[5.87451 0 ]xsh
244.33 433.549 mo
(\011\012\011\313)
[9.7749 0 ]xsh
1.2 lw
232.8 396.14 mo
232.8 410.18 li
.763302 .517082 .0459602 0 cmyk
@
236.52 409.25 mo
232.8 416.69 li
229.08 409.25 li
236.52 409.25 li
cp
ef
232.8 443.62 mo
232.8 459.08 li
@
236.52 458.15 mo
232.8 465.59 li
229.08 458.15 li
236.52 458.15 li
cp
ef
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H-Identity-H uf
/SDYSMB+#e5#be#ae#e8#bd#af#e9#9b#85#e9#bb#91-GBK-EUC-H /CIDFont ur
/SDYSMC+TimesNewRomanPSMT*1 uf
/SDYSMC+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 19.1.0
%%For: (keming yang) ()
%%Title: (RAGA.eps)
%%CreationDate: 8/8/2015 10:41 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6=)W0'Q6>>Q"7SO:8gMB_"1&'J9P#]&U(YGL,uJ."-@*o4qUr*ND:gWK#4Q#.^Y(m,J-QoUNBONEBBJpTq%p26[53"P2uB37
%.g_q@mY\&GX]0)dg>"6<B#AM)pf871T(Q"F2j$[VdrED!bN<E=GKER$$H/\g-ppK<:oZA;bQcjA>3ABrDDEZ$qBLHPobN%cL>LD1
%)g]s'2Rn3coUE>:Dfn7/FXj0F'U;te''jCP]u@*pl1K4D^%Jt^A_&[)olL8l[+jma3`7Pg4-B).0iEW>6Jh%bJ=E'K^Klj(X^V1n
%oNKr;eSIA9pUIB\*TR_Ebt>1c<CZnZ2>,C6Peu>+9X?G=ot+kC6(?o@?7(<>At'VW2\Q<!";5s?^J?]t#O&3=DE:4Z70A3D2N+Jm
%@jMi:f?k"j8^YXR4HBCRF9[/W:1[<sRS>*WaTS)._)E6hc6Ohc_5?EaJjJ:i17:fS<FHP7MI@??i8IK3li6bC^\nuKn@/G\;c"GO
%58k&9r9$Il=eWbk2]29n;[tHDP=\4WhDdlr=2fNk."VaX(87HZQ(Ve?P>8DWRV!3%'gnYqdIBVV9&ZtHZZIC_M.\RMRSGTIgQ\Fo
%d&`11goim/\#d&F,S7XQXAjl7aRdl]hVTIFdd]:cO]UMhjfHeu2o?]0!/&&0OQra=0%WTNj<cATescXGe;!lNPdkW$Dql%DLJ`OZ
%m>Zj'Dd)E0XnbQS-O31<)Pg<V!r(7bU:u@\2#:hQ[J;>!Np8LZVHGr+Pfko0a5$01FGm%4M.b8nF=*%EV%[NJ1CWS\P'A8BUmIqr
%BlLHW.e]4t:H<l[ek5;Xm1.:VDY'1<Ja9<s8`3@:$P<^p5it,EmrQ3u^lXOd]M)SGq^ULhb%M;9:L5`ZUBmgf6dlp+0hfUT2];OW
%8tp%IEQ69_!dN(l:XMS+Kk$Rj;oPW0U8M)0\?Ff;c5sE?#\u2SQY$dS@?u//9<DnYl]&6M\@9KVmOe@,EYJ'V7`ht*RS:S6-3LHj
%UA-=`_LIl*V^r3O=dD1h\1L`S-D=Ns$(mAP.$dOnZ"1.<&KAu*TM-[7ARLt:H6ra51)VJEn)+q<'oPni=G3]n,!7:iThM9a:Fh]@
%&m)89TKo>?.Zm#\+d3M#506a%.R%KJ<#ts(0pici68=jo3*Yq^-3^SL"ssMWGjZb887e/)]YZ%`'YHb2"B_I6Qk[3m\\fB])Wh4:
%&t"go5V\WE]L&#Y"hkXO#nNUmR_Y):$=6;(14(bW141i<dQ\ec\5ZoLncQj=NpmBMObG&:-dRI"K/ZU8js[Ah!=c":F+dWi";<&*
%!3a8ti@B/,@PC;s-&Y@AK`IHu!;[CL!=rMT,]W(i&..]s(]g36)_uaq!BbT^1t"0o>?j'a7/VTk0L6:@@=l!MR5oO$F+dUC7W9C1
%8Dlfa_^gt&$)6]/QA[h]J<0=g0O7(Z&SXYG_h0<b6]aXi,i[Mjk`bNKfTVm5nF5ATKb<K<L(D8Ar^l^W!V2cY#_OKDQ!cLQHNG><
%6j<T%<0h_mWIq4/]3!j%,-^-V5VQL!"#;4_l7t8S4'u<2&_?Mf^mIN/ip&9i`8QS@(4.A;PH$Gk;K9oMa]n>R0]\AoTDS[rLEH=V
%q*EPnaFJd$s5YPm,+musj<lPKOE=[k4Y?TmoAl&3TDTB1jKncVr1N>O')>0!:O^GtnlbrfIOOGNT_#CBn4M8uHknr/s"Hqi?Ap6]
%V$]Ifk;?8><)TQ?>5h0[`W)l_Wg&O=,,I7KS7(;k,T3Hm846*)kT0LgU1,!g?\YJW>eX*e:[j7Aj!(F8V*r:j'U?b;o9iPa2ctTZ
%e#7XXc(lh'-s9,?$.:6u5(a)9$Kb2!cmn[>'Fcs#_LDu?O5s<7k5sn99HY@rK3-A(pQqkDo!kXnQcRA=;)8sb*?Z_/K%Z'IaWDR&
%=U?q[c(f9?&X"&_gSK.O$qZs2RTt[uPF:E&'iIM7\qHP'kL$*pi6`NQ`Ygn?1;I6874F?27["u?8l3YZ_;I,l=XDEIJsduoH6k%t
%(G(X(V/YI*%&A)(11BSR?j,b>a`&ua)d3^G("XPB:W&P*Sri5NB]NqW_N\Kk\4RZo9F;OcBNYMSM19'p0GF[m'-LcRW9.D!7p%2T
%-t.F\coY2Uk4R?9.'IbsCg((U!GtBrlG#`a#g8Kb@DgO0,cJ5_A7RehFb1/qbDJY!e-Ar`87*RV.V\O5G6PelnfQmS?5fbqJ+=K%
%J(,<n?D&;1#l=W6$e>T`Zg\Q7:B1P;#M,=8Y!Q:(`9:>j"=sRZM%S*#hFm_FEFf08!""U,,.\o(-1<YL37+m.AG@uU[PZnEh@no(
%i?'0O,EN%-"Rg1c$.r$'_S?=C!j[u>;Q+CLK8rQ'0F>N[@`b-/i8A%0`>'akMuPR%*f*f6oa<:0ckV:pHcGr?J1;Qen0c#'Dc),j
%!\4H&W]!TV^6=\I.>uH572%COhJm,"XtXYH3a-UW*k4h1r!+\oIMTC&VD_+FhC*Z^;#rM,U6>9?%V'+*9L)iH@GMObd-NIMidbAi
%5X\'s"Bf/%0WM!)]MVTmb^oV"a<qfN!<PMPIfsWYG8[]F0PHgTBaCA`X2D^QPF401>R<<LJtLsi6o1s\G^tV115nV8$2MJGQ/tMh
%mYMK@A0NY3'(dF[:F[[-AQ2%K@1+QJJU*BjAMb>p,#9E6a-4r?MgUU!#q,fpMjK57=Tn.?+Y74C(G$51KsKbqra(7?`o2m/'D/?$
%W8\os&dh;2"<L(5aXkNu5@U6-WY+IsYB-<)'p/o<THNS`6H0<On/o)\V=W^;A->(DLa0c!;^1dAeA^3CCl7_+eQb\<P!C-D%RQ/.
%s3`!>%elp_*D-qn5bAcMYUiD>VMXLEL]D*<DF9hUM(hD/@0k9qo0ct0;\<sirpUt<6uk\=[t&*/JP9JVM?O7?1m>q3(O("RbmTJe
%%%AprGt]n%4>m4@M2\t4BsK`Ei#)BI2-5Zo0R!V5da"ngl:bNG@lMTK/f798\&H_p%"&`1Qr<*;rR%,(<;qE??#e?Hf^m:=k8-#i
%qjNMAgnZlVlZ:oV1A8_sIc\@!'._E(OdBZ/7>Z2'_SojY,JH)^hfdc840IK0N@-m=IB;1LHfKA0+*o!oo_?^JnCm&SO,Z/KqEC?B
%>/P7EWmfrt_q<_Ff>hb&\^tQ^]^2KT$.:_ZJ_J$1q;0m'<9b)4'gIdMm2>bD)WQS.f&T!6%Ih,HYM\GN;ngfD^d<qtRqOi/Pt,)\
%4.>lRae\*r':DstgZ*N8j,#]Q)7MX4*6EH,1ZNauf_L@f,\(\?oZ7Qs/`-(,SP7)Bo!-JRr)79mn%NgphQSq,ePf-M_8"T9onT;V
%m/?,BSK#RnZkO0126Il;ZoTll"BMm#Z#P7O5rE;=f^uZ#A;5Wc)tC2t43qopVcIFgj^Nk1QVOkAr*?daefVBPiOZ^O+(7WT1mDdK
%!=`4rcE*'sPYT-6Y??cRFl;Y6X8bfg&AFZZkmS6K@sgO9j[kMY`G4NAI.PeQo.Y_t^)SX16\q"IoiN)57]hmie]Uk(6W332FE+6-
%F"!;&:Z#Yp\3nci3N6sm.\&"=S<G[u9D&Lqrj4WPs,<LEqLB5<ie22?jVpYM)lZkj4M6+bnH`>YIXj,\h4MVhUuRb#T9c3pMfdd<
%)JNW![('4.":%GsF/3qRY)Jh/Uj>1%W^f\S'OC@,1)pA9OE<H+`CJpT7Z%NtTnl[Og\\A`?P$Vh8C\UBBr2fp9WI]J4J$"ir"Qp>
%r,Q'iL?lcTo6N/2E*;WI66tO2!>CpmYVUkuYH54tnE@sh;:@nVBcf(-A"pV0_Fo6ZmlboQLp2aMoNq,FmeZ+6Er_?5F"t@l1,Q&B
%De&ArabbZC^k;e)1o`T'c7,VLB4Lijh5p?`k[B_uc,POVf9,6_5e]<pF5C-(1IWShDn)tE]`!CF"MK@VQ;0OtWAsaHH=W63,>5;&
%Ck>"Rj,Zm(7Ra+fd8k0*[-4:5Dt0?a4@OD_8+F?bqBbQP`"1o5aL@4(&reNhTM_GG1?^lRr[3on5D;Rp68P:^Il-.!qMn:DMPMCW
%?.SnT@>jm>#BGkVc(JAV_LD\)RO0^Ts,gu(@g(.22ncOT"@T--#gBth7G)=/@o>S^aA,ea^c"#Di9qpb5]Su=FTQu@f]?<-l)pT.
%Y<KL2k?ZiVn?"3(e6CCGDkW3pKS]an;Ll.$0LHVtEcFhc\4A,n3\@e%>_HeWpq>;L(AQSDh0V:'p!q^3->8@9%,*iu+=<3^0Scnf
%+CuA!#O&rM5iAa8Hq5BT4#d9-8IC+,q;CiAPdLJ:A7SRirD>;r1YMV@1@\F0.Ua(*8BaG;^jnP8QFZjoKsq"QYAJ'Y?2YbM8,_:T
%TV;?=?.e!Jd#C(!D0qg;GP)V@hR9@F;H$t^#&":8''Ob6>l_5ul](uB7iDtI`G9DE7Dl[)oqn7B[%\V)9%&T12k@ll(k%Is6EGM[
%GET`_&dnF['(Pm_nJ6jOq5)5dO?K+G]n*ruTDnRLr=AqSTDmAjpZI&'?iL"RpfDtAQi@8tU\?@'gK8BfMm_DIUpZKO10n<:L5$p-
%-G^tDR_WI$4B#eK:niOE)Ob4K&//jm+]4]QZUM=@QJ"m#MUQPlcGno76p)>_`A@%skEgE:?At61jTLjAZ!AjIq.1ZB7?shZ9u.nk
%bMbZ2O.a5jSYT2+)ZOC44SgYV7JnZp:)Y;#Yehg9TB@"Ier2<:!racCIBaK=ro-lYr?7\$^Ie'a_QQQ'S&Xnqk^Ng:jeY3:/YKj&
%H7e..&lh=OU0$sl^L`c=<Q9Ga\@ZdmS15o0M/p8QQC0L6VFm+O\Pt$n98-9XPUWG%WD^$d.)ehqM(-ik9!MVP'oU$t0ji-=e&>9@
%=\KOi7CL:1H)!h:PsW#X.MN8E6GAO1U^JVkC?9KH<(>E]KlXnt6,046\Tb<.Gm*+D`)0(c5ej6N4;r3%GXQ"JPna'hU>H+MNT4@]
%rA+/77_\qY$N;X;EL!?)_<CI<#h+$_BF_mM'6pl<?5E8MpMMks49B/[A^VHLDFlb2+QT3S.iP*^,*Rj>8MHWHi%$8h8(`u"0N9%N
%%tiJbMPfSO_F#f8:,?^<_$*cSHdi`lK<GFX[T"/F72RV#rd[)*ktDF-#)/.&OTo/7e/)j#]J%'eN.u7a3ZWu#k6u)UQ,11()>&Jh
%1CTgFVNX[l^0t#+n-qKP`=kR808"FXd[L6-"cWM0K:7:p!>HkAd.bfdh`D'igpmX[hDrAukMRt:Ni"'ts"?6]^Yo%;6N3e^!(-_l
%'M:.X&_W(ZQK)QKR1B)mS*bU0SStt.c$$hSc8XKtSaEWcCkqt$45Xl;S*bU0SStt.c$%lT4)kA2'E;Z+he_JFm<l72Dmo8^G2-^l
%#m7W"pguVFD!.;TI']A^[e%aegh/]?"1FEkAinmdkF:jdZ^l$Co?DI6B0.OE[ZgQ"45Xl;S*bU0SStt.c$%lT4)"f*PQ#/Uhe_JF
%m<l72Dmo8^G2-^l)$@=2q.;_GD!.;TI']A^[e%ae(1B;9=']@X1Uut&qQg^!9ZN0KUYgh$P;`l3[_pKHk`).@#+RW2*aeREj$"hR
%VnD3^ncgbSE;@N0:\]$bhL2'cIR>@PSpDKM-u[^i*aY#(GDMC#l7Fh6muHQIDlgmj_Ad@d&-)GirgSE4GQ5jMoap2b`_kbJp]c%b
%l+24M@X1JmUlD:/6&udR!I1B$?[2h@XZe[tMf#-]HJ@i?WNPm6TY1.@=96r@s7Hlu/'+KN`oIQU:3r,'EcpOg6:t>^7CP4E+qI6j
%4>c_<Lu4uI[,2ep+H0Gs)'I]her5Gm!:mtH?3`+PDt-&G0CDS2c:2*bi:2gdnGAkC6j4d:l'1YEB2`[\"N3c`o/tq,7r?8B?52K^
%n%F1:kCu;P`Z%!-TTUA6bOjtb'-7CeL6Lc'/Uk!XG50T%mYOi.rO(1J8VQ->`1Z$"OU%SM0Udjpj$.fc[<jlO$>g#G#c(PWoF/XU
%#.To:_gdKa,.:u<FO`eVUWt7=[5CO\W1->_4<S<Y5hK<,?E;oFD!_WmX8<]?I-3m@ql>.N!+l0I8.P7XbU1fdi"&*P<f3X)8IL20
%i1YtRfZ2KkN.$<_oLBkH5Hh1OH2[+@JD^A0./B[rlhp>tj$EgOfHo/7RnW[f??c6`CXn-%IgFbfe!aFbm@Ak[E,A<E/Gb-h*G%7;
%hsKg[IkpWkBkomsrugo!Uo#gaRE_WmRNf#rKR98QS8#F/2dbe[,=,_cGVtr[*=aHYr*tNoLpR%'`\HDKXY,d=>Sp.Hl+sHF"TsT5
%S5YXf[jpefZ:X2(Y*I$DZg.(%mB0*Y1C7tLQ(g[`>T`XC%CG@/i5CU)U_`hVod8^JlfVu?rtHjMkC<FPs8INIs1G"<h[FiP1h:SE
%$4WC=8P2-qWFgC>UA%<`Im(@g*KuW88!=u&)a@r1_'o)8SVje?&0+I9r3SV%n_FiPg7%]"b.PCL@MoSD%3Y4s2!pQE>PMfXmn%<i
%2J^!GhYLmo2c5>&!A@?Om^O&J$H7_&3hnklI)RF$OH!K#Y1u+,^n<R\e:-$7pEnUN:<''.N'6u(DgjSbGqWB@JUHp)`$mLjUb^dU
%h\o80/TPM&)rKt--ZVMP0.8huNB&%C*R+@3R,NE1"<nFb]q<2>kArJLU,GLSE+h\\/HOS^%\s@FObAQIBu<8D`nQfgP!R.%aU#2N
%U66M)#RR>kM$0;%DOEuSjJ6X1=dYOL-'fd!:t3l('TeuOCmpX3MHF%u%=`4hY2n-/<<0)kgk=^;jh04#mo+VAC9-1VpSK.s#9Nln
%J+u8-oIp3EJ,"Nnma(q3J,M4=h=\40OPpl3$#Y4W<RQPR,\XuH::\KYKUE[N]Q1kjEDo]6.d+/&(h&Xt-+Ou6h:7Sm[<W'FjS?=9
%O_:WrZYo;+Y,`]L]#>$IC9UA]R5-9s<@i3Ac:$nFV-jM"q8:@Vh\Q;DA:[0FV,a>S#e7=4X%o]Kal7DsM6]+m0VY;c4S>>I4DdZS
%<2<T06^U1e=u:-8.&O+T8*i((0IdV(;l/%'nrQG]Z8@<&[Q&%^Qm1/N.hJ:,7YMac3BnG5P^3LCY\;WDK9%D.WOP7!8q/\WQ"uj[
%;c+_2+@@MM+]A;f.Pl@>oe:2]'oam]E\]07h4PI@6cO:Zcs[5_[>><M@Z[+p^.u2;6j1`bY)%b_WJtbJgJr&M-HXV(b6#R]Y=^-9
%S!:=kPOT4NJ;_3.$SR>J-bZ\rc"mie4YL:1Xbfe=8l6/i<Lf[m15,ieG"YUCTpLX+&ennK$BUe.Je*)9\#j(WnrEFTOtrC;7@^+1
%[Q!F_`WCg)N[gk\p8F/0i:Ucb*._Vr-FZsi)P*n5A-t7Bm60soZJDH3KMn3@1`;(5Y2B?>9s\ri:6U3eGaP]kD!c:t*.Ks7Ekbt$
%S^GfII;(02HMg/48">j[5uXbimBOhg[QSko@jW%&<)3RZ98Fq&[k++B%F(YN.RcuiO\3[]UD^G<Me093hB.YRhWS%$+2\])UbbgS
%h*tP$a5U+[=.GVrgMZ[!I,1`j:;8_WOsuo1r9f8t<?m2$)GR4fik&Gs7mljec:1b*F-/GSTQ,c;fjRHJ^!`l2c7(*p@U^FSFqdNm
%rHVYrQJsn-V$RConJ4P@T=o4`J`\be*jrErL3]iWT<f*Q'h"K9d`(&g9>S9ZXfWf4"NkI[it1N)%L<2[!8MOR7W#Z@h[<8HoRKGt
%&Q/WpU'1*0V[80SmjP]QT6X=*YGa%mMtBb#76o,s5Y2-nQNt5PlYB*d_^uW)`JO_S?)g_;Y3`^7nZGjh0dZ-aU_lrS@O)&<\"LT[
%b,ER#R>]5Q/-94iIcW^Oh.3=?h+iY>kBf'=Un02%=3^r%l8=.0HAdAo!@QK-;`8WHoP:HAC=Zo:KM!3%E$Q)PDf:G'%Tn1i--/Gd
%&/D2*B_p$E-6#NRZnqLQBgErs^$20njjj4,?Gkg4_.U.2kIBsDoeee"E(KpX^detDP'(H@(8NLO5V6H;er&P.]r9((I0iWH%ZjNt
%6Wdt-Pm&PaI^DaaD0W<2YZd,GW$bP@=@2CS)KuGMEIVYO>iW!ck(t=7>X`SUa(&F(B=?6eO>$Zg@5O/NGr(XnOpV)P7^\HcHsdN1
%cq'g?1,ME=f28*.l/MmreJfXf'8:Orp.A(MA*)>V))V7"/"^G=fA[N4YrdD4;iRc+rn%2L5Q>[%r_NR=hu3B>rnB[9huE7Cs6eeD
%VuQ($buYIF)QFY$I!6S_N/^J56^9Jd;JNomc"YAGdiBik/[Z?>Voqe\DaU@HQ8+R.g;79\Bq)WnkdB$OP+IJc0d1)R^(d>KR/+;e
%q'bTGM]t^@6&]4Z#&pmT5uEJk+Si,a'(H[2>Fb.O7m)$SCJ<Tr-!q76I38!/,An!D@UnAu_A"_Da)=grA/#B-/mC/D=DS$S6)c`b
%K"kL5FOD'$4$QH\*%BAT:/'%R'q->+9p./gB8MqUh\t5LLJZ?6!gjF;6guEX-0J*@!q+Y5E#FuioO"k+lr6<`@+q*mqb,??Fikob
%!OA;O:mhS'<eWTI7*Q1aJ8We&H@]'VP,jtZg+/t+36,^Apkd[eW[/ER%](X<<R/dfY`_$"OL5cIYu+[GM2fBpOm)26fASR?m9<CT
%;J=:hNeXFl&B[^ZD/#?BHE/nhe,>QtRk<h,$+h=%S!P"5D_8qR[6Z7'l$5h*D2pt[&FlTj7;I;ig1s7ne>I\mi8hT%Kp9R=boo7[
%<f\CBT=dY)m:hHSoXMa+j/C\G_GY^YU14&5)Nc^%qDMF)TV0(UVt17tIR.F[[O@#8TR!_KjDLsI8qW;%EQ=$ti"?^0ji8[Y1D<=c
%Q'fe8(u9Xf7r"j,;(YR.26Bsd0mo=[fO-_Lf^!A+0uGS@85Q93r3G6:\5I*%PhZB5%8jX&V%/.-?j6K8*4<egTsmQ&YpkQ"Dd--[
%G$q1=Jh!me.eT)4'`qB32KPn#<I(jFdU&cWA0g7-l$DfBY$^Ae=&(6E3fk]>#;J-`gDY6h'5GuPBi5<d36q,k(-YL&W("oS2EITN
%SU*3*PCP?2\GJJdXk)g`flQ?!%9qk<J6oX4j\Cs#g)Kdsr1"pMhV=h2k0jHj_.6(>),*;CkkQM/&!UFP)(0o64?Q:b8fSreDE5(r
%GY*U0\*Y"I$_9aR\b@N\n!Nn<7@'2[>Y+>QK,ljo4Y;n)1Y'h*qW2%aoL_"7V5I"#mkX_,gLqX6qmPor)lO]_W;<n4hpd(J:?3="
%HLUIA(V9?Jq*OtNqkUkhYRuDP2u)UWeY2Jf:q/R#J>^L;H]jtSp)Ds6]q+%"-[`nk"mREu@5er>WdfEpjU8hQe50N"(q`4'S7QDA
%,gW(Z2EAA8$T"'J0-!*)+C)V:?0Q[a(N+C<TJ,NK(T:'Fn4a"-QpF!k)h$-?*Yl7ilkZPOVQYdUa!^-*_<qn8CYb8GNs't[%joBh
%EF8M7q9TpL8(')c.pqf-2%AH.@3c.dYkQiF"fI%q(#*L,0tmq,`l"/4Y(0pNQq)C$qV9EH2EpUlkU(NQZ;9#>>]JbMns:3nr`Vll
%.N4ePX%[EEp5D19qc%d?;%b6s1?&&"aY!PF:ENN?pf.<<X_9Osh7Q,2YQktq!3/U$@5-m8jS5Y4p49Gg<Spi)_G!_d?K7g(X.`Co
%chp`5rCZKX4e$P9mj7M34f3=JI88YNNI%_/pY2s"rEa\r&#bu>qJE"15M_5\s*hEOE2;*$BVuO$2<Zp.^4(EYQB6Fs.\PubhRKI5
%L#fd^YA9DaoZ!!KWU'4L<F.aE_d62!>>2\,et6imdA<jC^7ddCb1@)$]P_Y^C@T^,](uY7U"?m5O/[YEBj(Enp5XJgR+X*mQhGu[
%.c"P>#Nl[KrY1toD^'M@U2Kb(EU?<b=OV'VN7qDnlF"MoVs-;A?I-dKlX.ce.IIpnUZm$/4t]fnHEH:r+apQOCHU5TmIY>BoQg[7
%>H>+DElW5oH[J[EkV]obR7J]G#/)p`<+U0"NI/X3VEq0G`no8QpO8mlC\8m"CH0qJLbC6ZC\dM,,52F[_sa`3-iSbf"?PD2la>:`
%Lg)bpf(OE1GkNDGpddY+f2Nq4,nNQ%BKAW3]e<20K8YtCYD6o"oLYgAf'W.CcdhZ6"b$Oo+%O)c@D1p"?6;M`e]HE:^Xluhq4pp1
%q/gts53s<L?El%85M`BhjRnF.Y9iJ"HHtaKH4jAqmP_Ou1qc47\Du?,]nmnoDZa6cCt.c"ocoVM)"^uArA[@>JC(mV]anI7)ts-5
%G(!7Bkk-Z%4geT_RU2[,ddc!bmk_S$(=qmGq>%1-f^"@:"l>2a4f)K--U=BuVd$^*fC#LPLO-Z)r)mQ9kdAY>24GtXfe0V,f@JZ_
%ML3=u#g=[>ce'EF]nY]r4l6Wp4dYUI:p55YQLeWWNNgdqB4bAslfRNNg+/:HX*pklTF]S[ifYd`4]J-,a?3`jMhmn$37U@*>lKPB
%??:[<)#$Y6_&Xo[rS<Q#U"G?@nQ8L%\^4[ZliDElc1d[^>ha&DC8f`/T;G[3;`K8n`5,^P,-%(!a(V[S8UAY;S=HP24/,Romj$'F
%W7jnXW-l`]#<jIrCs,U39U_Adq:P+CXC"+37%7gR_&5Dt&Or;aoU]O?)+Pl@H2"sF$I!MTq`X6*J7\6!H$Xt4UJ<F_EMKFWlD/cs
%'G+HO5`n,#rC@kj/Q:i'_b6c&:$SbR3L-4O-(BZDF`k=a1T:9aV61>("%H'"e;`oIWqVbI)^!&FHmtc)4OpH/[l;#anl4=_daKH+
%p+;F`H?qpVfZ<,"TZn94UOFK37AHc'l@(nhAG#MHHFg`GQChoCp6_SG5$l,2eK6Tso?@b\o^mZK-CYmdVZbJ;4<<6A:)HrK"mF/<
%F)(3O]hTBPSh!9+YNY#)[3K1SF[l#V-dskrg'uJiO5hhjVhsTqp!3!th@OAEV!dgZO0G]#5akH@VLG!.7;E/*jJeFP1=NsU2h(Cm
%pQPY0p__^rhCeH$a+I0]h4;BYib:-QI46RuLq;u7"5W9>@5KthP\bhf]W"`ab)]dn,b;5Q-BgihcdA3eZ)PK?\^%#iV>EmF\o_<9
%NM>m?9!Jrp'T7[tE<oRV)@P)%2Z#0JQ?4NtNOr>+rM\r-JET?Zj8O[)6t<.ZTc`NeG;H<2+ZfM3.k.pmZ//eKLpl;H)(@r+\r(V$
%CQ*bH*YCh`U^s#g.]Bh^f>RR[k,rWuheTlEBADfVV&Rn+!m6P&b&u[[TN<BqTD))b7_QMQp52<3C*]RADKfl3?1*uMA4%$0=&oF^
%ptbhhNnA-TYCc7I5jhY)2]HeXr9T,t)YT&.cCe77E?`*U;6O&Phl)iAeLL^lJ2-C*WtpH'JmQi)a9(Yk`Z(FfYN`BO46'X58C?ag
%M!F4Ca=0i3+NGE;F%a-:%1E-pG65?g%EkG_e4"Rt2&Um+Yu`P[a5m;7KQJmq8[U^<;::NJ%&rjtLSD$I>*fCD(_SkS!a"7U#B]`q
%%SJGcin=ZiL1!dq/%>+CBF&H[.a4%PorSgbY)')`*@PV9oRE+Xgr(kMUd$]iRaAs_1nkUrQPEatm-lDN&A[R**IZ_s'OFse-!:is
%lsAZ]7YMpV\=9Bf<AA.*T_HX!_FsZG6i]V3!g,IcF$OtP<5DB;HD&WiGHQU+&8(('6h=_X71@0M/r.Q,!)d:\R5_*S^s?fs*kqt:
%`2^H;%-p)^7);$OPE][8?S7U)P0Osiq>8Zh%1.`[D2Z;-kuhm1C.Tqh^`(AH5r-QQO@+71A&M,EDG"Hfk%J[bo@:k5&AMc:6J^;0
%0C"g/CKTsH1XHfk;h2Rs[bBS(4-TsAWjT*dQ^S7M7rqY.&K\!!&E]$.c/FPE@3S\T%&H7jW).G+[e/m&cUN/Z2^3N,R+1.4!IWO!
%Wrp*,j/mKO.d=JBp*?)hcK'$<nVR)&0[NejS"Eqrh0a8(Kr[_Qp;b#*Z//%@^8]Zg7f5iLf+sd@50cBZ.;n_P_f/4Y2KMNgZX.-!
%_dN/b]m@>f&`crZL/t>h>8fDuS#.gu#+u"cVRYkb9Y_bWTo")kgKJr5-jJlm"l*&,RX,(aj1,WOB"i**>-n)o41'=H'sLd\Rc%k#
%k!qbrBilQT!<_+j<LB[eiE228buPQcK]*U1pH4&#)62qpWi9q\J13;rQ?$db_m*(B`TVrj1s[g3d[@bb8t`/M-2od2/>$Y5SEUnh
%+jCl*.Z`_72_j;k>%pl)Pa#7Z.[*u&&SO.hm7$GDl.1U(AhI%k@P]Z=bq8L!`b,IY]lq219X;NqL;akp1Iq;ZP/KJ0@p1hOT(36B
%?mZ/TT,XZU`k%F)TNjqo=jPqCU2DZt.'D+5=h6JaW=SDte!+<Y*4MeW0W"pc%:-uU^&#M3g]O"!^uo6sYM$_)HU-%V2oe/s/7G9t
%B"J#=d;GAhh6S7f.d3jC9%'[[mp"&N[]%NYCN-j`1T+qZl!#Z'Lf=.TF)--Ri!ec#M)lY6`jE2n]<QF)Z4qg_WJ)n$=TGB<[;Bh9
%R>i8AE4T"CX]?Z2L"TQ=L5a'&*ghpTPWE5,bVEQ<7P[a>'L:-r+1#>N4DVMm0k#QXb%$nMb%_VKO(1#0*9(@.Z5jnokMm-$K3$ZS
%&#/ke8$[E/%"1l!M=*jLA!1C8aeR&AYi`t_?+3*,5ZG3,\.4iP"U[`gEG1sYR*T^innVhc!R3@WXeZ1:jq>-+"%b]n-r&sn_FJ2%
%)1k?I1jQRF1X/mCU_-TK^[s3H:^S5[b@n4$lu^>S8f(eD2nKE'lCAt2fpZZ^&!#//h*?t+Zph5=fsN\A`Y;@H_r/U('iZ&k"lm:Q
%I%R0j7D[,S?u!at)$-0Jm9e;91,r`a\(@O(PJ_0GBaYMBP51gf1k[9V^_,koG-pn+Zs6XG\M^b[bqIVp9W`-b0bVb&)h:Z"RCU8O
%[W<_KG,u7$?/Hp$(:/)8qG\\OZalQ""`mW];iE#>K68"QgU4<.LL*$?Q+N_K9eg,5VBOq9"&7#Yp!(0N;DOi6RP-;'DfRd`_$/4l
%J^EFe/OQm'A'^iqp;3_>KWO<p_"O!Nj3C5Ig?05PCQ8KL5RJ'1e=;T@!]mQj(39LAC<gJ9QU$:k,[DYWk=8g]q\=mtkZndK(U.<o
%?WV!j7N:jbb5(;AS8_i;&!Wth(*(]D]S0P,<a$I>`eK`o[:ZoV*DgG%4S5pkHs!pe5^QD=BLCNtLP%>+UnNl#o281=9/RD<Dai0O
%Xa)(-/\3'/'o7k'TH4Ne9;6X^b8a<VU*<-DDQt9#R!<B,jJ:-6Rb]R8iZq0.jfh&,OD9sbC8`*J/o)We#u28eil0`u1=T$1CImB*
%NOkg\eC74WAE!.h$FOK4\sWk$@*iMPhRmg1^[24?co>!l@[^jq(?EEH'g\&'%G@F#f#*@/l2IEc(4.-Wp-`.`>/H46/S'%%<!Z%8
%O"l?R6RB>MIUp<]!MsI6lSF:0ZWIY5*aM5,i6]gQc)/F&GDdoQRX6Z7-B)+aV76k^!BW^DeqQPG*lZN'JSJ\2W-$c/Zgl2;*N"dP
%NFbJ'K"k_E.a+s&Td@?$'Wlo>D;ubrZ6:/N:#rP2E^/R7*#lFgrb5R8fNP>1[/@2:G%*i%0kQFQV=<o.)q+b]Xri<d.C@>A;/8YL
%^E.GQ[G4)acDCQOFf!\&Y->=bg8R/M%5kL,2j2f3C1q>E,i"9[AT-G[cFP0&O$B'h7mg`QY=0H$7s!euZ['e"_K5W0)fV`d(bnN;
%P)$#I(U.l'P$L-Xkts?HXKl:Q=ohHFB,VfL+^Msq&8ZGXJ6R*#ccn@nP=OH]g?1AMGW(X?".Bm5/1g"e*ViWT$p1@$hO3*1*BF/Y
%1!p?V3B&K.6E#W50nm5/7)Pm4B+4Z\BL=Y[@E,/If/VaE;sPI%$\H7O]5PM[VILNj/Oh=V-bJ5;cr@kuD&iBA6Yj]Om*qE>'H1ak
%:?7Fs#spReHMWfU%(:S2U2e-">&KU#PEu37GYH-.A-H-:kqmqB=LgTOiPqH];\uKgFhi!DqrdFurb\]=>49bZQ-@7aF6.__%fXiC
%K_(VPo"f-I$0O+*j[7k6'@(53bNI9+/hS-hB-,6O\oB*fcTIMS+LDO8I-.\]*dl.e$fQIo]lI_YM[P:2RE+lD8Ef((iI'dmHla`h
%Dolr^o2n3@k^2!%5+Qc@Yo;(,$g1GM5T<3;@JbWPYh2S+1QDS71*;]FTkt7^b#eL_A14u=h%E?6;h0QBD]_Sd_3eBF5[='<p0Y9g
%.=<PC%8tJ:-,[j"'BV+>b,/(Zbi/Y_>lK[X$;F^1o(&6ATmjq;N?CF>1Rp7C/IM9`(o$g\#n\\2L1Or[1)\PC,==PKhfD2/LmRCJ
%H"hmU)ZKQ^:fnH.UMRN/PSZI?P;R&SYhRUg/Mt".KjUg94-*t*SHJm)6b<>Oh)V_s)bd4F[AcVuL#(GQ0+h$r"?%1]b/L_%&Y\Rr
%MV3"=g2AblNEG/U_1!.hApa0Nc-._u.CS8C>AMJ@lc%3T^$8P[MIAoLF$gn6/K$>HYoQ3$g=?NrE*-sSW<-JM)OHR4@cWJNSME=Q
%<]jQ3C*d@LM(*hDfaW0\V6a0)+>\tk!KSjeNQX:NN\_*\;2Eo64R]=_T(hE73WZ"Q0niZ"p\&)(2`5C7R>].1&6#O4HCA5pliq+N
%RRMmjNIaZP0rQtc,P]6TBmktlPLb]=4r+0f7?i?jTWu\IVR@;)b;*(A&<h&XMsq`k@W"nU.b4o0P./,9kaiOF0K`R?=mL]bT@9+5
%qQ6XB#7Z*!D<QW$S9CMDb13fZG-6fV7r@GnK;mZ>FB)R[\W+C6's]d58ol&l[CLo)'1L/"lqb63or*Be6u3ed%'AeA!IO\@c9RtP
%.4O&Y7=JaHJ=2*&"A6<b;YOnr2Ut(KUQ+nD9:1I==_1)(qE^r;BH4'cLB&3IA^*4_/M*fJ*9up>Gt_s'LF&m8motd0P8;V2%\;:)
%9Hr,RL*2&ER9E4KLsZmV,d*-[YT-eaoZ'?d8^O\H_C>ZRNCOTIB,agqX>a<?9'm>+2q;)M+=q7nl\u\/#"M<jDqL%c?pg^RbnD%c
%>/cUKl]#:G0le$L*%c$@6'I339O('Ra2;%aD`j?[5iHstAZ[oDQQu+0Zp4,D\b3t;\>de0<m]KF@hg#[Q>?OdFp!E!*A:m-+K\HI
%a2_5SZ*jf"@m-Fl75qYB`[i+moJ?dTO"N>7PHkeEC?+$SA*g%-mQkZ)E^:XH$N%gO;30PCp2#\+[5,Gkb]\f7.E.Q@%]^.*3t\Sq
%/rI]HFumfS<_]+A]\-6pToJ(01qrO:@/@89ZKOAUN)4ddg,ka.,Vi.k>D$lUQQu*<\6Z]YR:d&ZQB'0&SRFClH&FBtj2a?\cEI[G
%k09m8,WO-;a?5H2j"O*]G%@2@X-G)d/f0r=;+.T+`ec5gRA]\i^U?_d(5U0j>8nA'oCPfcm@=VbDb"[JrWBpAn6`Y?IhfJk/P9Ki
%ob'.$\3U90bcbh&H>,g#3JYcs2e3?Pb,lrsfPF*\@[jc7CpUqe/U[d&D?W+a)kQU[Ej=3-i7Q]RhNj'WP1'*6[JR6,=>Yc+7gbEe
%ZQC-E??WBXFh[^SmWc#*$LRk&SC9;^=(o?#L!iRm05A-G(5uVMo7:(!&CTnt*8;qqDTMg+1gt1/Y3a254m"_:Z`ttSj4;qm08:0S
%R[M>%Rc0dS&q&k1mIlnNagTbQ%I[r<$c='h#0Hj`2+[Fr90okE?S2K'dVBG=Jn._GmKCWu6d#_V67]2Aa[-i8ksa40$uH\MVqEIF
%=2A)904CMfpLBDZhiCK\))IYCfT<VUPm$3nZaH&$j[nl&<XShH6$_2Og#Q3IPddIVBf@G9dQJ%qQqK_jUA86S!Q<N]4K0:e--;'[
%E:&K'NKW*1Pi9%DU9E'1(T+\!91O4R+b$'GHBXm5*sL$*Zq!ZF)4mP$WV3]2@EGC?]gCEEAAU-PrJ,\bD0bW>h15uf*DjP)%9c8-
%CW<0\cWo^FiPaPPQKASM%MG<BQ.b$sQQ%Bprf5I@,>%/''!F6BgW)C_03l*d!K#F3+S#<9Du2SfKQhPe=7eqARgCQfpR)Y]e)':e
%#tWH-V2i*=,<V0o]6]E66<Y*(2t:gFPUU4p@<[:r`oX+,Y[9NfBGPdc*&6dpB-K:u'rMaIKkG,;m[h\?mX,?$?6Kume16j61pN%[
%!H>Zb-^1oX(C-:a?KZq=E.Vu<@r7gSK-/iXUB%fY=UMi$`O^BXK)MXj;p@;SDt>c.gG\?)AKL2>V6Yj)jX4t:l\<+L*nQT77M$'!
%#5bN&%_"8f$i;i6qoA0DTYO^^<k7gE:?+WV<-7MTcY'!m5AP^c.[V[/=uP-W;Q@6`;>"lnA!JdT3Eu=Rl3XrmXb#W!C$p^4VnkeW
%PHJh`%II-k"r?6h?3f2rW%C-CN.[$>;q.bkc]"uY$`DV*):M:Fi9s!Y4h]ruA@AQ9f+ne?e/F,b9%MZr<5*u3\_TSU;;J@uHA46J
%fZ]%^Q"\-GL8+3er\h9?ULJ*%=Kr6YA"0gRI7(]>`#iiI8nf['c,uq]$Jc!Sdu3KqaC\p'fVbVn&16dZ@%Z<:4>uZ7E=gd#VmH`J
%`m):_,>Ujs"8g:Db$5AAZS6U8("fE#e`Uq"R>GK_T3bLSJkXlLYYX_XLR`V!)VCsoXqfBEX+>\2Vmn>`p?</nA]0I!JUNRHkZU*Q
%:BO--eRrp8\nGKD*cpn.ab8IXm*cp&S=e'sJUR)-b-YO0Sr64Do7;=9CZl?_1N>.R:Tl4t@BhnFI<nb=L(Pqo#PK_S1u!S0[Xbf6
%@%Ub)ha0Ra&+%c'lI1sGQ43-/P=_%VX\44nH;T)/]7:iOI<pZ#$Jj15^coH15"cXBH!m9$>$DuJ//$So[n>3*OX7b^*nY,&HQ#5h
%H!m7N<1i="bDj;$]d\662^]KbX"^WoF[VXp]jrL3iBr0ZV;,JjW2>DL_bM!0BftcP?^]:N4cs6r/:P#qNodVBae5paEnCJZAIdX8
%:&Z)A:q^(fl<E6KOeEp=TN09DS'._%^!FX5h^ml\<N]ZqQjd4h?s"0`g]!S%(@$_.R"-[NJCk^=9^G721T"3@NjL:b]OR.7LrB4!
%Q2bcji&RXofQ&\^f#dqk<Y"^I==3j9_TH;Ms3H.]U-\?7L]5YY-NDP`]Ckdq3AP@6-3%2j#jFJIT*J`MA<m15Oa&=?#mnqt1B67+
%*[HP9X=N'=((EqtFu.-JI(]*BjO2^"RbuQ@7)t&]*?K>-B$6Q*NJHO\hVGF*91S(blZjE742=sqm5+5?E=s=J1\Os2d+NJ<"6cQI
%+gfLUVSKi*%7,OhkEFK:Pkc2;5-X>,M(c2WM+9pm>MKtV^srd-"R`d'iO]D^a#!p?4'ks2!\p$;_+@fB79MtlYh>+4*_;[*BgYY)
%U0]>kP$heI8GfqP)-i?gZ'W+0)t!O="m2P-5<.uX.,+bUW&7fTOk"KEOV9`iD;,h7;_U!pBO2/<g)/^.WN0j(L/?Zck$>F#c,Q$l
%$]9$)-jp7!gpig.n]&9'N]1ta`DT[nG%=[apK.Q-L)-".1p*.WO#gsqNGAqn6]NsMcb#-tA:;JS8C$""dH6i]/9VXp0u"eLj8&Y0
%^/JsiKoPiPo)9MRV?j1$(>Os3;0]828)q73:.4b$o)<pAJXG0@IuB!Zbieq/8B#_CpWnYt8ZD`UT%BLW``]T2D/6!bC<=E6B!h"n
%H2h\fhd1a/=sgsWU1m0`Z\XsW+72_)BiRe`69C,!V:TPHQhQkXa$qcGCrCa(#%A5(er>EcN*g`j\o:"E8,FcL)K'6aB\sn4GM>-:
%^7Y#NZ-"8H\#3pke\'KD`,"1rF#:!:bg=Z?c/)tq3Xhgq'4t`9QHC29W7SJ\[EkV\GL35Q%^bqI,CEgkh.(HO.$i#jpM",ag'FLc
%,IUAEYuKj/R>-%%^@#^NUp>R8Jq6n4jp*^o'/eUV`7UXegf#d][O:KVE(o5n4-R,9ZEAQt0C-4?a[Et?GNZY2AD2XEC?_l1C<`kk
%R-b2Dau)DCZ7FTBUFCPf;77)ChDO[J8i8_j_Kku_988;CA9uFTmC6AG)t,.LLUnK5Mf8apL?FuhL(H%`P\EC]iAJ7fpd1P8&VLu:
%EL^I%4iqM2bI=;cSa]Ah,KEUD9cVt;a09>We#b@XN.,<omb3t8A0*s^M<`(_!mjJQ3p,fr8KlT_l-ri@e^8.+Al4@+ZpqgX"<tRO
%>oE@I73=BK7_O!<@cRg0_,4m"/&cV\0liKNGKqTl04!?4g)*A%eO8O'8N`Z/VQ'1em?sg0b>:Z*Lro=Lb5q49knR+t@CdfEO)("P
%gpksNpuU)2=$IKl]djLsg5s+K=g'3%_d</\c+[!&/(pM'+QC49jBAsu>Xn'%^CqA-=M4)4m$)jg%>H?A@o,"mrq0O141B#]nLe4A
%^c3K*k:nWJUS8YQT(`?lF3M!Hj,J>M`;.Wj1R/<ZcABt:ad'4@,ct;,?Vuj3arAGJ/"_sUQ:d@LQ1W;'_l)e$9XI(,i'rW+0u$)s
%Xq4j$ND9g>\-3n^*_M_9?ka*;k+K$E\7I0QDVItgEu#gpisD`I"WV!:,9JTqY9B:,V'EXd)<-8`7rD]]@kr4o;p&hJiY%6Sk]+1P
%G)Y6jL#L8QiMmW3mH'o\0bKinRRZ!"Sm=jPgI?G!TIihBB][9=Eu,e-LYu`fNen[:FVjCYAN)6TK6TekNRad",#\j'\ag;U@hk/?
%E<W>$GXRUV\2>e=VJPGuB&B2WG"&+f%u8l_Qf5$:&Xuh?78:A<Y1Zqd)c?I6[8Yf'S]B\X>mOa`(]T6u!Ps#!B'.QE?p<%LD-e6b
%9i<phX8P">@sQAN9c!$(6n:cTgXudD>(qBm&?*&-<=H/B<tQ9Z*+ro3'nZrm>pVb\=\0XP-#2%.F"4/9^OY_(;Tl.+au(IA`crAH
%b>9?d(kH<%X]_VX[df:-$_`j`3h<bB"S"'pAf4>(#\\,3Nri&?S:E4%1m?"j\L;(_@BoEc7(Zpg>l9SfO@5Z,W>gmX[lp:9,he5J
%o]YD#[NCZG2]bi44VnDr[&[^TSupZR8[KFtBW//i$V@]EO(dJM?oK@YDEOZ61=F>W,#/a[c6'6iVrT7HaZ(=RCXU3GM<?hoo5^;$
%d'HE/3r@#+4m&`]ge(U<(kDkh=?]l]CppZA58HmmW(YUp:KFDNWNIpXU"X=lZ=JZ0`6(]9(!_*]Y9mDGM8'$!MpnODQ/ua9*33;G
%KPZEY2n1.H*h$_'>fbYp0B&V8WS1j0X-L#ELLqfIE9)#t<\'^0E-WNR>6thBDmaU3iLtP*6d_:,FM^BMnX_@e@H_5`1dl#T#nP#6
%k\!!,.NSsF4>b(a*=LA+#nIIHb(OSdq@51e,WmoUSB!\*VnIb=joKuRGESSkL$-[c*I?e2'[%db[-%k0FM^C"3)\W>XRrr*.cI)s
%2HHkUg(5Y;#nP9@T<=]m8A[a-^b=B<+c%,]-TnbU7UX7ob:;JEh,'7\'-<%IOo!`@V/DSnG\GsVS2"U&KSMUj.'AN"pZPd7iLs[1
%lBL;O-9O+LO&;8dQ:lI9Y0...h9.0.<"@,i6Dju"*h&_m8=oS!-9O,/nKp#u$OI><K@,oR&PIj`E+[c5ePbQC#nNS)JHZ].RV+_S
%r3A_^6MpM:L^3_[%4rB:+h$t:j[(B;NFBn^Hp6om7Du#K'-<V>d#((m3oQe.bp+.GA+>5-lG,&i`3s;2BZY]/PUbXc?(/34_F&Ac
%keTjU>Y'*Q0(=3-jXFHqrZBrYL!/pTh/%lCCs?\26aIJ\=R%gg2U2pVR_'FKD9[cfLZ[8"?(bmrC^<82PJr[k&']eMXnT`M#nJln
%f7X>]A0'/mG\Grk_.f/*KSRRL!%G>gZ!oBFiK>6f3XH<5#h>7n:eN,t1s^?Dk[qAYL[ooDbBBh[BhKa7e1`)+'9tno>qY*0\TY.X
%RVRIUF4h%og,dbL9=h!Ig.cg*T'_X+)qP.pN3XI]k(fcH*fBJnqUl@Dp9^Y/*pO;jYUq3h/E*9_1kDd>P429NRXV]_3@!UZ#nIi<
%Cn)e61lpMs9QMN=Tm;a&d][_kKSS^&68kfXf`a=*Qef0N$*OomK^Q7L.`mEk]ue:$(1Hj+$,&:lpQrT=2!oC``i?;`jFnAJ?BbbH
%lC9ah<!!*@-V/5ZXgMS72KXeX#rS2WOluHlHO$h?mSTQNs0uP9qeIK_"JWJBU$I#_pME*K[X;I?o(ennn%S#B7m=;ds-3oXmT_Y:
%f=fKB<A&d>W:EG($^asT^;s6<;=B1<?=Y80al-Bd3Z5TE;<NAqS[pjn1Xu)+n!:PQ]Y@@Re?i$-54?ap+-G:XFW\=(;GZ\fF6`Ss
%mZhNnZ;^%B^%5/UVh#5IkK>T/ni5>hh=*4HGg"F%l+k60g&a:nEXJM;r^a4s40P2d?4UqGmb`EH>FTj0NV#u\YZ\`@*c8T?DQ^*Q
%@V:8bIV87+T%Q/CJ)$<4\&G".h^gmMT=s/?6/@V&]R8i;HB[(@]'/JV8=,hPCND6sK:#=T_"GV^.5^%A"IV5kFJk`_aRI'^_E]@8
%b/P#]Ama'2mW4KQcQXMp?2_=RK6O"pepfqb$HE=Mo%H*uWon#Iang(a%DfD8Tu6i4EbI+Sp4-_*9%+"WOr%*n2V#bA&#n2A(Y/k#
%l><=hAbZlTaAuK`j9j'%]1QI)[u)QZ&+k<'(Id>=583X*J$#J+[(arib#W+>TpZH'`sm@,8FI7>XV_M"D'&&6pim5?8sq\6UN]dL
%3rJ][:\N'#(KTk$f]QEP=(aHIK.04mU+uQXaBh,VpVC^A)RU\Z<;Pn[$GjcEn1bl<^rM9#nK^jJ^og]sfkJ"gq3@X_M*iaW(nF@k
%a$5#8Tm],L#XdED"m$!33UH3g'G"@d`BE`W0d8itD!h3K-U'VNaj6'Mop-C9SC>o=B=&MFI4A:RgQoTQG$Q\S'b?sQe;a7i0FE!]
%&E6iR+k4kbOEm:Bbg:u8)Ll:=2a6l=INUT+`%iM4XqHI5gISL0$CFusYtH<VH'1W2kFBS[<^2X2%q3[ldDm3]mP\4@=T*f1SR-`M
%W;8ATK([rBGT&n36jH\mE?`<_7I9.?Xa]h);Mql*\$Bp>rse7jZ<N?=.-MkKRao"XV:I,rXs02qabY%YY"?>#KJN[f-:Q@>Rg^@7
%0/Dd,jhT2JQO^Vo7SYeD4'G&4CF3!fDpBh`g>O1glo-(m5sV_F.k])\V*qW_Gm'cS7W;'2dDq`DJGnjsMJf%+#1:$fRY\MZp+s%I
%3FpK_[9Ka-XrAaD`Tpr@I6TB)P7c$<dDrkd;#U!:'&Pjq37gWinml)Ec=`JD4F$S)bt9eeE6PtbIVm66q&CY7l!Om52SI!k#@EDX
%ai\n&T3b;DbVb%\+9kK9,ejnK]P+aK@ahrfe8'gZ70(J(T..?D*sBs&(+m8d13-71M_EHdV]YH>i?Y;0Q0mN/:?jaCG$9/Oh999p
%a_is`.I*iM8e>J'PRNgqmqV[Y4)3T';[_d1-X#R,]@oH&P:pj`'$%QTlm6t*I-6.Z"`idY83u\o"CX%Y)MFWS9p#tE%4,[kLb9$'
%>$jP:)E\(.*.STVU6!QuLj1ci>X%!D!g4B580[,$<KP/=-jkt2)?59V$*Pi"Ipm^d&5j`s%qE;bBp;`"HJrZG9>--XQ&jGHkt8uF
%D!q#`=L5C(i!+=fiofMQ`c"7+`BbT$0jP!'&8#u'$gjj0CW2XdHris%:FI^?4pIe"0eI;u\m"l$,/CsaUBbGddL:aR<1TZt,+.FQ
%8CN<-,b^/fh>0Cm'`)U_$=/QhBP9cdGV++GPjDj`A#1NpJ?5^:mu?G9\)?2P<ttjE7D,P804rCoX2j((6VoVNc]l![AZ!,p_#e@K
%*k=ag0Q,f[2cIU'Lunr3D&c2cjH*&A9[fPfZX(4k(e\usI+>?"8(@(S7[Z=6m%/lN_4?!8oU/EP8*>r+Oc[5nVfOnS_Jh?AB3ot7
%e9.Fo'?W%61_Y,G/$jq3KYn6)5dP-Vh<LPrn]9+B11s/F:6jN1l#Y>A+MasPfg`.,\;^_?3+.YdA97JX-A$c0#j`a5eD$+ZWUJau
%>IBO=0)3N(<_+ErhX*,8_d*Ka_<0$P6;B0j#PL..gHQD$YjF=-A<5p^[m7m!XTZ8h)<BGe(4X,;D.fMmi\#@qf=oc;Jo2QZAjO=+
%7'LTML2H,TP-."+TjFei!)2Vg+5t`\G6JH+c:!8(e8'%/U!`3,[pc$4NAE+!A74IEr/PJ4DA8Yci=V11&?b_aZWlO%%5#VD9fujn
%\MMW:2XV'Rj"-`fcog2/S'337?kh8M/g>ZKV'&nsMlIRLG'>mug0FN&NsV\^1F,h.Z[*'_+uJs2GUoEjIGTT=*Z9l%LqIk+_ct[M
%$CJM]9:(Sj'(_ak6MH$5?`5'Mpqk;D&UY"Ml\Iluka=*J</SEJFs641Ua+4"@'@?6M[V6[i@+qS(Zboq#"gKcLp<\)oG0[%b!ifk
%#&Edd#T4QrgdkAnjH_m;4l/9%1oJs>nk8QO^![>@f(8'C]-mF?;LG83H82tKqY8#'j=aBdbotl._"2pIlWO_*heQq.33ODd<D&+d
%9E'8#,>^FK806lrAq@@Bh-;6Unf(Eu^T`ZJQ2]G5k)`*m`Dq<5Y*i%+qdAUW]ig5!^@9+n]jVjJFmD&O#t'nMWH4Y0j,5#aEV7!V
%CsPgr]h\C.ng/"D?l*3lf@,@]YC`_%XoIhT?rZ/*Nk/io]WYl&[1KL6m2`dP.(sMXf<]:ue1S4:3__uW)aO?V,=DDO'@V!T$fUq+
%"g%jn14BrL0/AE%5lX\4/?73jogq0n]78.6hu;PX\.&Cok3@:hIFTrGb,pso>/'I._9GPr;ke0X1I:kcRqs^`gj/rjh:RGWr_7IG
%$s&+MCi6[CFeTK#T=s45c-[!L1^C@24EZB-2!@<[1F:Cb./c&G<#.9Y9)6>2iu`rOL+_&#J=N5.r8X7UGQ8!Y`,l+Fm?K>fBD:A]
%lO0?AeU0ZS&,X5X(I-.5ehJ3op,qW[q6kL-K#74,]d)a-57`KUYno6MbD(Xd570&;Ctth-!r'&2DC6)ek]XR8_IcFO\Id+0NRnO:
%`HJnb=^rre[Vt?7Fm%N)m[aM2a0J\$#)S\B:+)Rf3Emlo2srI=N?#8)>?bXTf[X^[E''LBl:.AO0"SS;^fdp"`>0-]=+7A)VWeA,
%Minq(8=78"CHCoAUcaXZ]qr#1p!ZUKQ:r?mQeb!ej_Xl(J'=/+1T$V.d9#EOKr^DifJIfBY9eRDn`cuo<@BX\.+/Egq<.,9cMbir
%c3UHKgUfsTl@D!P9ucYS:8TetXo#q)-A5AWiBG:S1PErnG/E<dp>kce>NU6ccTpE_>c[V_K<KYR?TK2!i-;Y-lI,pq`$8URM<ciU
%"2/+pPhXmKdV*(_],hcHKhqa<&MPf*nkX)F(n7:uU@V\WL;p[Lj,MJsWES-T6n?N23U0V1/.@4^U>ddQ;VD\^PR@:[Gh\R07NflS
%$a-iGJ-3Ph6CN!jJ9$FI@ZeP;Tu('/^toSseHk?V<q%5<K%2hXfPCB;ikpmDDf^8l9<Z&6o[`q0e,Nm`L:)$<APca5\jDDPg)-?Y
%Tap6?[pQGaTBp;=Rbi#.@Ne>uLlXC<o&2<GORHGE<D'eui[>lih,'qNlhq&t3\P+NYLhg*1B5ifhoX9Tl-am%<\ELBbA?9$QYNUZ
%hjBT//9P-YhZ\+*%IM+_i.V"\ehraS'tnO%+@c8$#[7o._W(0^L>/0%=qgeP.enu5X&GCtm=O*7KYbE7(eKp,%*7:0V;Xn_D\/0U
%D]"oS(@(o);i4%gIphU#oSGca3VpC1YhT^7.q5i)aE!h]]&;E3P1e'`CQC5.o'10(/*mc>fn'mG7FRR<1h"8")b9dA_+gf'C%bW^
%d3c2ZBu3&<E0F]J>2EoE5HONHR<cSBPJ5u.I0M6R36sqm9R^X8@rT&qp`bd\/$L4hJ3iZA*WWGG\%+$aVW&!OSn3?/gLnZGA"dj2
%i232S:ZT@1`a+LW.q]!Cl1BihJn<Kc`AHh5/K/q6a-s@U=`ZSLLM-eu)f>!9n'H*e.,ojugq:/a\ru(c65R$7(/&kR7XX]Y>Z0$Q
%WTD]'^D#sJT50A>dunN$&hQ9fV9dQ0f=FG<d8ORT:?8j-I-u%P0n4WCnSF-JTQ^`5j^=SI?%l&::pJ8HR\0QG9"s3Z0XKQWU^k.,
%%>?8Fhqn<&E"-T2`>4UuquQ/*l[&okQ1,'9Km++YGD?jL'QAd\F.?1I&ZF'Jp2e^BHg6Ho\^/$0/+@Fqk8VCCM&.BC.o8VLYAX%'
%dM&U$Q)h)L-<f6jj/#9%XEaD*6Fami='r="Xa'O/dY"6/[B#@T*d+gKe]1;n`g##V^(.ntF7f^9T2C>N/K(B1,*\b?$IqI`Pa(Bt
%TG*kIHB!R7Z6Ch-1VLKSLWm7WDClHaqnh6-`m76ni`R!L7H#]MfZd\Ng,OHg8(DIh$_!KV.,CiM\re,.FbT1jFjD%Q<&_VNHt29o
%F1I9gq)2ib2JQGRA`ukdMBjRe50BStn/2<eM%IWN>RSB'W:Y4+qMmo2Y.tW5^_76,.M0;FCb7cemEJqoM]u5lL`>f6p;Z2=0gEUW
%kSYDk":.R"8l(=(UtqTXV6miX2-aa!N/5&*;rS!f;S4oA+Lsg7a>-eCMQVB_i9a*6oKcRj*`4VQHfusk$K%e6J]=S45D9M_b`%k^
%=(nLQIL;cECNqfOYn>s!Xan:kcaH8%A8)nkODjMh"G/[Ei(Nu@!lD8P"IKYZ%[>mjYClurOV//^TeF5J*sf")1DpJb6_@,SQo+Ck
%Bh.9DKi2Bo-UTklJIn*U!76?R!<QVA4G`o)`WlTV31,Qt4nHd7nAQac>7qM89TXhdPEoVPBS93ZD-RNe1dFmQY`7DbP(RG,AI"S+
%G6YUJ`7?&!DnGg'Rf&<^Bi!gg/HF&c6u\s)rB\58k1Y&e(:F!&9`lTdm'fj,*U<$5o1cB""T.l3aE\`)"s1fX':X;HQXJK3$eYS]
%DtDOsgm^TnRi!cW67L^H:pc?8IZ7<D]K8J4boe_)XFJN]gEZBRcQ!Q!'ej3Or0l8-@j&6HeP7&(Ppl;RThe$1=K:pk]@:4lUT'/"
%C+M*/=/2ljJ2!kRKh[1U^_0:>PqfE2DN$";#4ZDd,tdc]BcFtC1A_hs>(bGT+K#m@XdK\d^biC2J%r^82$dgb-o^)UhnH-(&\$M)
%-'MYkLpacH)hUsAl1o>308`qB".p5QP?qqk[tdo*,o%hq`2'e/XSoOL!<S7^(*KpCCGq9:0F\O9n?<o<?gTrE`]es;P]K^@Y!qDj
%7ND@Z.2eIUSI:lI*Mj/2K=BWa^&#,+EogLUk1>jc4Gs"9oVsDD>Y3:R]nl?/6%]l_N[c[*J>]D_F#3ntZLWa8GTkdB^1;b-bssMN
%Km@8Q(CL`GN0"FQp(NK#CsrsUcd/BG5sDP`h!AU1q4"LWiP?"H]7I((==d5>gYK![IH<Yc*/%]C\.fhtY#LRIVI*8:#8fM151pD$
%m-r-qS+p,Mp!aE^bs-H&jV).@+668\(H-J!/r27@-XfHJ3#R2B1.pQEbE&JBIRgcQdkF2VZ>rd1HnV!Od.E,QNWDDuc.QM>@Z9:F
%hWq,g/g3tlMRaf8)gZn<KbMCWg,mh5V/d,25lp_Smq:HPnXbRZ@JKqoig+>+TEY:Mi]/fkqa2:B?UM='K>X/nO_K]bL=A2dd-7fp
%lg?R)6"g:1W*$6P8)kG(d`p8%*=(elrg/2u]I0NG<WgsH#s^9JW/K"JLL0fW[0=fEG\@2J*cf5Q1\>c!9fsAmkij(U*\$oA"8&r&
%c!2r^G[#d>2\Leb\YjgfLH+Jp7Id'nI-A1/jCGI6oD<n%;D*'6>q4DHT4HYCN6?16QK$mUn^%^W`J]pCj[">=0s,A5eYi<:>Q/BG
%d4=*ulP.-r(2dnQ"I","4Waq4e*66<G\u/Y'ZIK?8Q@n?8O<]Jd[[s!*=]b;YJBO?n:f,*-]^UB'fNQ@odr'75[B&?k8.WY\d2"3
%1m@5toV%*p:Cs^"J@g0fU-QYUkj@BI4^:EqY<ln_RT[X2;%bo.Lph"+\U$WJ(nuD0B3b]JaA5@.k0ecHlph3j)T%W)Qa<T9XB3(q
%+u0,W'hAqLN2jU0e$)\u.*nMm7THfpGE]QBgW+TL$4W#PfZgT!LcVOW,",#hL$?tI8Wh9TFr><X$GO.AD#YWuDYZ1__Ta1qM^Yq!
%X//DWSn_SNCg</90+nn89>FXU;3F"Mk?$38LboQJ-d.9T^&=E%FYoLq_Qq&p[U+0SdCk3hRqq]m#-Pg6:u(]'_E^ci+W]Ju>V7jD
%nV([N0_,toY%3aW$)),?\&Uk<2#YYAl*s-iQ6`)qIBXBX,FdEp7jp]?G%+/0^rM6d1hqj%b6C4aCGEeppdgVr+"-XUMMlh2&UT"%
%<S4EOCBo^Bj!)Hj51C]DGm;o)Gro/[hW"V#8)[p8dWS'lfHS#HPTgW,e7<Kah:dTV;Q>L@\s#3LZWfYcNp-2'T>^IS:g8N4`]apD
%W@so%W5F<i,*%ZuBDlf56OTW>[T[c`=H/,h<S!gTr+iI4F=GjkAN#cZ7T(phK'EOm)s!k5DY!&4L^^UMWZHg*/uQ-h>c,F<pYah4
%Gf$m2)a0S'_#U:[Xcspo!p.dHpYtu7Wk,Vs)?lbo@n9h(!o_I<@1c+Nk_7oNFG>(0AmmT@me*j29V6)DSK#e'$ET3abHtV1%BYB_
%bI!n38_YNjM_e93)WIYBE$e28.L<`i#s+R\')9UK=h@m7[8VtJG-njb<BH7`9q+<5DF)fJ4Sgt`m`O/7V3MY7r3.sH)9^;JWioHN
%``I73eL6c-4P[!E.i</3,f/9PN^j[d/oAc)LN%%_h<-hd_cgHl\b:_]M5]u=*&!q+PFD4E[)NP$@mB6Jg&NeFpXJ^mJ"7\\+Fl+-
%Cd4+&h1D30Sd<7"\.XP,<(@"-6ic::&Qm)7R(*ZV:rFu*YpGl`LkI/4=FG'q.DkHf)POHgVWE!0&n^82NBP<N@ueb=>hedpgYF+1
%D.e@=#?;Nq`4_H!fgc.M6'UjTo0t1t+<rok\O3=B/]j*tG40J]M-;<==SgCZ6SbGT>sO.tRd(A<M4%t3lV-9/XXQRm$CA57C74\q
%0,9:*;=t#N*J[kbeh=J:bpGBjOdkY6H]9`En=i)obuTaL+O+@4qU*SV@U:WaH(Gi5)]:2`Mo_!Ni&g_P:_I3Ei'P5iRYciN2cr[B
%@hT*e0sUHb5bdn5;K[t1k_EqsCZcj,G7Jh*Hd^m4>nJMNI1"%KP+AO[QjG*(m)dW/)-M>N'm]-0&G:>OH2LE4PSZ05mQB#]Er3JF
%]_ll2QBoPb,jl=kq=Spk#gMjeLO&]8Hq;jI\#U@.nF_8PI,gUZ6Fnqa>=<N)obH8T7;`.DJimfGjYk[_*2%_DbW_tF=V/,;KNg;(
%0P)B^L5*^rZkJiEqqPr)iqh43Ph:kt+-?ONh7=G&Tg0XlEci=?o+\ho@LBeK/cU^akf^sMQaGhWRE-ZJ_uIW`o@Q.XX(6+?YLJn2
%lJ9rKcc<7A5CnQ80G8f]*dECWQD9KcZGJ4mkddak7H)-/?T2Q>.^G^="NTE0@:M'ZM#h:mfU0lo@Qj2JKksFtO^nDqjB+h2:hpnM
%@2G/eW!8nI65)KMN<&5f1bm>c!,;MYprGHP,nFH*JBB>\g@:f?AHXuR2AUKo.N>f`4$A[HY-P$SeX&JV1k__Sfsl+9Ba@F\9]Xpt
%V@bYo7Ftj9'![1FOj"62i\397lV#1N3YJ^6Fh2+>\e=E7-K9pX)p-1&COIfiLf7nQP,Yr`m(ed`==]aC#8oe+X)/!a0YReWKtTYd
%JrJ2gq9u!^,c?KL4\>i/q-n;/(/S"(IJ@UT;AtcWQ$!We",16^fr<>;^iUitSq4,krC.;+2f/aH+(;Y(mW[phgRn\`HPr>HhM+!@
%9/]lrhT[&Z8Al#B1p9/=\o(J;*);L$ic+le-BFK("7=/%&JA7XCJ8emR6cJnm^$+KFU4<TB97(ZGJN?bbA!gK\2_c,pEHO"ct>)Z
%(:IPT?p6c4otm[j=<l71riAr72\'=T$K'C'M#&tE:>nfhoK__u&,1Pe![*Ag$>4.fC?0USmh)=`TBWVhVV:0mF3<Lm'TR5u\:L#:
%+WeS38MgK.a[jpiQ0>b#%oA.Ae?*Q)F"&+EU27+B-Q]hq_Sp#Yr)HK7ff5Hbhq^APRnL]F`F4^>fo)dRM:c!^di(+Dl:$_%"?<g1
%@DjFB$8(AFnlP*e@:[usVm<"6>]^?-<8!(<j-Eo"Tuoh=O/:V5%$*,0fQ;Y_+Q>09Wa/P!MM#eO[VP/"EPhESoH_?B0o"WbTQXVo
%S@O'tk4rS0)7+p#"B?ET/RhbbMkKYubnNYaAP!rQraTrSJmF[q\lm%S@$`0bjt<EQFHRfRUtF@(,@JTU:cHQW;VG\R5bXN`UpS=.
%4MP\bj%*mN-/l77l/B4Tii_om*H-/]C?<0JPt&;,'KS9YfXD2-/r^LL+O0/Y*d\uG-F*(^Bl\l7lFKW>+4^9ldAbtG;Pr$46.YEc
%-(Xga^b6b;-U)g<19!ll.FRe)!Q:E,.D]Sl`0;;u.;Rh@=@eCi<B+"kbH80jPqY*3&QYofPiD&<]'DFkTZiYR+%QDR%o<@FSqY+g
%;<jMY`NU9"^[BP#pPiZN3dQm&NJR]BZ@W^mejECX<Db[S;Qf:7`M_s4'!5%rVi8AV\.lXee$\8Y_7Y7u)X6mdX^cN!><FgjUh+Hq
%ck-X-'ti*WGna-\GL&#<'^[-$<_Nj:+ng#8:PbBMD1WH$5lR1s+hRF-r_bpf_UXY2VB@<iN]LoV6@`s?(^1h[6QmuNWmk`/pC*M?
%7(^gE_iRHtl2DL%7VJ7!AjiPoS]/t'eISUR`h&97;:O.>^)S9<EBp)Ib!Jgh=noYbOZ`K?DJoQj\Jd4/O%tI#_,)CuYnj>RWh3O=
%]GV$dkM,)1nk"JS>'b<p46a`g&]n9AnjrT-<iWQkfsi.KREJ*p>CnH/]mgZ!:i#g`J26l4OYlV@3%)9'NMIpDl(?tHY-l/`>^#8]
%PE.j$p/+n^q=WenJOqN^b\s2_bO.JCe_2;`=KU.Lgod"85I@,l$O81C!@Q*GM__r#j=+?V)8HH.@MsJ`B)ikV.N25dXL2PlI7\&O
%)_;;r;+iqPfO.93I\!Odg-*T'cdcas5bXMRJ$d%T4MNEhrb-p1$,2$q+'H(d<Q)f7eK&gh0chi/m#YnL.?;""+T(O=0=o**=,5]4
%BeG9;>*eg4ih$u.ah"e+0(D8h_=tI#pP@6(F7'$T>L9\Yh&AYcOc<0"aU;ur?Q^2#+-!U-DGTIcSY#MAmcHe5cTmLmRL\4;TGj6#
%]^2r`+]hJ)HEB/M=WsYsOR08Np=1pc^0mUJh5LR]'u?4P)fmhO_qqIAhhE<0jgE\GKT&%'4`YR56RV<V#T2k;_<3&FA#q1Xa+9!_
%h>Z+f!B6;mU.88no<Qh>clKKfFI58.VP3rXT0^e@.8XJf\pEtad+'dV'ofL47GZbg`:U!7A;MVbZ,I=C.@B-Hr5-tg5H+mFNbf\=
%=SkJeb1t!I(l50:n4bX6aP[=;>BXeoE!5-tL[5ekI=SF>NLLo>mou&:rK%BqR4[nM5KH_mePqXdo(af@?M4+2f\[23H5ih+qK5rX
%l,+ZqFce+q,7I>oXu&cbN,26XIt9V4>@lAEZI8tNlu\6VcojT4Z,<ec[9TBCbLO[M'K)X427)tTU$35*`&&P+;NcBYd)u,[RusG>
%c!:_k-%!b\$V9[7BAX<bnn!#Tn;uBRmB#EqGLO[3r,qY?@H[mU&[.[-^b=Pq(Q`=o>-VH4\!)MO^NbI$JT]9RBGqf"_]tu4>Hus,
%=DhEr1c0+*hra>1r8MkCh5^fm(;!_S?TdVnAP[2L]hN\>?`@BpFr>;og+PU&HDHApQ28IH8CAX"2;=hDr8NRB[#n]X;/qR?73bFG
%&\iSdm$:C$05'CPNA+5Zc%;(Pf]aEsQj@,pi:1](kt,"Hkjg5ee4l2:OJ2kiG5'Z6,Y#F@?3QA4aKBp"$ZmV#mue(H+Dp'mRF&KX
%V*TkmdkHGMmS^6>2n3G\.>DFjA`/jhQ3eW-=nLX_+?In7:Llm\O?3&V#td,6R6Ju;NmE/g7!e3c+M)fj.4*:?TZ=qB.`FskEJ$gt
%iFn]l2eS?M]2a#4b(=[sZ]tN5lWCf(-$P#=-#`kV)sdXUEON9qk0L2+c*(2Ok&(o2l;VHW7Q#a=`snkU+qCB700P^?HZtAaW3#F\
%'TX)*jR9IIH:OSaF'K4k:'W_apMG:@^)Z0Ait.aEK@OVn&p-D0Yj.MdKH?DHd]B.%do\7!?dRA/2f<AD\n$7lD=kTY4^C!aC,i"Z
%P<-q3\=!`-/UAQL-m#ECDJD!:fg+o,EDpf5XMD?FR5!o<-,rZ=9FR;s$KJ!Q-<<qD=7?%5S@;qT\Us-:2<Sft9l`b5XrGo]\)Chk
%'jN\t3H$,\JZ^2eG#<0&I\!WfEpFks#+E/qgj07k&VHC>i2C^_"T)eB&\'Sh,,$84MSPJ\'#Ad2&PWAj5.,YZN?#2IBGs`h9nU^Z
%qK'q8V""_)7."Y+93b"4DGRT#C%eFd`u11U);G_lLOQD1q9g:aG:*i=AX7$?[V<<oO?!q,U`%TSWIGRo\'>>#MYfLq!1m=o&f\YU
%o2Lj>#,5t8cSb!doq&VN5tm:iRL^@;^g6mH#o.Z]0IOInC.&E7L?7B?R6@?8A56UI`_D#;lQ-iI#AjC[`>SB%Pti&lE*A>.TAp$L
%Ap!d8i'ZITH("q8KL/K*F=/gm6W#fK\h#V55r*>&Yi,FYJH3sR_1M8W"V8/o9'=Vr3U.K%"&\?0KZn(+V-CVTM2`_A:ki/28%`WY
%d5@!Lo@SU=[D\iaorY-[kb#:E<D*;q<m(S!!rs3b[6+FF!"]B:^]Us1Oss\=m.14eK%&,DAD#F)huU)C*jD1qNP1B>H$66tO[FKq
%D4c,+D:E,=Ge:d>Jd';"r/(%'PIZ<n:&IR*U_A7;,krVc%%o'i7I97-J0u>`%tf-MKU(>S42nQFn^4K+%E2UZ9_3589Qpui4)f,S
%;68AuY)7FKiT!ol&Nqha!F)?ES%G$Y`#1$Np($$E3NFIO2Qt\`m:gmYQLh/bZFScFAThjrFg2nO`3-G'h?<J?Cl-=GZCtO__X1P2
%YePeTgs[S8M32C"aD!/H[$0n(.s85:;SR1"ZU./D$r(4!ecfa879c!a]O.A-S`9M><BAiB>En];_"EVEr`Q3t$>?Fj:eMm[_3Kd!
%4_Q>$i*=TS,=<-U=]s;p)4DU$ZIl##"9W<=6GK%N'.Yt.$2Vn]ZJNZ7.*9W:=u-l?4]dm@7Y[d1#khKEKe+u9"b*eH$X%"RH:Y?D
%eRZ@UTa<FpX1bq\6W<Im>0XJ21,M.o9,[)#8Sr%POUjnMCfZho7XIV/U9$<ETnk+>/pM`!?-b%IGM3/^d.EF,#=bk4CMW?';fmb"
%EK$E0m^_$g3RK[j&iWH$RNBNn\^KsW$r,."C.7)%iiOBP&YA$@6a2-qm]@YT(_>TbO;r[*;&W?5K1D`%IXnHu)5fR<6.,,nR<$o4
%6EfVL9_n*MC`P@E4qg%AK$N2*PUW9*(Glo#WomB9*tuB\_k5\ddd=LM>RBu>+NF)nJkA_a[>bJe]f'kp!IjMZB+%rC1k%^!a-/lt
%\/d+aZZ&Qc;P&li4X)WRV&tld:bEmJ1iI@?kPOQl*9>T-)g^-.DGI`^5FXm<V8Vg2'0jatF!2a7E:4(%4,ij`ZXF!e81iD.^Ra@O
%!P5`(4(,OBrYiBtd@JJJ&f;!lb"G6`l`rKm=SoX/!:puLDK^I!'qd0"%tmWo'jNgA:^U%-isr$,Je$q['eJ>S((*+t7nHLafsubQ
%p>[ZQ4u,1T)g'bRY^Y!V^Su4Jdd,bHHq*)SAL8L(lME?#J$PE/]^0ann&nD=0/Hc)1(u4L\K@)0_@JcdQ^Kh?(n+]Aigu-&<!l]C
%j20Oken3TGC,RVtU'$AQ*P]ri&YAI79Uq`br%gP^;#%2I(3<_*MN?J*5r`;^O\Ca864Q(/YdlPedpS5H^&>hu:'RBSY9:Bl\T2&S
%Tt^Z[eeYeL'+cW5[$s*Cn:&_F8tZ5]Fe"_"E?V$Wqpm\(THQNs&?jDXYKmGnE!s`2NU-ij][EGe-]m&/^`l5C);#j54o%?PH2Tp9
%1]#rV2LYn*s8>NCAh#7Fpm=ScK!1Y8$sjj7Wdp5\!#c.W:9p@[8P)l0=YWNt[sX3TK?f+57?T\Ah!C-UFN^[4H,JpTA&o"$80-No
%Bj=q@fCX71H#:eoYr'N\@7)-U%[[#Lorbh>ATR]]@OFm(PcI,/F;\>7)04j<9@9b'0:8Sff7UF!ShG>5?b,YhT$^b,VT$6T:i,I3
%>e4ZE=5sM*KN5rclb7'Vnd(E'C@]Ef+qJ;6.m8^*,*,p5=dbH50tq#1H2cH\Tu[<A]s>h%A<@,VDcV$aN\'`L:SUr-:EnK@<ib9e
%kFS`r+"N73*\k:DC6]d_f%dbVlh`N]NZntr*'q1Bl62!C=.%AE,:HYS<gqDf+J.RFUPRZ98TH6$8oJN6h5hlR9Z*#]PH*@LA/^cp
%&TXtW)]=ZBM/E$k3'GgO(L;NgVu"+fkrV&YGC$:XoMg<ol)EgJ'NGE8[Vlm\=AK\=_8:6KQEjf+e7GsBJ5e0!!CUIL8[Go7(8tGG
%W4MCWi3tMo%5r:mL2:]KkGd)5^V0ADDPbr'`TCNmhEfArg$%58c($%k0hBM[9Od_qT/5upet'C"4`f;*!ma"#`."1sr>GmORG!fq
%M;"HQkL6TNQ5\Rp@0$bO_SQXFC"NeMkVTK-Q-3fLhlp^pjUnVAp6:FVS+C`D;rd&bH.H(bUAD^[CU@QlLd]N)2i#ng<l,EQ:n[&m
%Lrr=''GoI3WNFH_^`;eV+RENGYbFLY1q>_rB#5),#>$8"P!dj5)U9$#)O1XVUWCq/05Ame0!Juj'6.qbJQDWS2)H&I"O2$JF.b#%
%UQ&pGP8H3l;'3asPtO'S4GZHs6nPT]6S@U1U_!f)m_,F)(4Le498HRW./o;<=kc5kE6u3oMY&,QN5\,:FQ[I&BL^J`]^oN)TT;pt
%hh2XElF@LV,NZTlJEH7Bre84(P&91b8Q+_h80Oc\a%sW-1;06=@2*s+&LTaE@\SBG@Ml5^A7qf)/'f0Y_.PifNH9+19=+nE-P.3Q
%$`t>i8G(fAisT[fYqcgK?OodZ8iBbp:J;9u?ClEK#PjO2lC$>9ga9tX'qGWdqLD_o.-PQ<;Z-"9h-Z6!I8tEcK]ZHN^QSme;7QQW
%.tN?"/Do@lF)^W\gW;tTos<OI\b^3q$h*uBOjYuL3s/[FQc1(2kNqs3'hIpgB>9WJN`Kf=DbO+[18sOHI=::Q]1qkmDfCKb1?d$3
%q44C_)f!+=<-@A#G_NK]ab/KjG#7Vn-SE?(SGdU@ISb4DO`a+7jrdjBBL8>M3%b`VERL-VU:Fb.NK^e%/!G4"9`7la%<;:*iHbK"
%7*"O;`3Z@k7$8\:Oth'-_bmX>#2-#GiL.U"!OJufHU%ATWPd31faJl.AWCDYQ7VSj(@UF.0[k]hS+_uuHjYiB4:dQ?GkM2FFD>q!
%F)LE"a&saoQd1kWT]6n?)Ps*ZXTsp_NK:;<7FW!.!'Hj<e"ThMiO<n27"FJZ[R[C1h)Mkk%j#(A>)B;qn`f<HiF1=CPb]qAT"!]K
%E(7p40?6/b43CelRqIJaCPObZ=6R>feCXCn&D-pKIe-j:$9*DQopKV_qst"Ds,seXkE^U>:T`O'q\_r7pA;dY):?A1%d/;u9iOb!
%cUAH@c4.N9/tJVq^iul04:&\,f*E(>DgdcJW<dli,[C.DC!rR$j1C/,$A0_Y'16fRY`"er@cSdGWY?FlpS@G#pN3'IfX;n`:iU^b
%'HEpW<jnc?2/_g/Oaq*k]!_TDp&:uWpX`C*haRsdP*F5SBNb:[pbs'H\22p=F:ZCJ1sW`[?CDA:CV&/48fAXo^F>9U2R2Vt;XFYR
%gtubjhgY9pd2&nbqs8TN;jc++oJZtQhO0tm),+142/TKt:\pji?3\4dNUWf<;3W?tC6"s@I=:QW*_'RZKo2)+FbIr!h;&Tih9kCI
%MiAE^%m2p4;>,7qqX,.19cK5T9V;&T-Jt#)4BD:PY)n$L^eNm-aAs(pk?X79<.Lq/bBCFK&nk`hPkcL5f@4?a!i=0H9a^SN36R't
%,DB;DoT!5VTf'Q86CXsFoNITQm7)IN`U8J-EGjbZKh(S6g0Q5Fn-nJi5k/OF\Nedi?PLie/m[&5-ms$(:oY"UVKtuWDW^i*\AqYG
%?S]a\5Mr/%+Yo&WB"Rh$)-TN!%m.,7kkXeos'Y$IhQ?1WU4%1ULQ0*hih?k7P1ACemHf%sLJKS)C[:C%C[919o*am-FPjE,S9sWl
%_Cd-jCbMB`IKWeZ8>9$RejOhljb0RQJue$lKa8Oe)>"]YUOa&:N^mK[WbG$,'a!V".EmP7ZSYLN$igZhp-q9"llbXkRa6\LWWaDt
%$8E`4+#QbCX+P:UU]rE#C\>t/0`)Ia$H#3jSTr*abceU6FM9F<Hk*MN=HSoiDs`sF@<@:^&m(e$^V(:J)QCWi4=.PucOZ'ZekP`B
%F9KE</Z7JjJuh!"gdhoO"E08Q:Q2VdTt`5^oj3"HUm$CGE%%oF96)#ap&]@1A)ds</O5e#4(#Luc7WIS[Uoj8o)mq]R%MlWB`X+E
%7O[hI/1aCjQ`InJIG/Cr:&lZa,`8>h"!imMNVIQo</Krp5Y2OPNkf6-$5,4MK@qkB]@TI&M*Pni)[9jnQ9f?pM:PCq%2<V$#Yf+g
%lSYVIh-Y\=;"Wr_8ltp9>pqPhQ*=qn",/&i,8?G+DT"n;0a.R">EFq7e;Yt(>&7"\(^Qo"6L*\]4LNe98A3$[,t[J-B%qA,cI!2`
%17:ShWgubc;N)WP6(ssD'_8Nm8dm330iD6!5Dips<ogd+6h$lg`#H_q#<=MP:G6Zam$N^LTH24?^Z0@)WrooeO3=fZH%.<6RK;/J
%)<;9j]-@EFO7Kn%A.kUZ^[bh7-+Er:nb!4#PVD-^/9JAl@K10/`A?&LU4W13)VK2^Z$14kjVq$>l.$E9#4?29)fLY"A$g=be8g6"
%1(V6CGm&sd!OVRq!m'YiL4%q<L`5N;8d:VR&s)8j5.oqAqt@2(G)$(d</l?OP/SXolkfnu4hKZN3"M]_$Qr^RSb2%@L255+G%"#1
%b73(k:j>>U-Rk9D6+OPp3D41N.RH>*e.QbHf\B[N,`K7f&-$X@47_LeY.K2$e7%M]b"`:3P*&31m,3oELU-X5:tsN<q"W*n0n;?3
%`$m;s<_N<6POQc__9qnffHgBCHZ6>!)@o/>C_XfC;(gpg&YK[Nn\@McKp1&1eWo[h:.gO@pIY*<#+j1c.k#?BP)5.;TXEs?$W;(5
%ZTa/MCcJ/9i?8Uh6l<:&;'6?LU%SPiA.!?i'bWOo`'SRb<G6eaPII22js,SZM)ispD;d#2dG6jH`UT+%q+>mbKD"G'%%d.[Oq`6@
%]%>:)I.MbF7&"@:\!&Z4)kEho,R<I-h@L93==9!X6gIt3Dg%F9oB(C<LdXtuHJVnVcVuo`VN!He8BlA?M:l'2XJO3\2Y!)8i1';U
%r111hFFm'4a$I/0V=Q+\(<Upj>2@^gMj`DW5,g)NO/I=["(@L54Q*^"mG&8\P6akkj9/l<nEI&#Ec!N6Tt-%ngA>?8Gj/3V@cmsM
%Oqg>8l?NA@?Vej7g1n2DSA`boM=T6`:m-$;e[@iO/emMpD"Eh,lbp8JQq2Q*a;3.;oB_$DYR&j@n_p$DT#,?%_Nf"bDtjg\+>Sg0
%^Ni(S!pGhW&F-W;Gj\ct-gmPiOGOF2Hb=(_>4:B7G>\)0]6@Ma%MI.WI>NrE5!*e0RV[\)ESc)0FLDq/mUSX&Z12?m;=&##BL'(-
%VA(WY^I'#kDl@/hEfgC]NcoBnJ5@j2ijf8HW/%J[#)(D^OjUpA\WD&DQ-o=o35eV46:?UGn$O6-,d$EL^19HGJ_bm482"oNarD,o
%+;D"%XZA0!l@H&pTl_(ep?:EB^:<o^XlLS*]jg:nb`[6dXX&*\!\T_3np\2OqYD6IE"UbMfPF&njl``PhRUKb<23*ddTp>g'IOnB
%B>n3782cb#]E*0Jk[bF5<Tbp]OpHFZ4K<P3.uUIul8QBn[i[31`YC@Eg;EmG/<.C9V[jGB'l9q(Ur1dN*TsT,"kVj1;p0,?fA"jk
%2WM4I"=c=M]#(d:5*X$Ws)&L7_%jn3l?:HpXuO.tfYnr<M5$MK(Nmf/g32?h[<O&>$<jl\X8*Ti>K,h-InS^5K/9X4!^\mK!B9G<
%+Q5qG?<NmCP7c"7jK^U[XbN!Y9RLW0+dkfVW>d7mB++Z@OPn!to-W9V&-b"(=KUi,LflcJ_l7EYT4rL<DgT**kb([tAV,chg4&>B
%Jr7614Dd4]oKJM!XniX&0C8u)p?4,hk*?1r5$^?D-i(0`(]4`EQ/]Xb3QD^DIp3@mUJ%f(='%nS5n67370#i7'/MXN+E0V"rDm"s
%S?(c\lJ"Zq"(K?^f+hS+XUZr1)ep:15m`9iC^3TK^U<LVDH+%BK,MF)b8RbRi_Vr,f]BidZW0-S_Ia1qeS,JF/WZ?rhf`2;k`Xr3
%[03ei*2YP"&,dNn4R7!s$e5#&U5\^b.D9gBVX8*)lPu)Im^6*kXH/CBPl^:adc>ts/:Ip&2/84rNR]OT;e-;p<(L]=gal6j"U.Ea
%qr58^JR/a.#7K]_'EU^.&7gM.JYT>b\mCmi(2M7L0]8K]<AM,/:U;pZZ4:RpLW?@V<?p)67TAhU4>3`=F&Rn#J6DW(`/p?pBB;#B
%$ZoR1R5U$W__sqk'4!ea&+sUb&%k9k>7d/PD#8,9*Z'H,%/Ub4eHSA+@-Lkl6,d!Z6(F_i#GIZZP?aPW=/4dV#^%R7r@+;(:iKgC
%5O'*Gd[HK;`AJ26)I6b\I'[qF9Q(OsNW2MYd]sighfB2Km]Ga8YWYY'HJRH44ZrPpn,BU"&HHiiX`8=2DJ.`(\aYZLb>J.REGrIu
%$5m1r_U8@+F51NfRo__tmKC1f(5C?X6Cngj-/mA2iBr7%.da>74*].qTW_2U-J9iZb!8l3ku"SB]nXD2ZiPkL+;5)V)[$je+rF4F
%%A"!>n5tR)AOOPk\PtO%p#_@?Nuao0A$A0B>T&5Z4?'$"Ms0)lON+#t<Wo+hddj.!76ZoN0OpdF!p,Q8=c?O9KRqYsJNnSD&Fg_*
%FNhu]Z$n\"n2K-ZOi<4i*l\mT.4qW\<OMtH[n$mN/'jii_!ir(_QGZ']N#\O>?Y-CM^l?kc^#=^2DdLlI1lsRReh@$VbEg)O3[Dh
%2j:Q6Sjh.lM[+Wg8T-I(++aF0`LKAi),?!;Y2D32cX8=L"ARI&b^`*.WHiX]@r/9lrebR>88!li7M@KIL<<\$[loE07u)u^D6^"1
%Zc^,=nR2+pa=i><<'))-Q#uO6Z`M]9n.0TY3o;/[EE+8);8?#3Y'qV,B_BX!&r^SIK0Y_Vd67U8_8%?^eRa%1]OiS)Y+&AD]e-A>
%>Q(,+Tg\:(%U3[_H%g0`0_5dZY#._J4)se2A]Mdn\X72N;7)fZ\kh"mT^n87AYd#Z>*dT;O]ir!XYtP'1VNY0?f-ZRATIJ#dmuH7
%:;W>L#Q7"9EWd3,fb[qe@I].?T*+?=f5kIW@J86JW?%h^FufHp,&>dV-gVHieLYEX9sR_UeLYJsSRL?]@st`42X@.JFY2Sjf#q!4
%]P:_\?s54@Q2)b)BMY&G8qJ9M:!VA-#,W%Ef:m8\GVG?b'r20L*>RM0ggBk*Ct:fF`=jl+N,Y"D...fsb'E4#)lg]KWjl*4cg/1d
%n6cDP1UQDsWH7$e!]0gVgB\\FiXF$pc",@6C$Ck8'1nPLMHFl0&OXbU_fhlGM%:EA$2@*oCf``Ue"ghDj>="gHo,]q[(W1GWAHMo
%(2;;+9l*@LHF.S.T(_I)'2%]n?eP0$4iULUPnepF<c[_"O1nKgh>O011-mt252*)$HWRHn8Nm^[<\6HEmTc'6c_Tl0._S)#5=lWe
%*QL>P__)@=05pp/jAWYm@`(S<-1lSIghKR&B1f#D*Pu$L2ud^V*#fFV_9g/f1)SMW@GkuKD*<DH-mXKUN1PK:hEZVlNO?\0JJYp%
%c"\A8Mu70D;!>.U?kjb.cGZMkja!+*`IRW,#+7jIoKEu^71(&'2hbJ,L#m,?)9PJm;+_SsB&Z)j6kaD`W[mL[hs-keRf@-pjGe:A
%grdEK=`Y4M5$b6DkhXQUU8C8]!apf_m]3Tq.\s>#U6dhLeGNI-c5d7F[=B`+Wtl.cO1Xg*.)iRCBjO/#PaKDG/7ZhO%X+*d#dIhS
%EFf]N"4<bW%<qI$-n"tn+8k`SVB9,fqdK;jfQ9Gg^Cs:&Sa\`d)e(0;H_k;u#'TjZ=)(adrNNTQhMH3[l%]qC?rZT:K%i4)+)&IK
%oT]2\KiRDneZd-e_a,ZcokRs#Y``g3Yj)@#$,fS(%)(VT;p8Y*nomAS[K\!hR!FV9gJ6*SeEN;5b[=QK1p?dSj&"7d)!YBDL,/fp
%2"/:8I^Kb#8$#Ai4uY8+k&VIbXTGd^/70\+gB)n=5"CG%U..]Fjq%ar<Rq3V!$pUGMdVn]EqB5-8Ub=a@5_F%@irK$()sUU6mFm)
%Mn<h67C2(a(jh6%lqQj-O@lRh$3o`dl1HPDFa%::`au5ocj33n1?2`3,A-Fo:TRWKpZ@:"=MnNGgIX;)L17m1pT2C%Hg3Q<Sm8rF
%*"dsrAsHql""nk[0!"=?,]VPKI:GFZ,p0DW%]<H*1Wl,F36`arSG"QDr%%A>i\]u[)K[\W`;>PHE8!Bphb&@QLbRq<n<kO%1D`dR
%!?b)5S+L>/0uA<-,7k6qf8e1_ecl,_^I`oemM"c>4Q6^Vh4tPt1#fMId)lPnl^;[^&O]BXg]u<A@+K0F"_R6P.YO51YcloCp;K,b
%h7F0NLTPDiUSIc4[cCPL0&8&DUZfVMY!/u!^$.g[A#,$Q'63NAMq,?XR6[m'"+!hfZ+=i-\I_$KGKE6VHm2a'853B<)749J;rP?D
%?/9:=F)!ncnScp#1"1#/gpA$g/nWe=X0<PN9$FkrVXA=O^eR>>4%1[lUN-$2:>a\YLj1cFeodsO?LMm1-Od%=P0++,StOd5#T5Z`
%;kA>I\Qq8J\!GolA[t;%d:FP#1@L]9DMp;'0-Qe1K09/P'5>u]^<-<D2<N^EUAOgHR:!\JgtoQTGEZb;l8@_ho'h:$bV*=5U?VLD
%:$.eG0dTcEO)?_fI#Y[Xl2Jt&k*N8+="EnJ2jn$e`n[Y0n(qS]G)_?+8^M$[2=T2N]r6UF2=OJ?]i\%J=6QZnh<hnpli1Y9D?]d_
%590Yi--P0JK"ECD)ZE$tVt%d_?i#9Nn,Mjkric?B%h/2P-nsWS!YT4J<aiH+pR7#spoQaWa1Y2p<d9G`,5urDrT^.-r5a>jLMar0
%n9nDO&FW5lW5VaK(b,mm+o^30q[;tZ2)q28Hel/!UYfrA&7BHqI;7*j&/4nBC9Ifr>IM#MpXXG0<e$T_`j68'B=DK"V[HTJ,NsK?
%+>K1r-[6P^J'\W#j50&A0AfrSoU=<;?e!&,R[5(L!o5DI)@EF_c.8X'LoZlW2%'"*GER=Ef]LflD*r4g@GW*#Mps.RB]t)_Sn%IZ
%9aSL'i#7fQL5ou>9`]ZBY@1=O'2rA"%CgN4OQeE7aJ@b"Vo):W@2W?3/@FCQ-W9f4OH"#i)V[C$&J9nj\NsL12!as<W3ko(<XVUG
%?m,B53h4L7NX8K8/qq&mQS<n?2YB[#;X(1:%t"P17o5Q0rR)sea71).RMo*dgI6INFol^p!#-9YNLI?g1<V3pDP[p8UkEmp6])F;
%;fBWN\SrQ'R[gNX^gpt:W6oa72=!p[1GQ974EX$Q;CE4NH$M!AD55h7VKN_gd\2tgKq![reS:P_b]FO4&qUEej2WiZQV3OcKJ!1t
%Hgo8Ah'iiF8er_;?'p;![gcd,(#k%bQ!+cr(#D41+)-ue5!>n=iSfO9#Ckbq3+8CR]F50tnOL6gT[=<[4SD_[l%oI:\2D-8\]fVM
%4o^1]8O+VM,tWJL#<"QX(UP%B&)$iZ[sr^96jbhuK'A]b@fTS/Bic54mt*gB>+0<K'j4/'rG49s2=L%Z58(7clj9i]!CH-`;DTfT
%\%RVN4_BN5?A*Eun1(4\4ccu)^u<`LR8Bppq9(^PIA578!6BE,*gr?m5sINPR1dsu"WCMsMHFUImW:aF%#8f=2&uu6/EX;u.PHB,
%OF2A/gD([9GEthJ=s,:(`WN9Y!iGaN@6Fmj*KG>/3#-E&XV%oaW50d#!?$is.Fo3D:'&aI&__BS=C-9,,=#ur09BV_kJ$j>R`@q\
%,U(=s9AXV.1uD)'^;QWd7-V@-VgVX?@VtMj.8D*<+lZ^.i9H#cG\>k9^R:e!=#dTDkK-_SRG,EDTs"XEnD9V2@[oU12fnYWW!Q:u
%#k<C'6XProAZhEjbKoWKLAG52^*Y_7Mft)LV5DkL?bU=2*];rsn]>(sL8`e]3'Olgg]B>g)oj=MNSd@Ql&F_e]>ec`k+dpr)]AL0
%e==-jgb^mcpPr*X5&U9RC=^"O/2c$?DL=Z+#J7u>2-2tZHm:N>]>f_sml>95#;tu<)RlrQSQD>fC]"<McJLKsR@;<CNSC8kZK&sL
%;Y-mJ`pHXpQ/fjn;0.HO`[t#.^#R+NV<7'`NSd.K2]Xi+,rO\bEDd<qNT8$^Tk7rh32Yhqa,P#7k'5M1U#u3lNUNV(jK='4q6o>'
%eZ&@XfD+afg3LZ*]>gsOF4m^9]@;4?f=3tY:*2DCFclZ0L;"ulViMe[as&c1c0=6m,U<hnG3(!knRiOIc+1$,V)X#qU"!f4-O?F*
%6>!2o"p881p1o2%]X"g]40+O0'gIN:;8@(?O<0**6M@gDbi+69;UmJ36HP?(YYS@j1FS4Mh"-bNUPusO-hJ?N\SsDB%+r'rTTWtf
%!p4=ULtp6^E.AbFr_B=Np"1;j)J0RWj?-AWqWMqkj($IN7mthmjSZNbX20?^QisfjYfi8umYei4>P(3O+>K&gE12&r5m/(,/lhV1
%ac,]QeN;9>["0%^B^'NHFYV"VkCL`3]n6QRg>m"-OZ>.ge/C,/^S-nmAe<15m+JbrkqZkKSpY7j_Y9[Wa?Iik=d5%tA]Y0tUH)*'
%qb-H8_N7NX\+WRe]i9Hsla:+f(Dq=qH;');Hc8[ikH9j-/M91-WeDq#G`*r'kN>q)lpm['G4+$SK\N;7S-h$_&lTZ$mDQ@J#qF2p
%TNX^(AIQeAX_c0aSp8r@9.$dEC9;[RQnD65T?/lgpf[Ypj,FPQ[[,'?A'GFY\,#ie?YB]WB1&@7?pVH!N2l!@Vken!=Oq?c,R)&'
%$NGuL/?_Xc,?I?8MA;)g'!0!QZih!COa?9T>RoJgW4"f'9i71a[`Gl]0Vu@r'7F%TB*4,&K+PX'@U0K2jmhpMZH`"qG2@oJ45$pb
%f8*nQh(#ru:5""3ajg*:H-Pm(V:fLbq\)h;ll)1+X$YAKUh^NAM.TbhUGi\842XljG[Q^c..j1'Pb:/4q"CRF;FIfbMqj;k@oG=A
%^%=?bF,ip8p07a>IKQZNKPMPn(d(8[BT3Jd9a+%3$SN:fS'LI/:X,@9Ve"t+eK<A]D"Sq8c7/;DO!l(&?lP+VC]Z@Pe/a)A>qq:B
%H/?Q$l3P@]Cdg2AoUUN`%jB,7j)Kd?*sWZ>Rl5DQ5eU3%$<_pp,NHD8GEd'oG^J@"q)`uS/K0#jr?,/S`^2a:=sr=&S`2)"q4U:-
%b?Tr2:t>q,5:IdE/R]LDoB/&C50>3VSdq7XO@*X>W4Watemk-;Vo]1.^VeB:\R^O&o)94M"F<j[MQDbfH)aNLk-eZ#m>fp;JS$\U
%(,?)fLpBgP1k>."==u.(eE"d=(YR&*#-mrOi?.9e./^1XTDcen_!`B5T?I"XlOHsm;'l.TFnZ\nY;b5Qo&r@@g!cZV^bQbGi&K#d
%JE.R@SgAW?-?5R6$(g*XqL3P\(Vs"4!UW0Q**.&A#2h;-i])Mlj?60-(r>f+a0Ond*k_]$J<;+)aH.[jnNd)M%pK*Bnhqb6cp-tL
%,!u=es,[3O?iS=Lo<82f5Q-*3gOK1js7_$?fDkc`)X]1:7\bRp2a88i-tMe*;1J^-bMt]Vcl@HE?rKT7T`mDI"%EDf&K&dqp_?Pf
%4ACHT$Qp!3#3/5aE&^SJ>=b2l-k`;#R\Og/4otE7/o6Xi4Ne>P@qlOd`!\Z@K;eHh:YK+C5.J'cNYgr'F$+6G>EZDeok:\/g\'Mm
%I51'd-N\\!pBcu/XPW6Mh\K@*I4a!OXh=,qE/eS=X$VJ0p>;:W5DJRj[]tV-i':i!_m(N%5.2CDGC28/;K(ts"EAa@&0jX&/,aer
%")(YQS>/(WLVrU'X%Ds$-H^]N`sfK^+D/IYXXK\W$>YAW?i75oC.I,amJgESa=P?;Ir$/;pK$pgn@%Q2LV<PspXWWh8)%6bmZ&'L
%MpR(!clSqX5*l;A5jeX]$R`bR*%l51EVe"$)/uk%gVs:g"/j="I7_ueYuoWk$ui2g9"KPB*Ssm&FR<b^A]ID#akOg0\7h*R'3KT2
%>7W(uA_5]*]>F":0<;+(#&XG\decB)TnTdN"R<=+NT_GADpR7(]b@hdKu^hIA+F`@/G_-U""eDq,93C\G5PaHM]R.QXfYZ]f'R=D
%2N&5?XU-ui]R$PDYU5g=Mc.+>qVi21I3'e4G6:[]kE5]#>ThMh4K\*_[@N?5'=I>CUOh%YO.(.pPA;mocoQTa-&ROo2rdD_%UucW
%N61NTRHqM[jK\4j0Z3m!rQ'WL)7fYRfA6RZ1\j)Ub(IMD2eVOC;;EOF`aR)R3Z=J>B=Mc7WpS>>@f7<QR.Nm<'al!(Q*A`,Z2?:-
%>4=>+fH;`L0+5`KMGcB5kLaB/l:iQfBb7R3m6P+":#\RiK2,,0r'?a)K[6-@ibcgfA=r!rcQMu/??O)W7tS`ZNq-[O!Qr$,9KHi@
%N/A82&0n#0(mr%k<eHO<:.9?`$j,VA0*r=6dMpK3lD-'+(g0Muh6I5IeoOnDO?:r,!**JeVueAh6=JD`Tsaef/W`Y7JGg5WhOr`D
%WRL^.'4oG`)q6\4'W,sKlW8;ap\*4:WO]+FIT<;>c4Y8'hqDG0U#m$eoa<ft_d#-o4hX=7I;c%N:W?W(ZnM+([o"BVGhkogID*D0
%K:5_srU93^/+qMZWHi]/r2lN5c2P9q2'32>^T5hdhHs?Xk"Ob"2g!dJo[d0D\O9Qu[@R#NrUg>//f*l)S_(qApXeT,q:oEBgH/,=
%Y2?uc?`CfS^!h-Oj)&qm<tF'C7*X]MFYfS3($3C,WKCKQDkYX_Vp)\$25`CRhqVpI<dn>4RLb(.hrpI.qb'Z;XOo0CRgTQDdbm?i
%QpoMMZFE9,1#@993lO:O<7:3Hp1;:0DENe:3L_Ph8l#</A_3ftUaKtI0c.XD<=*@DTnPX3f?E`EDJBqS1YO(bRVs3m$P2WXhKn'A
%Y/X/(SuKb:hUq9C]$5J5qNRFqAtdVQXo%64#M"Qnj8D'DTY_!2#\;1u:&++#HVd70MiQENlh),G%UtDud+@P17%hWV$'^?R0=CH3
%TW)fDL!11YHG`mg]+Z%Ij%*;<0N_J^)[;3Q<(BEPKl"]%A>-qB$"^*<WeMPiBR'.\lR%4L`nNkUm]EjTYE+C_ZDIU>9a\qA<$DpU
%]tVM\MVcu#&B\+_Rd<1##>N?2GH]q;Sn^j[7(b[9BTA#s]nqnWoJ=j]1<$@QTHh6cL7rdjdXP#I\1"]-((L7";%"0JNj+`@.[<r)
%9l5"8b>c-4XK!>?*hcCY_OUP3V92lohHA9b`,`,kN"Z7Pi=;:R(re7'cMe`k^:'pW>A`dWMUlpYBYAuU;7F.jhKu!dOq5dral?c"
%]8^L&auHAnGk`gN%skNd!ng7&T#i7t,!baMg=f@J5`+=?orRChdi@+;Kk!,4fj7,-3&l/NB/Skj3ZDio*T8*NUP-o5F73-T,M:/M
%Y/,@,.Ur7+>_Nh;^.*:LZ6-IZ6'GOW#]"B[VSYXKN%peA)SG[;VGEicc%qjULR'UJAYI(j'6:"fS[6YU6]FSF\XF42Z4k+a+iNs5
%$;NFYAn8%5,2PA%=fnNV167CA`IFGHqjUW4B%QZ?,XE,P;=(U1iO$MT'Y,7jA'GXMlN[H(c0[+*D74%Zf%R.Qo8s\T*G&rGo9H7e
%6[>!JH']Z5R&/G7^fRDr6J=_"Z+`<`o9*X_*"aa+D2L=0M'ZWn8Rn/uj5lUJj10@biclGQFq&R2QH+5\KL7FEc#R3/kef29cZ:p7
%".D6!.5(3)MfT`O,1@R(AS?g_9R[Ju*PF9lVbQ@.`n_;T(/uj*nJjtR'[(AFW(;Yn?n$]*k^*;SN'M5'!.7I4#%T]JEu^2BJd)@/
%ZhG6,,Uo%0:Do2/)&b[^8JXM-i(#=oj4)(.:'R6M#i:CjJT($7$/`=OC#$*%],Af%91S]E[W+NSb$8[-7pOA4me]]03;st>1pU4.
%3;T5?WB\F<9jj(QOreNhSZg+_@Odft5q1,_7D"Xpk>Y%mlN[H,8RWD+_d03Q+=s\u>V=%`r[Xeb@@k\Oo:9GAr+T\*mK@=qV%/>^
%U>3:0V`#GQYSN"pd&[Un)[AR5KcMN^*)O:Ac#Ji5:/KfH\Pu4t?7_[fGkM38k`1EmH<^uZS"4?D[3CK$^@g5GS^I,r8,D0o7'7UN
%Y9feA'NYZYIn)msd=+$&fO'Q@f%421PgrjR2Bf?J:Y3"9H3Jrfd`/5$,oJt4orSbP2R/Q]1c<&EFjbgm0rY#r0j!_+^BAi?:a=,W
%+8F@X#Elcm*sCVu35../%)oTVktCDhm/YTk6^]-*L&_jrOD2)ahN:C!'r?=h:,^%B\j.L@Z>KM*1/P%pK/ULo*c]Ui2"CO4Z"S14
%P"Wa?K4(MhG!H*-Gq;E#?M,h,Ps%pr83Q07=)``"a"2I^;+ZX7Is5A%a$A[\X4;?M]B]U2eI.6pQa`J9d/!Oo(Tp]LK*G7Q9Ukk@
%h@G#4T8,X'^>1Wg<ul[^Qq'f(pOTFf+1umaMk/H`5VE49mYfV2J(&GtMn`tO#Q<Pe]S$3%>2DRF>A7d^c0ka=4]X+5#5imW#Tin@
%U(@ui12#1d-O]_&q_)3PGR"\!1',1A3`T4Ig9+Kd>?r^Ho4<(0)7ie#jrALn'T#Sb;g3>_NCftN(.@EG<gO0@>bFj:'1_=ed[a:7
%rQhICnYN3^j7JS0jqX(`BQr7N9XpO5)Q([n3e@&.":qA.h_I$p]4:fQ,3k`b$'<Aa3f5;5+'WuTj5m$iCb6$/H!g.VC/gu9%9:Lj
%9e+JrE?R#T<_Lc?ZGURnN>kZS",1l^1l^9jf"P*3]mNqJ6'.;Rp-?Qm/9MZ)7ncC)"0KqU&IiO%@uk0coE6,<GgoG?=.*qM8sQMa
%e$a4)J<e(&7Op,$@o*[R`9`YI@Cmm%'B^N%Hle>pgbnV8+9>+$*mmf]mraQBK5JS"k=2jM]\PLMG5RAq_']V!8E1;Ghk9B(<-3L)
%[an<Er6qS.[SBLuIpCt(U=A^tbSM8USe$c8'fM<9*lt)G3C0F71!*B#i^YcNlpSWcQbi-3U@dr^4;na02'h[."_=QlhY5/Vc.%+n
%W405da]ERiTXVtkd4*5l2%m<nrhonDCt.Fb%2j@M6A1g^\0l/k(!<o\Ghc54Jl]WG-\CHH(2-[\75ih(PX*<na>-n@VLZ_A%t-@(
%HH?2oYPpq)oAM)\b<<\!k@L5ZGB=j/?#fK*9P@^X*0plBEZgu5d+')oaXLKW"ir,LJ36VUatXaTmHRu5Q)7:*bn)Bi8b`]j><g0'
%Qf<$=d1"%b*'?+l1s+d:W!bXQGPKVUS2Qq?4s^Yn^8Epueg`V/ZT(6*"O;S+b)ITY)Q*R*1#tJ?!Ch%t)j9+r5Y=X=P/hO%hC-%X
%HOFXM8'rRd!5h10OZP1C+$Q?;T&b/&FKJ9&K4d1GGbU+8*)I'_;'^?#IHo?r],cUjQcAljlIDLfV(PcOP!;7Gb)6$pR`4_%?Haq>
%huNXQ'W_K`BZ(8q#fYg?\HP@b$kn&<-.T*0>OXiG5L;!,WH,]4(<ci$4QdJcJ-eS&LgO$:HFF\%k,]ChT@(-B:>8j\b33'9UfUb1
%Imr7Pd"j1'Nc1*;ktiiM9])(sb]V:2qb5amA]pfTAABHtKUe,VT1>%4"Uq"SOLk2pT77B?-LiH\ZRSqR_@l`UW*'r4ZUt!"e=8a&
%5DYaaL?]"Ao?L22>\`>SlK;*P4&g\<2*5Ks?NYcZ27oXVa&')pY!5lE^sH.&WZ.VnMF2MRe6HF\DNC6i%+X`Co9l;`H"nrMWZOUQ
%=[Vl2W-NlkIO[5G6hS?r3>eb\KUOK]mh5bP-OY="]`-Yfi*1s$[kmYVL[)?IF4Htq'l'm-<4>?Af7rQ[WVPUOh)I8.%b8muk1l[,
%=k%gU<'QP7P=,#<WAtls5Co9j;#Nu8CsdX:]`+B]/^OAee>s!7Q+$Mf(i#k@?qo$uQH@3:;-H_LBL14lf8J'td]EMD\L^>\1AeW3
%X[%RKeoqc?S<nd,IG#bFI7It70[0:LQp$HdcE>iqcqP9S^=,Y:l^kFbD:Y<iOnU58_plu"DbBnoF@BnkH,^lPEcpfA:"VjPra>+/
%o(<nAoR9V![0oS-Hg!\\Peg5feQQ&*FHion%8N7,'I?69;Au$?B7b)42*f).+`DbZkh1/rV&W6okpVWdk=Ou8'BR8Ik,h+H5V=If
%MP-t1kD^hm2F/rQQonEt(t`7)I"l-Hk5`JODeIbd5Z>Y#EF;d8nTGP?D:'7CP2$b-OP_M@Vn'YVH31T_Y\KsBU/`%frh<W/Hoqp+
%j\dK?oQb^6:1XL6#ftnC^Ch_5>2]ptf:=T3[a!K+5VtYf*PfVC=ifOJJ/f2L>IOZtCM@0BBOYcG<DY=#\sNtQ.dU73A1Jc@;G/bG
%q2^[s]6m$l(QtgAC5uEe,T<FHOG>`m`(iQJV;s*sX[3i\X^I!>a,VNDfV:^*k&EXmb"'=o(G^uZ90o2bdkX+h$pM:l2h/C8>*M@b
%,Z;l0_dgh*Al?FBGdOHK1H%\+7dAOH+\S`e*G0+:[Re(l;kOkY<D=<qg)%jgJr6e>44=1(NU`.i24ca=;G1*UfrM="N*@GE*(tc=
%B[ld4@,U_.Ne6egJN7&+W`dNND2T*4Wq3k7=9:iMY'>]!3.`@BBpQR8^13%\9W!)UhhLsjV7=`B$r17_`U_)BS*)1l9$)1*mc^M+
%3Ggh3$\=I-IGij%L*GN]9W)hJ4pO2;g]J>Y'6M)hT;3m,AMKe;BU[ira\j5$0p:ZjQ<q0Ga8qKE6'1IUPirH%8.'p[L'tk@#eM,W
%K.i5T<E#Ogd)gC/rrMd+r!sVYj+lX)HP3"4A2O5iAL0-75R;W,KV;r`UGsf.-utV-Ik3KHX+D2B`9mlEK"iP/bO9m/)rq1kf]k*a
%1/1r!ahf!3iW9IK=\;B:"X-Z6&5CN5+p?6A>OfT_;<RZGS?>`)A7R`q97jjGFXC10=F<p#XiuB3gSd$<WLX3]FJpKrT.ILSeS:Nu
%(Y==J6I^hRmp);d-J#?&h,P@I2i'*)5VWg>?6P=7Pbo2C>mZ<dqrE-$$%G#6]QHJ.Hb7bfIYH$eR03&,^4^fh';N6tK<aj'>i[E7
%aj>;:ALIA8e7:S6R]a9A3'Tre5hX7C8kg)$;0^;cH.h7INhD2ZB%!5K/E%_t#OeQ^7VLA@P*8_hRch.#C+M5*rp(70bnZrNS"W]h
%6As866d7!9HtrAf;V8WZMP!YgB@45riOj33L,5lTA\mkGWVJrUpG:"ZZ-o];q2s0S&l!A>4fS?Xg/OL2O.tbM"_CMBgGST7.T2L@
%9f9(LbVr>BkKmm"YM/c>5%fqX_Yn/sh(U^Y.>jN_q-kq$JbQcpP+#1@Yuqc^l_F"@)[$o-NluI]:LX?,kVVd2kkNSS9\ul^,bCO8
%5gAK=(khfSn`puaKlXPB"4V^u^qb)rjHM[V[/GVZ!#87G/!FpZs+6B_oTi5Jk#h["Y%Y(Z2&80?*nm'%lRW#D(YcYf$QKoQnQY0'
%=eO9K%5kE=$iM(sE*NAPcGg)J`WEBk);>>RHWf:*8-oV\$+.I>"iMT&l2DS:OR'8_R-jok(4]?"3Dbo'me#(TFVZqfXP+/H"i#s!
%RN@Mr=6L"CU?66^<q[Kg@Fk0g=[4O^OoFfZJYSrIm6lCH$_Y?><2kW'qV,02W)+!+c7eF)cgN]_Y-*^FDhA4RMAWM&E!63C];NNF
%D;r%F!_:52(B#Qq5\fr^bDifX*#^]"<p$U0#J>pC)XuKnJYU)Vf;ZFSX0@+V.#,Y#cX;=a@eTS>500)5q:hS)dtK7bR7t?%HW$C1
%Yp*EgjQe]c%Hs6tQgI_`VnO);4Pgi2?UODj%,TY/n3ZK4JkjX0Q^Z7<.%74"FFl>fS@24nd=4Q^R8b/].GsLtSVh,`cTWcV&/I5T
%_SE+Y@,;R/Va?eGIOU07:[5;R=g0"<6"?Tfo$P,7a&2G^694(bbMD"'Wu=tnbR^Q4CM5\UX^?2gMjZlm&"r&8BF6Iqd9(X^4o>oA
%I(o(g$P1/MT0gf#d6*0Bb$`Y9[7ENNRa2]%W+r&6Xc[3om>"X33AcFbUU%XICA%G52tAc(q+OY/bNZ7Mh6Z(1I;G0k>L\$1NE%hW
%-nOgXdii)]k>:c<U>SbscI5#r1a?l6`i8bZR\'8:gJ1r.=%CBeV</GF=VllKZcb4&Y4e3NF'G3D,jM]l=l?5tcB>$YU?;$@TJNL\
%UkFs>k='$dS*RH3\`n0_E7ellmUrd).b)Rh61ZrL3%Pan[jL`g=?tB7I.j`.UJB;&!cJCsD6j3nnr0MRqo2iFf"BP^hB33e7:#3c
%_s4G1^i;Z<henJY!g;RA(Rr6T?8MPqc*.0t*aRs?>[1_3g_=DWkl$rqKD]XOGq4*0:+Naf^R#**#,Rk]^\qUW3%eb0qL@bXH&_^t
%.s7:R`<9hg4RbS/2md;eGI#"MJZOBNna<BR15aQS/&./L%L[t@oQ%B?g_W#R&2PSML]q>:#[]:u4K$Y/Apu\Y!lkHe:L8[&ESb@M
%[#&ju.bon'J[&m:X^@7q!ho]LIe,+0=EsIaJ-W9o!jDqlcS,O;)&>1]SFko\"\5+qeTUjJncl&g)Ob2IpfTfUfLb.I=l?7*=+%(5
%ES9b_$XRMLG'bcZ:n2Ji4&m8HOPLa2?RYKAfqDL<M5=.9IY\DNS=2+*3TZ^@g(N<7/\OGb5$tfC)K![?g1C,3eoY)L/+LGOkd2S4
%F_/jpNW2sm^4O?IjBpIbB6.kILK!eu_P[F1-Z.5hYD6OYINgX6*K:7WV7OGUI9MRb/S(143=8.`2Bf&l:paUE&5^G^RWBJ<_SeO_
%=-Dq6`JK1()Y@K\7+[pb;jH?713B71=l@(#-<(^IR6rgtXJ`3E1hD0k(s$tB(<V:S1"O"T2ucFiqQM?^[2pI/0TW#A<3Z7G:,cg+
%KcY(BA;^*$gln6FjUVU$i\9T^6pp=i0V0!lEMEmBV')5?E.iXg'khP@"$#8.Ne@WQF4r_!j?O.)."uqOKsc@aXM[+,7dkkH.SR!U
%hEi`E)I*X(%d66%A7B6eG;.b67iDo)0!Z"]/CR;T%-H%a?$sLqe.;?ZL-6ur=1]nr*CPY@L,]&r8#I8Rc6*Oer8qX5>9A%<U(=Fp
%>:B5BCDYY&1XERoi9=YimjM+PNN4_2Srk)*>k\cqk'DJoH#0<ao=]<?h6F2aMCiYnFXO'IZ:oFg:%OPtV^iYO6+S%H8l%=Mm`N9k
%ho>0l:anP,Q=42,&'^>%hVdRAkdAtpRQ8nBQ=KM$'Nr(.[pe[BJ7rBp9ikf;OYC@k;\^h4r<DYA_mcjhO6S1VHHg]$)BJ&,U=%]U
%.K<Fq)eF)&ZaU(#:Tk8!r^#M5R,X%*:7o`kL9Yb.Zh_eP#q*r_(5O<@/]M.NY#]2_'b&RF"$o#,g8N#\:/m`V@2+39U</GGk_tSc
%]W7psbr"4kB!#fR;4?_!2,TFteYf*f/cTY^?rAEhdpd2T204ZGo];'Y.(i"kJfI/lRH"-PO<GYLK;P%AV&5&eE,GVdPctY)YBf$#
%(UIeZ8\\M1p:]1cU,KJL_eqXt8ud55V./_mk1+GThW%qC`eI,(R^VD%+<-s=7d459&2fV(L(Qh;99+hmgtGZ5")]Ga0ho'TNb7eo
%^nU4F[*-[.C.%Ph@t1B";.?MIkBU++&%B_fD"bkV6:a1a^`O<%Hmc*t>0*,6QH($2#JF$k<VGsghl=];0Oj6P-/M^6'$B]o90C`6
%%go]sXnDA3_otO=&4d^];d3>LRJhee>[sb1.e01Vnek06XN`Rh:ZYI*(3h?SQt8ace9",PJEsM/E5#?54\:.Uh"0[j()0o!`&.?O
%DNOIo/S/4UdHM_dJc<"4=uDOW?>\#$RR_Hf]ufs<q&#^G7?q$+;i)qsT7a=#kJk8lBVbIf[aW)T+n-GE7s7q'RKEY'ZLj=LKd*TB
%bS#J[5bq`_\WE.\ilZ86s2$o5'kn'!W.LIpIl*_8MiLc[$IM]#WhJFM`s#BrDm>7Wk]g5%WZ>8MR]=r0-G;V3<[\Yj:+f#9L/Ib]
%gNAN_,aJgH1lfo@E[Coc,^bdt_\`TP@<2(n\Fm6mc.HcP:XRdp><TE.]n,->\%?Pc4;Ga&UW!n(C213i%948n'bh1N7HZs4Q:lHB
%DB7c*9O]Q)1(U=c%5ia#fS9!OBJah^oWi1nD(!i:@lZH?d-GGV9P0mHS.k4)@d*+`s2Z3,FRGNC[iu^+Uu0#u`k/@'B^hD'+B(e@
%#m2uhb'erP#=4PY"UJTF+9MtU!!on@?4IEX<$mh\Zt>bkWM!LhWLh2)6)$Co=4Qq<SNCJVH\WN#)Qr,]1JS?7KFl=n.lbqXRSeIn
%(Fa$H<bj.Q>Xe6$79QcLF+4iJ^",rKSlMaJBR7f];Q.PU=dj&h+W@)HofnXd##%QNrQq3"#+#ZR,OQi6Gu=d%)S(5B!b==/d[7#O
%-<%lA#YjnN+u&KgC5V]?6(aJh6fj,3d/^0c,7G17r6cGY1l(#mcgr."nc[:qdj-m_qb7\?$L!J53"8uY];O%X,gWe::9^N.d@8'W
%N2@aD(=pnrFUT]O#77:^^r!8\L8A#_Lp=c\Ct%&loP#bcqC8*5qM/P][>q-p(t`)R`(Bfs!:U;PNm=kZj;:pNN?XB=%/L5`*)Ajs
%n4u:],fUHBNjH[;KqVV/B/"o]-l`5=>fC0="_TiIG>.C4k?]<JrmaQOS\Y%;%II.?jo<gZF(qFtqKe:p01!cdLA!-rfWV"F[eTkJ
%%7cMsmjT%OcglQXi.%L=THAhM3l*\%8_*aD=P+5pE2gu#arMb)Ttq\kJ?Bp[\Em=sAobE`YTf;jU7h%&;D9R)35I#ThL=>sIKt+#
%<=Ld($eUQt(U=Q',SLFJZY,77jF??sq3]cD9V*l%`N38:5`8jNNnua'mgMQHZ'HCp)!XM7hO9A1[U(7`\$p5./5@IuVH*Vp6EhdX
%$dm'UWOBNWnk]L_%*SNU/"I%n.HG2s+04dNjC=6hDpI%GI-RW+b-`Jg\f&6hSW$FP]SstY!jg`4jZgUD3?*Q)*g<$.R6WM,M]uHX
%LM3/Z]jfIBr9Dm*a0-R&<;u'J.sC41:Th]LdipXc%+r'rTTWtf!p4=Uk`8.H06$!0@t,lTS9f"4rINI\ILqHr$,'B7)2`.e^t50k
%K*N'S3sT7'PaV)R#U"\MP6dRGC[N42ZrqBb]L+6K$T,.=)kYUu1FQ6&'+!\,FrT?RO#ZAER`#V5-FYS;7"[T-<]XXo8i&=?'/-F4
%AelnDT!FK)d&!n$BR"mJJp2U-peHTBX=82/!i!4`aG\D!$cbL+J)IC-PkgF_UT@j<<B;0I0)=e)b+)+9\a0]nEbtaPMnd%%qhr5(
%q"oua^\I\a^VBQQq8,RNMnW#m[^JuN/>CGU'G0UGTj<JoV5D\DoOi4_\*I&35pG>NPR7%&EZ#s(:I6l[jta*XccBZk(mo2\S'.2K
%]W&GY,%HGkgg%jDD#,\&j>'c*"^7hN/_#nfHU`<9?=AY67bqaRa"7AOaf#90kpdH:2hOQfeE)N=Z8S>t(X2Ka:*BQjl.2i3=YXRZ
%dkRk49X$^p.@?n,(]AlD=_ji:UNnAB!'AZBi16g,l^EHk;B#mX,S3d3Ar4<U5p/>FgDl%3XG"U4c>GsY4.S$D4Q-G,^*["*$!E]4
%,0@!3Ni1.@VsG@HE;q,*g8D)]0"QO`BKg\FF4's0SX;V81KQ7XmU(L"0K_GLK8L,,doS4Ar9ts'Vjm=!9=GlZct%:[#rJ:m$/"?'
%_P;a:72FUn(!sSe08Keg]7Q`,78k^gf"@n'N;\MlPF5r"UinXh'=Gk_$1AF!ND5a^1Wnb02ZX]<]X#XuZ,!5qPn@[nch\dD$oO0Q
%,t1^C&GCA/nlINP0h#h!/4oH/Z-9KCo#k/p0I0A$,f0'l6aHp30_[Cm@m%5a2Ks9;(W?H7TR!-j$&ZVLp@tJoge/X&."^A[Os.e<
%XDp7BLG'+_C"(`o0T8:m6bdpMBUYiD)PYsH[j>^JB*k"M=RI4a1e*?pGR!(O9o,`]*!9U?$o%Dk!#n]f/B4q/7hU?d[nm4-_,uRA
%801*&-Sh!?B/p#AhaIN/JF18Uc!2QWn^V<bSL^*]NV+$)BR]<4](C`3q`Qkpr/G$P!'!g]qOSmVN4t&eJT<)9%/Sup\Nhm3Je9@r
%a;<ni]0IfBet03V6!#=k;\pj/_#Fis:r48Z5YR7JV&YX702PJp8VSAIf^)k97/Lnfhg^4*BGrP:5fnSSA`UGJ"j3#]]75Ckr_niW
%*u4%q>=^VVBIsQ]JCL)d5W%Z<qN^'0ckt:Io?."\e=;.<?fDgrRR?sb;"IPX3uHkI:!JI4n_jCWC<f*9M=J8fC-FAd5FIt$$JE8o
%Z.,:rjr5*!)t()Z:>Xa$k/62si;QPfc9UtaMt>2:g?0jP/Q21;EI)SR+uSPVq6%^42EU;!PP=4<q65*^E.8odB;#(?`VC92m>I2&
%`i/^3pgA&j(cCKLq:<O\juVnqPP:BAq69X5E.8QZ*tI]Z14B2R`VIM7m2D2_G,Y4UI*WYbT0pj`K8\*(n)A^fSTZ=$l:.^4B7/#B
%gn-pX7tie0IgS'rTXgM%FVE8p2njbK2'3V"_>Q0g3<RM`O1i<#R^:'/c_0Eq@V9Z[!,BeFF5:?pn##6;nX\D6'P]f_Aj_?BS3/N-
%MGjD`\B_i#9oT!krFhdEfe`P>5bjKk>5Q_"V[(WF+I]V<oS%V8@=UP:^$gr4l*IAN1'V`8q_9j?<VfA;S"X8tqMQ4F=$"5E_^KV#
%(o"jD':4%Y-X;muchFc65WEHTTO@C1IQ3o_34WcZ1GEfW?!a5`Es6\q'["K+.<;/56`/b0Q>TCl;BYn7n8I*4P)`&8Co^Zm%1cC[
%Ai.5<H/pS=gc6D.:c[OPI)%o,Zpj;MS=LjEf6L!!M-W23lZ-YlO.TcIf,2NQRkT=>>LrTg;+qNQ&TK#UCTi/%??:L8C%g6Gr^8Ti
%*)+9D7cd).KrcH*5;J%p`%aO^QWpfC#<&QD!7?FB;?F4<aGK:@a5*+D2AL;c9<U]?kK)`SL,.cGGg3IS[5e;_+UfD:-+_]El8Uad
%?:98VS_k*PRPtsV]VW%$%kD+tH(<5A1Zm^N-ls3/cEM>.frq`-M"83<*CFTKZM7q<8JD;6"QM3bVjDMgPdh,?#V@G_iOE>26O(68
%9uSASYEbD?<hS0fBQr_^-!W:`*]Qgl%UX@:k0A-7aJ#Dg_H:JA=(]D<'Mj"GoM()39rDf"TrG;=/)DM0ID[kV-rh>WfE3]PPI%.n
%A&;IR&TZN4Bh[!kj,m;pV,Pha@oFY=KF+jU=ZYP?Oi$.g!R\F>[U<8*NnYA$Aht;?1'XFCC@f]/##IJkbCtY-RQN6L)+.m6n2sJK
%^]KP.V^NH.l2=FP,`Z@KMrQc>#b8lUj-SbG0<kXLE'/M50bc"SCH=q/psSZ%2P'4s_eqhHd3nu/9CaXYTa4pC%giAIjuJ%RW-c<Q
%?7MF`?3iO4@5pcoLC?b[*"VHhJAt.^;TggP9lV_36384BJh]C,d1f5/CMt(NGa9S)nt!XUDAa/-'?!n`AZeMWm<HfZ34d_#@.mNs
%c)(Co!5G+XbkHCbYS;+W+XuJeFAMBgq@@VaTB!@h"H@X,"//uR6!.Fu=t!140RkW37I(!0A(+Ad"8N<'NhA#>q^!kja71).RMo+6
%ZnJCl04:p-q#[W\Q*#h1\.BlN_]=ngK9.HoD[RI]K]&8E.t5WpleK4GdkqK"N(c``A[,=CcD7uAd0ec02cMD`1-qP!f:ptWW_I>F
%B7VBMC'iQ@$Z9afRO1VQ9F)t5NT`::V9*:X/T>m2aLR!^\Nt=G&f0=^KTT>l,6C;F7?ght"7;AC1o^39#iUG^3q4sVr5G9<5Hf_#
%L/8YlJCES.L!=Y+"7ph&%so`A7(t0sEA1eH=j=0,=MO(GJm;H5f%9U^FCjE)^(.JaP:(7ng=;t09.lS`7&+27OnrX/]4:YF>'._p
%(9p/-?saZV'Y@(TII3osRg@b_&@+Cb6!m.SNkpRLBAmj?.C5-*H';(K9Nbg(cHVqHm\.=OqeK"?],pQr9KHi@N/Ee.JfO"3pR[.R
%[LVptT^N/g-0O^&3q;Qa\5%Tm-*IR@95%GBP(2_IY7qPmQXO,0ND3ts\!_2beuAV=6;?/>r/[O`>s-7VP5D6.X9rP4V0!2Q5D,DG
%L[&MLo?gD588:m0eW6TiBW1n5C:6M&-W.3=F7'tA1T8ueet5@TWjqb!h$-5RCT)-'RVNA_9i:NDTt3g15!;lS9[2Zdob48aJ#If-
%2.m?J&#A?YU&)=La:6\GVe1.OrYTBnd!V#gpj60%qrIG-aTC'9WZ,@0.h:)=:ijUL\fkgk0N>MObu]YbG,b;]:u+5k(CeoUU#rGM
%qJ"Hl5?'k4)Yp*'iRAhUeK7-&(<ncgD1>K^IAaaWgK<B<L?c6(oV:q,2tsdNc)OT=*g?=/1U>rZ[.&hf_!Djb%.)mGR=JsODA2uW
%n\B#$MEV[bbt5C$%s*e*dc^C!1tA]P1@a4s*s&78O4^<O3B-]RT';K,HfW#D%QubJ$9C6UF0dQ!KkT]*e=rLT)6^sBCfcuN3ET\S
%I+L-"0GqC8@F.eFEk/V7eW0t2QZJ&:jOpFA7Z'P-fju58P#2_sh5aB&FmMah)!0k6p8$`e4q5V]c`:"*X).JAjW;6>al/XO,Gp&_
%7XangD9S?3<@u@WLrnh]-]NZtB#&%=B(DEKbFh%n)"?oDq]':L(c;f)W[Q_!@^I^j_a>Jl>VX-QO<7>0Ek0%!H31T_Y\KsB@VBA<
%YXGto@X0#2%23_2';.cZrf6l@&-;0e&e]7ogRN,7kj(S@0[])*=]cS!J84ng%MU8Ad_LI]`7EeGTNn^D0c_;E54)GHA1Jc@;X8Rd
%bC>b`g#X_&"[T;CW'*=.S4#^K_Xc%XFoMb]j[Zig;JYpm[?r6U*]orYdkah!GoW%VcUYjt(G^uZ90o2bdkX+hga0P#2h/C8>*Q=S
%,Z;l0;0-8XKSfGa#a72M@CSoV:XAs-##Xh'b:I/19gM]f/C=fdH,em,EWTB1`h1;tGdJ:oK')[/9_d)i(,/h-.ACG@j@J77V2&RF
%Y6L!_*YAgn^=n^1M]"?$V=CCMhcU"Jp=;@3N@-.6Stlk%;55u!4Gf1Kq_Z93@O?`&Qf<$=Yr'J\%$%)a<iHOgd2fqX4JtndqbD*b
%[:0%1LS;f>,=%sp)B?Rl%'rM@:@WkM.A!6#Hbb5]Je0C=a)I&+QL;+nm!`jR,Xq5SMt&&_dfd_H>=ap2046?SYUg;eHL49I#L@Dn
%:qhia4qNlc#_;MJnYEZ5D7AOsnYNM)VI.;<SPg:$<IitjGQ\Sm/iPoZoWR29fEPh'P/IYHNZjoLOB!E!_Q=+S"AQ*O"c!mX_'tgc
%E4Gr+!7i8F`A)t@BUn7)Os^5]IL#[mkD+ae=:/q.n4T(B83jKT"_#TL!$e;-5d:_fZ39N?Jg<%g;E0NN2UL5B6gtqD314CsRN]VN
%36*ZQ*;Q?p-HW?tO'bR[I@l(dc&3\^N(+LZ"A;Q"JB\36C^n]($qmoHOJ`700p^Tj\O4/-^sQA:,6:Qga,o<DTSouhk$&dHI+;L-
%4[HC_"uhc0LTfa)(^d#ePf8L@$+PH>4;6'MNDXXo31OG;<h>rBU5)%i4Nl[d91f\/7m(_r8<*jahYC"gJ5[Oc(lIE/QN'5j!!`YP
%E&`pj50CQ]JuSnX<B1gSJgAA=E\DR^BQOhS%ap&A&JgHJ,`:R]L(g'5A>Q`>(dMjjMib:#nOml4Q[$St`5*(/K^S?+iAkb<#e4]G
%Ub:CM$gAb<?'=u6S4&S!B[*=QYs1O7?Acq?`#gTP[kt-6*6n_22cUm?m;E-5PfooL")u,M`/,$WahVdWJeUESh9N)G)015pdKBkf
%?8tP&TIAIiU?aQsj7$aK8-W,42?)g9\D0^g/W&p(`lI9Q?Q,NbVU*I9qN%.Ha)#ga>>pis3$.)j(He;0&A,al.Z_6`ARE$FBn^rr
%\c"@I$jMdc2uuj9:Pj2`i4&68-TP>0NZl6B(jO[Z.!W2>\$#PqU\eI4$OaFW)H'!HSiA%QZ%0]aBX`ES`gG[TKO=h?Z%l"l6l""`
%2F+G'iG(^#T3I<UaU'M=0E!.;@+^+b+FD=blS4+^c\@qO!<sUP80g[AG46n$L+H=]K5nLRKC%Ri&<cD=<T^.'[mmmc#r0:#%l!i$
%G.a3<Pp"G'In#)!(V<GGC(i3kbj$N[1l>OH[J#c;[hFU$pOW?qM-1WNa#f,\?)4?oo1DSV;*YX+gqj?o.i0AB]XG0`gk+P3%;m=Y
%[Qn?o*Pj>sG0.[\_(EUH((e^q_(And/b>7c(?5!<7"]Ajl_H0,(tf&$.&"S\OXh42k5FUrR"=XsiXZ1d:RN<pYsK&Do87pe<680Z
%IoN17Oclp%rBd2S0Z49&>?IsY7*&HsIW5G?rYKpc:&kq.^"3XtYiL@,NVXLE!A)nW<WmjWlk#K<([KBC#hT_?R4gH=rrK?6=N=cb
%#P!4M19ceQfO9S[J]Y_hr*l#'h?,)4lem[a7XYN/4KSK7p6kn:YS487^,VKFo"[XY+7o*_A<d$ZC=J$SN[D3i(FoPO!d;4IaF(8\
%X:Kj'/3([WCc_QD?m7.U_dQMn!)Ss+[9^qF=\HpQaJA0%h%^;X1pl([RiC+;Tm7fMMk]fld``+kC6q?OrP6XY4X_T:bfl/bEu:IW
%>KF"mbio$lFPcUUo4Gg)BO6L,A0b?16LB8B<f'*rkGU123r2=*mG1rQ)1Bm@;WWHQ82A9kn>CCbRWfKUgk0%=d*/(bR8N$fl?!#`
%Vt7%E/7-b@"6-%MgVh$!EiN7^N/d&Y?diS"mkq>@WaH<4#+:Ma5nJEh.cn1;LDD)UQD^H+WmXkSmbHNV5r@1O+-X#O6hWoL2BS-h
%*P7NpdpCLNN:=IBTnA4SRa^D/\\jIRBSNlkh@e&2#ToM6D:&bAOV?(Y=n=Ab0FC>3bfAd\a,j<[]B3TGba(;+]$k+*Rk[bf$nZ[S
%oXPDLU)kO7TS]YC!)j;qZi[luJ_>Pi8A1M>!6ET&cq5.d6quW0B!V%[f,cZ79!M0Z]M2/@I*@DeoUVh[q:H"Uo%&VU7uEG"q]h8:
%0lGT^"fX7Z)C#9tf#WC%Qf9bR;$;Sm3'@/t4O;rK3rTE@d7_Aug2sb8)(umD;>fR3@f`tDfZFa6"e3_V`5]"e?"6\Zj=IeG">3hY
%&-0F9SqpLl;s7ZnUI^,L(mYa9f"tHt"@,SNXTb+$0UYbM-b<r;>B()SZKok[44[nK)WY[;O8[S=FKtKUo:)i%fO&;T`r/5/r1@l+
%-5W<Npa$P\./GmJOp"4(+(20:MCNRJ=q2?d=VDP7HWe7N:"<%Nh2u"4NaC]NN.MTA$&N4blK3kij@IA)aQNh2+p7W[^*?Qp\H+pH
%,WG@906MGL3J\_s'Y9CB;;LM]\>*IV_r.S&LXOrH$/@Q"1@]P^=6f3,I_BL7OT6Omk\B%X'sIY44gS8K"&6)XD.dMShQT/Tql;f^
%rt"MoqV0bL;.$[XYj/qaCX:s;e\7ZjNrK2E5p'r-ctEK;i8%c?5;@dJ?2~>
%AI9_PrivateDataEnd
